package levy.daniel.application.apptechnic.configurationmanagers.gestionnairespreferences.metier.sections;

import java.io.File;
import java.io.IOException;
import java.io.Reader;
import java.io.Writer;
import java.nio.charset.Charset;
import java.nio.charset.MalformedInputException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.List;
import java.util.Locale;
import java.util.Properties;
import java.util.Set;
import java.util.TreeSet;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import org.apache.commons.lang3.StringUtils;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

import levy.daniel.application.ConfigurationApplicationManager;
import levy.daniel.application.apptechnic.configurationmanagers.gestionnairesbundles.BundleConfigurationProjetManager;
import levy.daniel.application.model.metier.sections.impl.SectionHit;

/**
 * CLASSE SectionHitGestionnairePreferencesControles :<br/>
 * Classe UTILITAIRE (<i>final avec toutes les méthodes static</i>) chargée de :
 * <ul>
 * <li><b>gérer les <i>messages</i> de validation des RG comme des "préférences"</b> 
 * (paramétrées 1 fois par l'Administrateur puis stockées 
 * dans un fichier .properties) qui conservent la même valeur 
 * tant qu'elles sont inchangées.</li>
 * <li>permettre à l'ADMINISTRATEUR DE DONNEES de la MOA 
 * de <b>modifier ces messages à l'attention des utilisateurs</b>.</li>
 * <li><b>gérer les préférences relatives aux REGLES DE GESTION (RG) applicables 
 * à un OBJET METIER : {@link SectionHit}</b>.</li>
 * <li>fournir à toute l'application des <b>SINGLETONS</b> des 
 * <b>messages de validation par défaut 
 * (actuellement stockés dans un .properties) des Règles de Gestion (RG)</b>
 *  d'un OBJET METIER pour chaque attribut et chaque RG de l'attribut</li>
 * <li>gérer comme des préférences les <b>messages 
 * émis par les contrôles de validation des RG</b>.</li>
 * <li><b>créer un fichier .properties initial</b> avec des valeurs (messages) 
 * codées en dur dans la classe en cas de défaut de livraison du 
 * <code><b>ressources_externes/preferences/metier/sections/
 * OBJETMETIER_CONTROLES.properties</b></code></li>
 * </ul>
 *
 * - Exemple d'utilisation :<br/>
 *<br/>
 * 
 * - Mots-clé :<br/>
 * répertoire du projet, System.getProperty("user.dir"),<br/>
 * Properties, préférences, Preferences, <br/>
 * Template, template, lire dans fichier,<br/>
 * enregistrer des préférences dans un Properties, fichier properties, <br/>
 * commentaire dans un fichier properties, écrire commentaire, <br/>
 * lire dans un fichier properties, écrire dans un fichier properties, <br/>
 * créer une String à partir d'une liste de lignes, <br/>
 * <br/>
 *
 * - Dépendances :<br/>
 * <br/>
 *
 *
 * @author daniel.levy Lévy
 * @version 1.0
 * @since 13 août 2019
 *
 */
public final class SectionHitGestionnairePreferencesControles {

	// ************************ATTRIBUTS************************************/
	
	/**
	 * "Classe SectionHitGestionnairePreferencesControles".<br/>
	 */
	public static final String CLASSE_SECTIONHIT_GESTIONNAIRE_PREFS_CONTROLES 
		= "Classe SectionHitGestionnairePreferencesControles";

	//*****************************************************************/
	//**************************** SEPARATEURS ************************/
	//*****************************************************************/

	/**
	 * System.getProperty("file.separator")
	 */
	public static final String SEPARATEUR_FICHIER 
		= System.getProperty("file.separator");
		
	/**
	 * " - ".<br/>
	 */
	public static final String SEPARATEUR_MOINS_AERE = " - ";

	
	//*****************************************************************/
	//**************************** CHARSETS ***************************/
	//*****************************************************************/
	/**
	 * Charset.forName("UTF-8").<br/>
	 * Eight-bit Unicode (or UCS) Transformation Format.<br/> 
	 */
	public static final Charset CHARSET_UTF8 
		= Charset.forName("UTF-8");
	
	//*****************************************************************/
	//**************************** SAUTS ******************************/
	//*****************************************************************/	
	/**
	 * Saut de ligne spécifique de la plateforme.<br/>
	 * System.getProperty("line.separator").<br/>
	 */
	public static final String NEWLINE 
		= System.getProperty("line.separator");

	/**
	 * Saut de ligne JAVA
	 * '\n'.<br/>
	 */
	public static final char SAUT_LIGNE_JAVA = '\n';

	/**
	 * "&lt;br/&gt;".<br/>
	 */
	public static final String SAUT_LIGNE_HTML = "<br/>";
		
	/**
	 * '='.<br/>
	 */
	public static final char EGAL = '=';
	
	/**
	 * "méthode lireStringsDansFile(File pFile, Charset pCharset)".<br/>
	 */
	public static final String METHODE_LIRE_STRINGS_DANS_FILE 
		= "méthode lireStringsDansFile(File pFile, Charset pCharset)";

	// CONTROLES ***************************************************
	/* 1 - numDepartement. **************/
	/**
	 * clé de messageSectionHitNumDepartementRenseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.numdepartement.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_NUMDEPARTEMENT_RENSEIGNE_01 
		= "message.SectionHit.numdepartement.renseigne";
	
	/**
	 * messageSectionHitNumDepartementRenseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitNumDepartementRenseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le numéro de département de la section HIT (colonnes [1-3] du HIT) 
	 * doit être renseigné (obligatoire)".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_NUMDEPARTEMENT_RENSEIGNE_01_EN_DUR 
		= "le numéro de département de la section HIT (colonnes [1-3] du HIT) doit être renseigné (obligatoire)";
		
	/**
	 * clé de messageSectionHitNumDepartementRegex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.numdepartement.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_NUMDEPARTEMENT_REGEX_02 
		= "message.SectionHit.numdepartement.regex";
	
	/**
	 * messageSectionHitNumDepartementRegex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitNumDepartementRegex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le numéro de département doit comporter exactement 
	 * 3 chiffres dans les colonnes [1-3] du HIT
	 * ('030' pour 03, '300' pour 30, '972' pour 972)".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_NUMDEPARTEMENT_REGEX_02_EN_DUR 
		= "le numéro de département doit comporter exactement 3 chiffres dans les colonnes [1-3] du HIT ('030' pour 03, '300' pour 30, '972' pour 972)";
	
	/* 2 - numSection. **************/
	/**
	 * clé de messageSectionHitNumSectionRenseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.numsection.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_NUMSECTION_RENSEIGNE_01 
		= "message.SectionHit.numsection.renseigne";
	
	/**
	 * messageSectionHitNumSectionRenseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitNumSectionRenseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le numéro de section de la section HIT (colonnes [4-9] du HIT) doit être renseigné (obligatoire)".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_NUMSECTION_RENSEIGNE_01_EN_DUR 
		= "le numéro de section de la section HIT (colonnes [4-9] du HIT) doit être renseigné (obligatoire)";
		
	/**
	 * clé de messageSectionHitNumSectionRegex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.numsection.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_NUMSECTION_REGEX_02 
		= "message.SectionHit.numsection.regex";
	
	/**
	 * messageSectionHitNumSectionRegex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitNumSectionRegex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le numéro de section doit comporter exactement 6 chiffres 
	 * (Numéro de section sur 4 chiffres significatifs maxi complété 
	 * éventuellement avec des 0 à gauche et indice sur 2 chiffres 
	 * significatifs maxi complété éventuellement avec des 0 à gauche. 
	 * Exemples : section 26 indice 4 = 002604, section 1 indice 0 = 000100
	 * , section 162 indice 65 = 016265) - (colonnes [4-9] du HIT)".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_NUMSECTION_REGEX_02_EN_DUR 
		= "le numéro de section doit comporter exactement 6 chiffres "
				+ "(Numéro de section sur 4 chiffres significatifs maxi "
				+ "complété éventuellement avec des 0 à gauche et indice "
				+ "sur 2 chiffres significatifs maxi complété éventuellement "
				+ "avec des 0 à gauche. "
				+ "Exemples : section 26 indice 4 = 002604"
				+ ", section 1 indice 0 = 000100"
				+ ", section 162 indice 65 = 016265) - (colonnes [4-9] du HIT)";
	
	/* 3 - sens. ***********/
	/**
	 * clé de messageSectionHitSensRenseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.sens.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_SENS_RENSEIGNE_01 
		= "message.SectionHit.sens.renseigne";
	
	/**
	 * messageSectionHitSensRenseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitSensRenseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le sens de la section HIT (colonne [10] du HIT) doit être renseigné (obligatoire)".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_SENS_RENSEIGNE_01_EN_DUR 
		= "le sens de la section HIT (colonne [10] du HIT) doit être renseigné (obligatoire)";
		
	/**
	 * clé de messageSectionHitSensRegex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.sens.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_SENS_REGEX_02 
		= "message.SectionHit.sens.regex";
	
	/**
	 * messageSectionHitSensRegex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitSensRegex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le sens de la section HIT (colonne [10] du HIT) doit comporter exactement 1 chiffre".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_SENS_REGEX_02_EN_DUR 
		= "le sens de la section HIT (colonne [10] du HIT) doit comporter exactement 1 chiffre";
		
	/**
	 * clé de messageSectionHitSensNomenclature03 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.sens.nomenclature"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_SENS_NOMENCLATURE_03 
		= "message.SectionHit.sens.nomenclature";
	
	/**
	 * messageSectionHitSensNomenclature03 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitSensNomenclature03 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le sens de la section HIT (colonne [10] du HIT) doit respecter une nomenclature [1, 2, 3, 4, 5]".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_SENS_NOMENCLATURE_03_EN_DUR 
		= "le sens de la section HIT (colonne [10] du HIT) doit respecter une nomenclature [1, 2, 3, 4, 5]";
	
	/* 4 - nature. **************/
	/**
	 * clé de messageSectionHitNatureRenseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.nature.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_NATURE_RENSEIGNE_01 
		= "message.SectionHit.nature.renseigne";
	
	/**
	 * messageSectionHitNatureRenseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitNatureRenseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "la nature de la section HIT (colonne [11] du HIT) doit être renseignée (obligatoire)".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_NATURE_RENSEIGNE_01_EN_DUR 
		= "la nature de la section HIT (colonne [11] du HIT) doit être renseignée (obligatoire)";
		
	/**
	 * clé de messageSectionHitNatureRegex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.nature.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_NATURE_REGEX_02 
		= "message.SectionHit.nature.regex";
	
	/**
	 * messageSectionHitNatureRegex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitNatureRegex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "la nature de la section HIT (colonne [10] du HIT) doit comporter exactement 1 chiffre".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_NATURE_REGEX_02_EN_DUR 
		= "la nature de la section HIT (colonne [11] du HIT) doit comporter exactement 1 chiffre";
		
	/**
	 * clé de messageSectionHitNatureNomenclature03 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.nature.nomenclature"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_NATURE_NOMENCLATURE_03 
		= "message.SectionHit.nature.nomenclature";
	
	/**
	 * messageSectionHitNatureNomenclature03 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitNatureNomenclature03 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "la nature de la section HIT (colonne [11] du HIT) doit respecter une nomenclature [1, 2, 3, 4, 5, 6, 7, 8, 9]".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_NATURE_NOMENCLATURE_03_EN_DUR 
		= "la nature de la section HIT (colonne [11] du HIT) doit respecter une nomenclature [1, 2, 3, 4, 5, 6, 7, 8, 9]";
	
	/* 5 - classe. **************/
	/**
	 * clé de messageSectionHitClasseRenseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.classe.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_CLASSE_RENSEIGNE_01 
		= "message.SectionHit.classe.renseigne";
	
	/**
	 * messageSectionHitClasseRenseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitClasseRenseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "la classe de la section HIT (colonnes [12-13] du HIT) doit être renseignée".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_CLASSE_RENSEIGNE_01_EN_DUR 
		= "la classe de la section HIT (colonnes [12-13] du HIT) doit être renseignée";
		
	/**
	 * clé de messageSectionHitClasseRegex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.classe.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_CLASSE_REGEX_02 
		= "message.SectionHit.classe.regex";
	
	/**
	 * messageSectionHitClasseRegex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitClasseRegex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "la classe de la section HIT (colonnes [12-13] du HIT) doit comporter exactement 2 chiffres ('00')".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_CLASSE_REGEX_02_EN_DUR 
		= "la classe de la section HIT (colonnes [12-13] du HIT) doit comporter exactement 2 chiffres ('00')";
	
	/* 6 - anneeTraitement. **************/
	/**
	 * clé de messageSectionHitAnneeTraitementRenseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.anneeTraitement.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_ANNEETRAITEMENT_RENSEIGNE_01 
		= "message.SectionHit.anneeTraitement.renseigne";
	
	/**
	 * messageSectionHitAnneeTraitementRenseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitAnneeTraitementRenseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "l'année de traitement de la section HIT (colonnes [14-15] du HIT) doit être renseignée (obligatoire)".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_ANNEETRAITEMENT_RENSEIGNE_01_EN_DUR 
		= "l'année de traitement de la section HIT (colonnes [14-15] du HIT) doit être renseignée (obligatoire)";
		
	/**
	 * clé de messageSectionHitAnneeTraitementRegex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.anneeTraitement.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_ANNEETRAITEMENT_REGEX_02 
		= "message.SectionHit.anneeTraitement.regex";
	
	/**
	 * messageSectionHitAnneeTraitementRegex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitAnneeTraitementRegex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "l'année de traitement de la section HIT (colonnes [14-15] du HIT) doit comporter exactement 2 chiffres".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_ANNEETRAITEMENT_REGEX_02_EN_DUR 
		= "l'année de traitement de la section HIT (colonnes [14-15] du HIT) doit comporter exactement 2 chiffres";
	
	/* 7 - zoneLibre1. *******/
	/**
	 * clé de messageSectionHitZoneLibre1Renseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.zoneLibre1.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_ZONELIBRE1_RENSEIGNE_01 
		= "message.SectionHit.zoneLibre1.renseigne";
	
	/**
	 * messageSectionHitZoneLibre1Renseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitZoneLibre1Renseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "la zone libre de la section HIT (colonnes [16] du HIT) doit être renseignée (1 espace)".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_ZONELIBRE1_RENSEIGNE_01_EN_DUR 
		= "la zone libre de la section HIT (colonnes [16] du HIT) doit être renseignée (1 espace)";
		
	/**
	 * clé de messageSectionHitZoneLibre1Regex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.zoneLibre1.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_ZONELIBRE1_REGEX_02 
		= "message.SectionHit.zoneLibre1.regex";
	
	/**
	 * messageSectionHitZoneLibre1Regex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitZoneLibre1Regex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "la zone libre de la section HIT (colonnes [16] du HIT) doit comporter exactement 1 espace".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_ZONELIBRE1_REGEX_02_EN_DUR 
		= "la zone libre de la section HIT (colonnes [16] du HIT) doit comporter exactement 1 espace";
	
	/* 8 - numRoute. *******/
	/**
	 * clé de messageSectionHitNumRouteRenseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.numRoute.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_NUMROUTE_RENSEIGNE_01 
		= "message.SectionHit.numRoute.renseigne";
	
	/**
	 * messageSectionHitNumRouteRenseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitNumRouteRenseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le numéro de la route de la section HIT (colonnes [17-20] du HIT) doit être renseigné (obligatoire)".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_NUMROUTE_RENSEIGNE_01_EN_DUR 
		= "le numéro de la route de la section HIT (colonnes [17-20] du HIT) doit être renseigné (obligatoire)";
		
	/**
	 * clé de messageSectionHitNumRouteRegex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.numRoute.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_NUMROUTE_REGEX_02 
		= "message.SectionHit.numRoute.regex";
	
	/**
	 * messageSectionHitNumRouteRegex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitNumRouteRegex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le numéro de la route de la section HIT (colonnes [17-20] du HIT) doit comporter exactement 4 chiffres".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_NUMROUTE_REGEX_02_EN_DUR 
		= "le numéro de la route de la section HIT (colonnes [17-20] du HIT) doit comporter exactement 4 chiffres";
	
	/* 9 - indiceNumRoute. *******/
	/**
	 * clé de messageSectionHitIndiceNumRouteRenseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.indiceNumRoute.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_INDICENUMROUTE_RENSEIGNE_01 
		= "message.SectionHit.indiceNumRoute.renseigne";
	
	/**
	 * messageSectionHitIndiceNumRouteRenseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitIndiceNumRouteRenseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "l'indice numérique de la route de la section HIT (colonnes [21] du HIT) doit être renseigné".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_INDICENUMROUTE_RENSEIGNE_01_EN_DUR 
		= "l'indice numérique de la route de la section HIT (colonnes [21] du HIT) doit être renseigné";
		
	/**
	 * clé de messageSectionHitIndiceNumRouteRegex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.indiceNumRoute.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_INDICENUMROUTE_REGEX_02 
		= "message.SectionHit.indiceNumRoute.regex";
	
	/**
	 * messageSectionHitIndiceNumRouteRegex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitIndiceNumRouteRegex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "l'indice numérique de la route de la section HIT (colonnes [21] du HIT) doit comporter exactement 1 chiffre".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_INDICENUMROUTE_REGEX_02_EN_DUR 
		= "l'indice numérique de la route de la section HIT (colonnes [21] du HIT) doit comporter exactement 1 chiffre";
	
	/* 10 - indiceLettreRoute. *******/
	/**
	 * clé de messageSectionHitIndiceLettreRouteRenseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.indiceLettreRoute.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_INDICELETTREROUTE_RENSEIGNE_01 
		= "message.SectionHit.indiceLettreRoute.renseigne";
	
	/**
	 * messageSectionHitIndiceLettreRouteRenseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitIndiceLettreRouteRenseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "l'indice lettre de la route de la section HIT (colonnes [22] du HIT) doit être renseigné (ou espace pour pas d'indice)".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_INDICELETTREROUTE_RENSEIGNE_01_EN_DUR 
		= "l'indice lettre de la route de la section HIT (colonnes [22] du HIT) doit être renseigné (ou espace pour pas d'indice)";
		
	/**
	 * clé de messageSectionHitIndiceLettreRouteRegex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.indiceLettreRoute.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_INDICELETTREROUTE_REGEX_02 
		= "message.SectionHit.indiceLettreRoute.regex";
	
	/**
	 * messageSectionHitIndiceLettreRouteRegex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitIndiceLettreRouteRegex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "l'indice lettre de la route de la section HIT (colonnes [22] du HIT) doit comporter exactement 1 lettre (ou espace pour pas d'indice)".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_INDICELETTREROUTE_REGEX_02_EN_DUR 
		= "l'indice lettre de la route de la section HIT (colonnes [22] du HIT) doit comporter exactement 1 lettre (ou espace pour pas d'indice)";
	
	/* 11 - categorieAdminRoute. *******/
	/**
	 * clé de messageSectionHitCategorieAdminRouteRenseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.categorieAdminRoute.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_CATEGORIEADMINROUTE_RENSEIGNE_01 
		= "message.SectionHit.categorieAdminRoute.renseigne";
	
	/**
	 * messageSectionHitCategorieAdminRouteRenseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitCategorieAdminRouteRenseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "la catégorie administrative de la route de la section HIT (colonne [23] du HIT) doit être renseignée (obligatoire)".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_CATEGORIEADMINROUTE_RENSEIGNE_01_EN_DUR 
		= "la catégorie administrative de la route de la section HIT (colonne [23] du HIT) doit être renseignée (obligatoire)";
		
	/**
	 * clé de messageSectionHitCategorieAdminRouteRegex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.categorieAdminRoute.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_CATEGORIEADMINROUTE_REGEX_02 
		= "message.SectionHit.categorieAdminRoute.regex";
	
	/**
	 * messageSectionHitCategorieAdminRouteRegex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitCategorieAdminRouteRegex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "la catégorie administrative de la route de la section HIT (colonne [23] du HIT) doit comporter exactement 1 chiffre".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_CATEGORIEADMINROUTE_REGEX_02_EN_DUR 
		= "la catégorie administrative de la route de la section HIT (colonne [23] du HIT) doit comporter exactement 1 chiffre";
				
	/**
	 * clé de messageSectionHitCategorieAdminRouteNomenclature03 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.categorieAdminRoute.nomenclature"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_CATEGORIEADMINROUTE_NOMENCLATURE_03 
		= "message.SectionHit.categorieAdminRoute.nomenclature";
	
	/**
	 * messageSectionHitCategorieAdminRouteNomenclature03 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitCategorieAdminRouteNomenclature03 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "la catégorie administrative de la route de la section HIT (colonne [23] du HIT) doit respecter une nomenclature [1, 2, 3, 4, 5, 6, 7, 8, 9]".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_CATEGORIEADMINROUTE_NOMENCLATURE_03_EN_DUR 
		= "la catégorie administrative de la route de la section HIT (colonne [23] du HIT) doit respecter une nomenclature [1, 2, 3, 4, 5, 6, 7, 8, 9]";
	
	/* 12 - typeComptage. *******/
	/**
	 * clé de messageSectionHitTypeComptageRenseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.typeComptage.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_TYPECOMPTAGE_RENSEIGNE_01 
		= "message.SectionHit.typeComptage.renseigne";
	
	/**
	 * messageSectionHitTypeComptageRenseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitTypeComptageRenseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le type de comptage de la section HIT (colonne [24] du HIT) doit être renseigné".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_TYPECOMPTAGE_RENSEIGNE_01_EN_DUR 
		= "le type de comptage de la section HIT (colonne [24] du HIT) doit être renseigné";
		
	/**
	 * clé de messageSectionHitTypeComptageRegex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.typeComptage.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_TYPECOMPTAGE_REGEX_02 
		= "message.SectionHit.typeComptage.regex";
	
	/**
	 * messageSectionHitTypeComptageRegex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitTypeComptageRegex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le type de comptage de la section HIT (colonne [24] du HIT) doit comporter exactement 1 chiffre".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_TYPECOMPTAGE_REGEX_02_EN_DUR 
		= "le type de comptage de la section HIT (colonne [24] du HIT) doit comporter exactement 1 chiffre";
				
	/**
	 * clé de messageSectionHitTypeComptageNomenclature03 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.typeComptage.nomenclature"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_TYPECOMPTAGE_NOMENCLATURE_03 
		= "message.SectionHit.typeComptage.nomenclature";
	
	/**
	 * messageSectionHitTypeComptageNomenclature03 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitTypeComptageNomenclature03 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le type de comptage de la section HIT (colonne [24] du HIT) doit respecter une nomenclature [1, 2, 3, 4, 5, 6, 7, 8, 9]".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_TYPECOMPTAGE_NOMENCLATURE_03_EN_DUR 
		= "le type de comptage de la section HIT (colonne [24] du HIT) doit respecter une nomenclature [1, 2, 3, 4, 5, 6, 7, 8, 9]";
	
	/* 13 - classementRoute. *******/
	/**
	 * clé de messageSectionHitClassementRouteRenseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.classementRoute.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_CLASSEMENTROUTE_RENSEIGNE_01 
		= "message.SectionHit.classementRoute.renseigne";
	
	/**
	 * messageSectionHitClassementRouteRenseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitClassementRouteRenseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le classement de la route de la section HIT (colonne [25] du HIT) doit être renseigné".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_CLASSEMENTROUTE_RENSEIGNE_01_EN_DUR 
		= "le classement de la route de la section HIT (colonne [25] du HIT) doit être renseigné";
		
	/**
	 * clé de messageSectionHitClassementRouteRegex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.classementRoute.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_CLASSEMENTROUTE_REGEX_02 
		= "message.SectionHit.classementRoute.regex";
	
	/**
	 * messageSectionHitClassementRouteRegex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitClassementRouteRegex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le classement de la route de la section HIT (colonne [25] du HIT) doit comporter exactement 1 chiffre".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_CLASSEMENTROUTE_REGEX_02_EN_DUR 
		= "le classement de la route de la section HIT (colonne [25] du HIT) doit comporter exactement 1 chiffre";
				
	/**
	 * clé de messageSectionHitClassementRouteNomenclature03 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.classementRoute.nomenclature"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_CLASSEMENTROUTE_NOMENCLATURE_03 
		= "message.SectionHit.classementRoute.nomenclature";
	
	/**
	 * messageSectionHitClassementRouteNomenclature03 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitClassementRouteNomenclature03 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le classement de la route de la section HIT (colonne [25] du HIT) doit respecter une nomenclature [1, 2, 3, 4, 5]".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_CLASSEMENTROUTE_NOMENCLATURE_03_EN_DUR 
		= "le classement de la route de la section HIT (colonne [25] du HIT) doit respecter une nomenclature [1, 2, 3, 4, 5]";
	
	/* 14 - classeLargeurChausseeU. *******/
	/**
	 * clé de messageSectionHitClasseLargeurChausseeURenseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.classeLargeurChausseeU.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_CLASSELARGEURCHAUSSEEU_RENSEIGNE_01 
		= "message.SectionHit.classeLargeurChausseeU.renseigne";
	
	/**
	 * messageSectionHitClasseLargeurChausseeURenseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitClasseLargeurChausseeURenseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "la classe de largeur de chaussée unique de la section HIT (colonne [26] du HIT) doit être renseignée (0 si sans objet)".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_CLASSELARGEURCHAUSSEEU_RENSEIGNE_01_EN_DUR 
		= "la classe de largeur de chaussée unique de la section HIT (colonne [26] du HIT) doit être renseignée (0 si sans objet)";
		
	/**
	 * clé de messageSectionHitClasseLargeurChausseeURegex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.classeLargeurChausseeU.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_CLASSELARGEURCHAUSSEEU_REGEX_02 
		= "message.SectionHit.classeLargeurChausseeU.regex";
	
	/**
	 * messageSectionHitClasseLargeurChausseeURegex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitClasseLargeurChausseeURegex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "la classe de largeur de chaussée unique de la section HIT (colonne [26] du HIT) doit comporter exactement 1 chiffre".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_CLASSELARGEURCHAUSSEEU_REGEX_02_EN_DUR 
		= "la classe de largeur de chaussée unique de la section HIT (colonne [26] du HIT) doit comporter exactement 1 chiffre";
				
	/**
	 * clé de messageSectionHitClasseLargeurChausseeUNomenclature03 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.classeLargeurChausseeU.nomenclature"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_CLASSELARGEURCHAUSSEEU_NOMENCLATURE_03 
		= "message.SectionHit.classeLargeurChausseeU.nomenclature";
	
	/**
	 * messageSectionHitClasseLargeurChausseeUNomenclature03 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitClasseLargeurChausseeUNomenclature03 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "la classe de largeur de chaussée unique de la section HIT (colonne [26] du HIT) doit respecter une nomenclature [0, 1, 2, 3, 4, 5, 6, 7, 8]".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_CLASSELARGEURCHAUSSEEU_NOMENCLATURE_03_EN_DUR 
		= "la classe de largeur de chaussée unique de la section HIT (colonne [26] du HIT) doit respecter une nomenclature [0, 1, 2, 3, 4, 5, 6, 7, 8]";
	
	/* 15 - classeLargeurChausseesS. *******/
	/**
	 * clé de messageSectionHitClasseLargeurChausseesSRenseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.classeLargeurChausseesS.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_CLASSELARGEURCHAUSSEESS_RENSEIGNE_01 
		= "message.SectionHit.classeLargeurChausseesS.renseigne";
	
	/**
	 * messageSectionHitClasseLargeurChausseesSRenseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitClasseLargeurChausseesSRenseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "la classe de largeur de chaussées séparées de la section HIT (colonne [27] du HIT) doit être renseignée (0 si sans objet)".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_CLASSELARGEURCHAUSSEESS_RENSEIGNE_01_EN_DUR 
		= "la classe de largeur de chaussées séparées de la section HIT (colonne [27] du HIT) doit être renseignée (0 si sans objet)";
		
	/**
	 * clé de messageSectionHitClasseLargeurChausseesSRegex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.classeLargeurChausseesS.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_CLASSELARGEURCHAUSSEESS_REGEX_02 
		= "message.SectionHit.classeLargeurChausseesS.regex";
	
	/**
	 * messageSectionHitClasseLargeurChausseesSRegex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitClasseLargeurChausseesSRegex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "la classe de largeur de chaussées séparées de la section HIT (colonne [27] du HIT) doit comporter exactement 1 chiffre".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_CLASSELARGEURCHAUSSEESS_REGEX_02_EN_DUR 
		= "la classe de largeur de chaussées séparées de la section HIT (colonne [27] du HIT) doit comporter exactement 1 chiffre";
				
	/**
	 * clé de messageSectionHitClasseLargeurChausseesSNomenclature03 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.classeLargeurChausseesS.nomenclature"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_CLASSELARGEURCHAUSSEESS_NOMENCLATURE_03 
		= "message.SectionHit.classeLargeurChausseesS.nomenclature";
	
	/**
	 * messageSectionHitClasseLargeurChausseesSNomenclature03 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitClasseLargeurChausseesSNomenclature03 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "la classe de largeur de chaussées séparées de la section HIT (colonne [27] du HIT) doit respecter une nomenclature [0, 1, 2, 3, 4, 5, 6, 7]".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_CLASSELARGEURCHAUSSEESS_NOMENCLATURE_03_EN_DUR 
		= "la classe de largeur de chaussées séparées de la section HIT (colonne [27] du HIT) doit respecter une nomenclature [0, 1, 2, 3, 4, 5, 6, 7]";
	
	/* 16 - typeReseau. *******/
	/**
	 * clé de messageSectionHitTypeReseauRenseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.typeReseau.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_TYPERESEAU_RENSEIGNE_01 
		= "message.SectionHit.typeReseau.renseigne";
	
	/**
	 * messageSectionHitTypeReseauRenseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitTypeReseauRenseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le type de réseau de la section HIT (colonne [28] du HIT) doit être renseigné (0 si autre que autoroute)".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_TYPERESEAU_RENSEIGNE_01_EN_DUR 
		= "le type de réseau de la section HIT (colonne [28] du HIT) doit être renseigné (0 si autre que autoroute)";
		
	/**
	 * clé de messageSectionHitTypeReseauRegex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.typeReseau.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_TYPERESEAU_REGEX_02 
		= "message.SectionHit.typeReseau.regex";
	
	/**
	 * messageSectionHitTypeReseauRegex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitTypeReseauRegex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le type de réseau de la section HIT (colonne [28] du HIT) doit comporter exactement 1 chiffre".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_TYPERESEAU_REGEX_02_EN_DUR 
		= "le type de réseau de la section HIT (colonne [28] du HIT) doit comporter exactement 1 chiffre";
				
	/**
	 * clé de messageSectionHitTypeReseauNomenclature03 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.typeReseau.nomenclature"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_TYPERESEAU_NOMENCLATURE_03 
		= "message.SectionHit.typeReseau.nomenclature";
	
	/**
	 * messageSectionHitTypeReseauNomenclature03 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitTypeReseauNomenclature03 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le type de réseau de la section HIT (colonne [28] du HIT) doit respecter une nomenclature [0, 1, 2, 3, 4]".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_TYPERESEAU_NOMENCLATURE_03_EN_DUR 
		= "le type de réseau de la section HIT (colonne [28] du HIT) doit respecter une nomenclature [0, 1, 2, 3, 4]";
	
	/* 17 - pRoupK. *******/
	/**
	 * clé de messageSectionHitPRoupKRenseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.pRoupK.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_PROUPK_RENSEIGNE_01 
		= "message.SectionHit.pRoupK.renseigne";
	
	/**
	 * messageSectionHitPRoupKRenseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitPRoupKRenseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "PR ou PK de la section HIT (colonne [29] du HIT) doit être renseigné".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_PROUPK_RENSEIGNE_01_EN_DUR 
		= "PR ou PK de la section HIT (colonne [29] du HIT) doit être renseigné";
		
	/**
	 * clé de messageSectionHitPRoupKRegex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.pRoupK.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_PROUPK_REGEX_02 
		= "message.SectionHit.pRoupK.regex";
	
	/**
	 * messageSectionHitPRoupKRegex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitPRoupKRegex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "PR ou PK de la section HIT (colonne [29] du HIT) doit comporter exactement 1 chiffre".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_PROUPK_REGEX_02_EN_DUR 
		= "PR ou PK de la section HIT (colonne [29] du HIT) doit comporter exactement 1 chiffre";
				
	/**
	 * clé de messageSectionHitPRoupKNomenclature03 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.pRoupK.nomenclature"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_PROUPK_NOMENCLATURE_03 
		= "message.SectionHit.pRoupK.nomenclature";
	
	/**
	 * messageSectionHitPRoupKNomenclature03 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitPRoupKNomenclature03 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "PR ou PK de la section HIT (colonne [29] du HIT) doit respecter une nomenclature [1, 2]".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_PROUPK_NOMENCLATURE_03_EN_DUR 
		= "PR ou PK de la section HIT (colonne [29] du HIT) doit respecter une nomenclature [1, 2]";
	
	/* 18 - lieuDitOrigine. *******/
	/**
	 * clé de messageSectionHitLieuDitOrigineRenseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.lieuDitOrigine.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_LIEUDITORIGINE_RENSEIGNE_01 
		= "message.SectionHit.lieuDitOrigine.renseigne";
	
	/**
	 * messageSectionHitLieuDitOrigineRenseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitLieuDitOrigineRenseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le lieu-dit origine de la section HIT (colonnes [30-49] du HIT) doit être renseigné".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_LIEUDITORIGINE_RENSEIGNE_01_EN_DUR 
		= "le lieu-dit origine de la section HIT (colonnes [30-49] du HIT) doit être renseigné";
		
	/**
	 * clé de messageSectionHitLieuDitOrigineRegex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.lieuDitOrigine.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_LIEUDITORIGINE_REGEX_02 
		= "message.SectionHit.lieuDitOrigine.regex";
	
	/**
	 * messageSectionHitLieuDitOrigineRegex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitLieuDitOrigineRegex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le lieu-dit origine de la section HIT (colonnes [30-49] du HIT) doit comporter exactement 20 caractères".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_LIEUDITORIGINE_REGEX_02_EN_DUR 
		= "le lieu-dit origine de la section HIT (colonnes [30-49] du HIT) doit comporter exactement 20 caractères";
	
	/* 19 - prOrigine. *******/
	/**
	 * clé de messageSectionHitPrOrigineRenseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.prOrigine.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_PRORIGINE_RENSEIGNE_01 
		= "message.SectionHit.prOrigine.renseigne";
	
	/**
	 * messageSectionHitPrOrigineRenseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitPrOrigineRenseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le PR origine de la section HIT (colonnes [50-52] du HIT) doit être renseigné (obligatoire)".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_PRORIGINE_RENSEIGNE_01_EN_DUR 
		= "le PR origine de la section HIT (colonnes [50-52] du HIT) doit être renseigné (obligatoire)";
		
	/**
	 * clé de messageSectionHitPrOrigineRegex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.prOrigine.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_PRORIGINE_REGEX_02 
		= "message.SectionHit.prOrigine.regex";
	
	/**
	 * messageSectionHitPrOrigineRegex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitPrOrigineRegex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le PR origine de la section HIT (colonnes [50-52] du HIT) doit comporter exactement 3 chiffres".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_PRORIGINE_REGEX_02_EN_DUR 
		= "le PR origine de la section HIT (colonnes [50-52] du HIT) doit comporter exactement 3 chiffres";
		
	/**
	 * clé de messageSectionHitPrOrigineNumerique03 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.prOrigine.numerique"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_PRORIGINE_NUMERIQUE_03 
		= "message.SectionHit.prOrigine.numerique";
	
	/**
	 * messageSectionHitPrOrigineNumerique03 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitPrOrigineNumerique03 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le PR origine de la section HIT (colonnes [50-52] du HIT) doit être homogène à un entier".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_PRORIGINE_NUMERIQUE_03_EN_DUR 
		= "le PR origine de la section HIT (colonnes [50-52] du HIT) doit être homogène à un entier";
	
	/* 20 - absOrigine. *******/
	/**
	 * clé de messageSectionHitAbsOrigineRenseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.absOrigine.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_ABSORIGINE_RENSEIGNE_01 
		= "message.SectionHit.absOrigine.renseigne";
	
	/**
	 * messageSectionHitAbsOrigineRenseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitAbsOrigineRenseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "l'abscisse origine de la section HIT (colonnes [53-56] du HIT) doit être renseignée (obligatoire)".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_ABSORIGINE_RENSEIGNE_01_EN_DUR 
		= "l'abscisse origine de la section HIT (colonnes [53-56] du HIT) doit être renseignée (obligatoire)";
		
	/**
	 * clé de messageSectionHitAbsOrigineRegex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.absOrigine.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_ABSORIGINE_REGEX_02 
		= "message.SectionHit.absOrigine.regex";
	
	/**
	 * messageSectionHitAbsOrigineRegex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitAbsOrigineRegex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "l'abscisse origine de la section HIT (colonnes [53-56] du HIT) doit comporter exactement 4 chiffres".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_ABSORIGINE_REGEX_02_EN_DUR 
		= "l'abscisse origine de la section HIT (colonnes [53-56] du HIT) doit comporter exactement 4 chiffres";
		
	/**
	 * clé de messageSectionHitAbsOrigineNumerique03 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.absOrigine.numerique"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_ABSORIGINE_NUMERIQUE_03 
		= "message.SectionHit.absOrigine.numerique";
	
	/**
	 * messageSectionHitAbsOrigineNumerique03 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitAbsOrigineNumerique03 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "l'abscisse origine de la section HIT (colonnes [53-56] du HIT) doit être homogène à un entier".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_ABSORIGINE_NUMERIQUE_03_EN_DUR 
		= "l'abscisse origine de la section HIT (colonnes [53-56] du HIT) doit être homogène à un entier";
	
	/* 21 - lieuDitExtremite. *******/
	/**
	 * clé de messageSectionHitLieuDitExtremiteRenseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.lieuDitExtremite.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_LIEUDITEXTREMITE_RENSEIGNE_01 
		= "message.SectionHit.lieuDitExtremite.renseigne";
	
	/**
	 * messageSectionHitLieuDitExtremiteRenseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitLieuDitExtremiteRenseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le lieu-dit extremité de la section HIT (colonnes [57-76] du HIT) doit être renseigné".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_LIEUDITEXTREMITE_RENSEIGNE_01_EN_DUR 
		= "le lieu-dit extremité de la section HIT (colonnes [57-76] du HIT) doit être renseigné";
		
	/**
	 * clé de messageSectionHitLieuDitExtremiteRegex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.lieuDitExtremite.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_LIEUDITEXTREMITE_REGEX_02 
		= "message.SectionHit.lieuDitExtremite.regex";
	
	/**
	 * messageSectionHitLieuDitExtremiteRegex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitLieuDitExtremiteRegex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le lieu-dit extremité de la section HIT (colonnes [57-76] du HIT) doit comporter exactement 20 caractères".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_LIEUDITEXTREMITE_REGEX_02_EN_DUR 
		= "le lieu-dit extremité de la section HIT (colonnes [57-76] du HIT) doit comporter exactement 20 caractères";
	
	/* 22 - prExtremite. *******/
	/**
	 * clé de messageSectionHitPrExtremiteRenseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.prExtremite.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_PREXTREMITE_RENSEIGNE_01 
		= "message.SectionHit.prExtremite.renseigne";
	
	/**
	 * messageSectionHitPrExtremiteRenseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitPrExtremiteRenseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le PR extremité de la section HIT (colonnes [77-79] du HIT) doit être renseigné (obligatoire)".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_PREXTREMITE_RENSEIGNE_01_EN_DUR 
		= "le PR extremité de la section HIT (colonnes [77-79] du HIT) doit être renseigné (obligatoire)";
		
	/**
	 * clé de messageSectionHitPrExtremiteRegex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.prExtremite.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_PREXTREMITE_REGEX_02 
		= "message.SectionHit.prExtremite.regex";
	
	/**
	 * messageSectionHitPrExtremiteRegex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitPrExtremiteRegex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le PR extremité de la section HIT (colonnes [77-79] du HIT) doit comporter exactement 3 chiffres".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_PREXTREMITE_REGEX_02_EN_DUR 
		= "le PR extremité de la section HIT (colonnes [77-79] du HIT) doit comporter exactement 3 chiffres";
		
	/**
	 * clé de messageSectionHitPrExtremiteNumerique03 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.prExtremite.numerique"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_PREXTREMITE_NUMERIQUE_03 
		= "message.SectionHit.prExtremite.numerique";
	
	/**
	 * messageSectionHitPrExtremiteNumerique03 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitPrExtremiteNumerique03 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le PR extremité de la section HIT (colonnes [77-79] du HIT) doit être homogène à un entier".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_PREXTREMITE_NUMERIQUE_03_EN_DUR 
		= "le PR extremité de la section HIT (colonnes [77-79] du HIT) doit être homogène à un entier";
	
	/* 23 - absExtremite. *******/
	/**
	 * clé de messageSectionHitAbsExtremiteRenseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.absExtremite.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_ABSEXTREMITE_RENSEIGNE_01 
		= "message.SectionHit.absExtremite.renseigne";
	
	/**
	 * messageSectionHitAbsExtremiteRenseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitAbsExtremiteRenseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "l'abscisse extremité de la section HIT (colonnes [80-83] du HIT) doit être renseignée (obligatoire)".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_ABSEXTREMITE_RENSEIGNE_01_EN_DUR 
		= "l'abscisse extremité de la section HIT (colonnes [80-83] du HIT) doit être renseignée (obligatoire)";
		
	/**
	 * clé de messageSectionHitAbsExtremiteRegex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.absExtremite.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_ABSEXTREMITE_REGEX_02 
		= "message.SectionHit.absExtremite.regex";
	
	/**
	 * messageSectionHitAbsExtremiteRegex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitAbsExtremiteRegex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "l'abscisse extremité de la section HIT (colonnes [80-83] du HIT) doit comporter exactement 4 chiffres".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_ABSEXTREMITE_REGEX_02_EN_DUR 
		= "l'abscisse extremité de la section HIT (colonnes [80-83] du HIT) doit comporter exactement 4 chiffres";
		
	/**
	 * clé de messageSectionHitAbsExtremiteNumerique03 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.absExtremite.numerique"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_ABSEXTREMITE_NUMERIQUE_03 
		= "message.SectionHit.absExtremite.numerique";
	
	/**
	 * messageSectionHitAbsExtremiteNumerique03 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitAbsExtremiteNumerique03 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "l'abscisse extremité de la section HIT (colonnes [80-83] du HIT) doit être homogène à un entier".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_ABSEXTREMITE_NUMERIQUE_03_EN_DUR 
		= "l'abscisse extremité de la section HIT (colonnes [80-83] du HIT) doit être homogène à un entier";
	
	/* 24 - lieuDitComptage. *******/
	/**
	 * clé de messageSectionHitLieuDitComptageRenseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.lieuDitComptage.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_LIEUDITCOMPTAGE_RENSEIGNE_01 
		= "message.SectionHit.lieuDitComptage.renseigne";
	
	/**
	 * messageSectionHitLieuDitComptageRenseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitLieuDitComptageRenseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le lieu-dit de comptage de la section HIT (colonnes [84-103] du HIT) doit être renseigné".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_LIEUDITCOMPTAGE_RENSEIGNE_01_EN_DUR 
		= "le lieu-dit de comptage de la section HIT (colonnes [84-103] du HIT) doit être renseigné";
		
	/**
	 * clé de messageSectionHitLieuDitComptageRegex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.lieuDitComptage.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_LIEUDITCOMPTAGE_REGEX_02 
		= "message.SectionHit.lieuDitComptage.regex";
	
	/**
	 * messageSectionHitLieuDitComptageRegex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitLieuDitComptageRegex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le lieu-dit de comptage de la section HIT (colonnes [84-103] du HIT) doit comporter exactement 20 caractères".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_LIEUDITCOMPTAGE_REGEX_02_EN_DUR 
		= "le lieu-dit de comptage de la section HIT (colonnes [84-103] du HIT) doit comporter exactement 20 caractères";
	
	/* 25 - prComptage. *******/
	/**
	 * clé de messageSectionHitPrComptageRenseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.prComptage.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_PRCOMPTAGE_RENSEIGNE_01 
		= "message.SectionHit.prComptage.renseigne";
	
	/**
	 * messageSectionHitPrComptageRenseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitPrComptageRenseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le PR du comptage de la section HIT (colonnes [104-106] du HIT) doit être renseigné (obligatoire)".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_PRCOMPTAGE_RENSEIGNE_01_EN_DUR 
		= "le PR du comptage de la section HIT (colonnes [104-106] du HIT) doit être renseigné (obligatoire)";
		
	/**
	 * clé de messageSectionHitPrComptageRegex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.prComptage.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_PRCOMPTAGE_REGEX_02 
		= "message.SectionHit.prComptage.regex";
	
	/**
	 * messageSectionHitPrComptageRegex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitPrComptageRegex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le PR du comptage de la section HIT (colonnes [104-106] du HIT) doit comporter exactement 3 chiffres".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_PRCOMPTAGE_REGEX_02_EN_DUR 
		= "le PR du comptage de la section HIT (colonnes [104-106] du HIT) doit comporter exactement 3 chiffres";
		
	/**
	 * clé de messageSectionHitPrComptageNumerique03 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.prComptage.numerique"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_PRCOMPTAGE_NUMERIQUE_03 
		= "message.SectionHit.prComptage.numerique";
	
	/**
	 * messageSectionHitPrComptageNumerique03 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitPrComptageNumerique03 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le PR du comptage de la section HIT (colonnes [104-106] du HIT) doit être homogène à un entier".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_PRCOMPTAGE_NUMERIQUE_03_EN_DUR 
		= "le PR du comptage de la section HIT (colonnes [104-106] du HIT) doit être homogène à un entier";
	
	/* 26 - absComptage. *******/
	/**
	 * clé de messageSectionHitAbsComptageRenseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.absComptage.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_ABSCOMPTAGE_RENSEIGNE_01 
		= "message.SectionHit.absComptage.renseigne";
	
	/**
	 * messageSectionHitAbsComptageRenseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitAbsComptageRenseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "l'abscisse du comptage de la section HIT (colonnes [107-110] du HIT) doit être renseignée (obligatoire)".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_ABSCOMPTAGE_RENSEIGNE_01_EN_DUR 
		= "l'abscisse du comptage de la section HIT (colonnes [107-110] du HIT) doit être renseignée (obligatoire)";
		
	/**
	 * clé de messageSectionHitAbsComptageRegex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.absComptage.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_ABSCOMPTAGE_REGEX_02 
		= "message.SectionHit.absComptage.regex";
	
	/**
	 * messageSectionHitAbsComptageRegex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitAbsComptageRegex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "l'abscisse du comptage de la section HIT (colonnes [107-110] du HIT) doit comporter exactement 4 chiffres".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_ABSCOMPTAGE_REGEX_02_EN_DUR 
		= "l'abscisse du comptage de la section HIT (colonnes [107-110] du HIT) doit comporter exactement 4 chiffres";
		
	/**
	 * clé de messageSectionHitAbsComptageNumerique03 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.absComptage.numerique"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_ABSCOMPTAGE_NUMERIQUE_03 
		= "message.SectionHit.absComptage.numerique";
	
	/**
	 * messageSectionHitAbsComptageNumerique03 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitAbsComptageNumerique03 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "l'abscisse du comptage de la section HIT (colonnes [107-110] du HIT) doit être homogène à un entier".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_ABSCOMPTAGE_NUMERIQUE_03_EN_DUR 
		= "l'abscisse du comptage de la section HIT (colonnes [107-110] du HIT) doit être homogène à un entier";
	
	/* 27 - longueurSection. *******/
	/**
	 * clé de messageSectionHitLongueurSectionRenseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.longueurSection.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_LONGUEURSECTION_RENSEIGNE_01 
		= "message.SectionHit.longueurSection.renseigne";
	
	/**
	 * messageSectionHitLongueurSectionRenseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitLongueurSectionRenseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "la longueur de la section HIT (colonnes [111-116] du HIT) doit être renseignée".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_LONGUEURSECTION_RENSEIGNE_01_EN_DUR 
		= "la longueur de la section HIT (colonnes [111-116] du HIT) doit être renseignée";
		
	/**
	 * clé de messageSectionHitLongueurSectionRegex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.longueurSection.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_LONGUEURSECTION_REGEX_02 
		= "message.SectionHit.longueurSection.regex";
	
	/**
	 * messageSectionHitLongueurSectionRegex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitLongueurSectionRegex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "la longueur de la section HIT (colonnes [111-116] du HIT) doit comporter exactement 6 chiffres".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_LONGUEURSECTION_REGEX_02_EN_DUR 
		= "la longueur de la section HIT (colonnes [111-116] du HIT) doit comporter exactement 6 chiffres";
		
	/**
	 * clé de messageSectionHitLongueurSectionNumerique03 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.longueurSection.numerique"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_LONGUEURSECTION_NUMERIQUE_03 
		= "message.SectionHit.longueurSection.numerique";
	
	/**
	 * messageSectionHitLongueurSectionNumerique03 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitLongueurSectionNumerique03 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "la longueur de la section HIT (colonnes [111-116] du HIT) doit être homogène à un entier".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_LONGUEURSECTION_NUMERIQUE_03_EN_DUR 
		= "la longueur de la section HIT (colonnes [111-116] du HIT) doit être homogène à un entier";
	
	/* 28 - longueurRaseCampagne. *******/
	/**
	 * clé de messageSectionHitLongueurRaseCampagneRenseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.longueurRaseCampagne.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_LONGUEURRASECAMPAGNE_RENSEIGNE_01 
		= "message.SectionHit.longueurRaseCampagne.renseigne";
	
	/**
	 * messageSectionHitLongueurRaseCampagneRenseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitLongueurRaseCampagneRenseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "la longueur en rase campagne de la section HIT (colonnes [117-122] du HIT) doit être renseignée".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_LONGUEURRASECAMPAGNE_RENSEIGNE_01_EN_DUR 
		= "la longueur en rase campagne de la section HIT (colonnes [117-122] du HIT) doit être renseignée";
		
	/**
	 * clé de messageSectionHitLongueurRaseCampagneRegex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.longueurRaseCampagne.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_LONGUEURRASECAMPAGNE_REGEX_02 
		= "message.SectionHit.longueurRaseCampagne.regex";
	
	/**
	 * messageSectionHitLongueurRaseCampagneRegex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitLongueurRaseCampagneRegex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "la longueur en rase campagne de la section HIT (colonnes [117-122] du HIT) doit comporter exactement 6 chiffres".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_LONGUEURRASECAMPAGNE_REGEX_02_EN_DUR 
		= "la longueur en rase campagne de la section HIT (colonnes [117-122] du HIT) doit comporter exactement 6 chiffres";
		
	/**
	 * clé de messageSectionHitLongueurRaseCampagneNumerique03 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.longueurRaseCampagne.numerique"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_LONGUEURRASECAMPAGNE_NUMERIQUE_03 
		= "message.SectionHit.longueurRaseCampagne.numerique";
	
	/**
	 * messageSectionHitLongueurRaseCampagneNumerique03 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitLongueurRaseCampagneNumerique03 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "la longueur en rase campagne de la section HIT (colonnes [117-122] du HIT) doit être homogène à un entier".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_LONGUEURRASECAMPAGNE_NUMERIQUE_03_EN_DUR 
		= "la longueur en rase campagne de la section HIT (colonnes [117-122] du HIT) doit être homogène à un entier";	
	
	/* 29 - numDepartementRattachement. *******/
	/**
	 * clé de messageSectionHitNumDepartementRattachementRenseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.numDepartementRattachement.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_NUMDEPARTEMENTRATTACHEMENT_RENSEIGNE_01 
		= "message.SectionHit.numDepartementRattachement.renseigne";
	
	/**
	 * messageSectionHitNumDepartementRattachementRenseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitNumDepartementRattachementRenseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le numéro de département de rattachement de la section HIT (colonnes [123-125] du HIT) doit être renseigné".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_NUMDEPARTEMENTRATTACHEMENT_RENSEIGNE_01_EN_DUR 
		= "le numéro de département de rattachement de la section HIT (colonnes [123-125] du HIT) doit être renseigné";
		
	/**
	 * clé de messageSectionHitNumDepartementRattachementRegex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.numDepartementRattachement.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_NUMDEPARTEMENTRATTACHEMENT_REGEX_02 
		= "message.SectionHit.numDepartementRattachement.regex";
	
	/**
	 * messageSectionHitNumDepartementRattachementRegex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitNumDepartementRattachementRegex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le numéro de département de rattachement de la section HIT (colonnes [123-125] du HIT) doit comporter exactement 3 chiffres".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_NUMDEPARTEMENTRATTACHEMENT_REGEX_02_EN_DUR 
		= "le numéro de département de rattachement de la section HIT (colonnes [123-125] du HIT) doit comporter exactement 3 chiffres";
	
	/* 30 - numSectionRattachement. *******/
	/**
	 * clé de messageSectionHitNumSectionRattachementRenseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.numSectionRattachement.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_NUMSECTIONRATTACHEMENT_RENSEIGNE_01 
		= "message.SectionHit.numSectionRattachement.renseigne";
	
	/**
	 * messageSectionHitNumSectionRattachementRenseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitNumSectionRattachementRenseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le numéro de section de rattachement de la section HIT (colonnes [126-131] du HIT) doit être renseigné".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_NUMSECTIONRATTACHEMENT_RENSEIGNE_01_EN_DUR 
		= "le numéro de section de rattachement de la section HIT (colonnes [126-131] du HIT) doit être renseigné";
		
	/**
	 * clé de messageSectionHitNumSectionRattachementRegex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.numSectionRattachement.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_NUMSECTIONRATTACHEMENT_REGEX_02 
		= "message.SectionHit.numSectionRattachement.regex";
	
	/**
	 * messageSectionHitNumSectionRattachementRegex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitNumSectionRattachementRegex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le numéro de section de rattachement de la section HIT (colonnes [126-131] du HIT) doit comporter exactement 6 chiffres".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_NUMSECTIONRATTACHEMENT_REGEX_02_EN_DUR 
		= "le numéro de section de rattachement de la section HIT (colonnes [126-131] du HIT) doit comporter exactement 6 chiffres";
	
	/* 31 - sensRattachement. *******/
	/**
	 * clé de messageSectionHitSensRattachementRenseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.sensRattachement.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_SENSRATTACHEMENT_RENSEIGNE_01 
		= "message.SectionHit.sensRattachement.renseigne";
	
	/**
	 * messageSectionHitSensRattachementRenseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitSensRattachementRenseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le sens de la section de rattachement de la section HIT (colonne [132] du HIT) doit être renseigné".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_SENSRATTACHEMENT_RENSEIGNE_01_EN_DUR 
		= "le sens de la section de rattachement de la section HIT (colonne [132] du HIT) doit être renseigné";
		
	/**
	 * clé de messageSectionHitSensRattachementRegex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.sensRattachement.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_SENSRATTACHEMENT_REGEX_02 
		= "message.SectionHit.sensRattachement.regex";
	
	/**
	 * messageSectionHitSensRattachementRegex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitSensRattachementRegex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le sens de la section de rattachement de la section HIT (colonne [132] du HIT) doit comporter exactement 1 chiffre".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_SENSRATTACHEMENT_REGEX_02_EN_DUR 
		= "le sens de la section de rattachement de la section HIT (colonne [132] du HIT) doit comporter exactement 1 chiffre";
				
	/**
	 * clé de messageSectionHitSensRattachementNomenclature03 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.sensRattachement.nomenclature"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_SENSRATTACHEMENT_NOMENCLATURE_03 
		= "message.SectionHit.sensRattachement.nomenclature";
	
	/**
	 * messageSectionHitSensRattachementNomenclature03 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitSensRattachementNomenclature03 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le sens de la section de rattachement de la section HIT (colonne [132] du HIT) doit respecter une nomenclature [1, 2, 3, 4, 5]".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_SENSRATTACHEMENT_NOMENCLATURE_03_EN_DUR 
		= "le sens de la section de rattachement de la section HIT (colonne [132] du HIT) doit respecter une nomenclature [1, 2, 3, 4, 5]";
	
	/* 32 - numDepartementLimitrophe. *******/
	/**
	 * clé de messageSectionHitNumDepartementLimitropheRenseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.numDepartementLimitrophe.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_NUMDEPARTEMENTLIMITROPHE_RENSEIGNE_01 
		= "message.SectionHit.numDepartementLimitrophe.renseigne";
	
	/**
	 * messageSectionHitNumDepartementLimitropheRenseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitNumDepartementLimitropheRenseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le numéro de département limitrophe de la section HIT (colonnes [133-135] du HIT) doit être renseigné".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_NUMDEPARTEMENTLIMITROPHE_RENSEIGNE_01_EN_DUR 
		= "le numéro de département limitrophe de la section HIT (colonnes [133-135] du HIT) doit être renseigné";
		
	/**
	 * clé de messageSectionHitNumDepartementLimitropheRegex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.numDepartementLimitrophe.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_NUMDEPARTEMENTLIMITROPHE_REGEX_02 
		= "message.SectionHit.numDepartementLimitrophe.regex";
	
	/**
	 * messageSectionHitNumDepartementLimitropheRegex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitNumDepartementLimitropheRegex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le numéro de département limitrophe de la section HIT (colonnes [133-135] du HIT) doit comporter exactement 3 chiffres".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_NUMDEPARTEMENTLIMITROPHE_REGEX_02_EN_DUR 
		= "le numéro de département limitrophe de la section HIT (colonnes [133-135] du HIT) doit comporter exactement 3 chiffres";
	
	/* 33 - numSectionLimitrophe. *******/
	/**
	 * clé de messageSectionHitNumSectionLimitropheRenseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.numSectionLimitrophe.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_NUMSECTIONLIMITROPHE_RENSEIGNE_01 
		= "message.SectionHit.numSectionLimitrophe.renseigne";
	
	/**
	 * messageSectionHitNumSectionLimitropheRenseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitNumSectionLimitropheRenseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le numéro de section limitrophe de la section HIT (colonnes [136-141] du HIT) doit être renseigné".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_NUMSECTIONLIMITROPHE_RENSEIGNE_01_EN_DUR 
		= "le numéro de section limitrophe de la section HIT (colonnes [136-141] du HIT) doit être renseigné";
		
	/**
	 * clé de messageSectionHitNumSectionLimitropheRegex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.numSectionLimitrophe.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_NUMSECTIONLIMITROPHE_REGEX_02 
		= "message.SectionHit.numSectionLimitrophe.regex";
	
	/**
	 * messageSectionHitNumSectionLimitropheRegex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitNumSectionLimitropheRegex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le numéro de section limitrophe de la section HIT (colonnes [136-141] du HIT) doit comporter exactement 6 chiffres".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_NUMSECTIONLIMITROPHE_REGEX_02_EN_DUR 
		= "le numéro de section limitrophe de la section HIT (colonnes [136-141] du HIT) doit comporter exactement 6 chiffres";
	
	/* 31 - sensLimitrophe. *******/
	/**
	 * clé de messageSectionHitSensLimitropheRenseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.sensLimitrophe.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_SENSLIMITROPHE_RENSEIGNE_01 
		= "message.SectionHit.sensLimitrophe.renseigne";
	
	/**
	 * messageSectionHitSensLimitropheRenseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitSensLimitropheRenseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le sens de la section limitrophe de la section HIT (colonne [142] du HIT) doit être renseigné".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_SENSLIMITROPHE_RENSEIGNE_01_EN_DUR 
		= "le sens de la section limitrophe de la section HIT (colonne [142] du HIT) doit être renseigné";
		
	/**
	 * clé de messageSectionHitSensLimitropheRegex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.sensLimitrophe.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_SENSLIMITROPHE_REGEX_02 
		= "message.SectionHit.sensLimitrophe.regex";
	
	/**
	 * messageSectionHitSensLimitropheRegex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitSensLimitropheRegex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le sens de la section limitrophe de la section HIT (colonne [142] du HIT) doit comporter exactement 1 chiffre".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_SENSLIMITROPHE_REGEX_02_EN_DUR 
		= "le sens de la section limitrophe de la section HIT (colonne [142] du HIT) doit comporter exactement 1 chiffre";
				
	/**
	 * clé de messageSectionHitSensLimitropheNomenclature03 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.sensLimitrophe.nomenclature"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_SENSLIMITROPHE_NOMENCLATURE_03 
		= "message.SectionHit.sensLimitrophe.nomenclature";
	
	/**
	 * messageSectionHitSensLimitropheNomenclature03 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitSensLimitropheNomenclature03 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le sens de la section limitrophe de la section HIT (colonne [142] du HIT) doit respecter une nomenclature [1, 2, 3, 4, 5]".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_SENSLIMITROPHE_NOMENCLATURE_03_EN_DUR 
		= "le sens de la section limitrophe de la section HIT (colonne [142] du HIT) doit respecter une nomenclature [1, 2, 3, 4, 5]";
	
	/* 35 - moisSectionnement. *******/
	/**
	 * clé de messageSectionHitMoisSectionnementRenseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.moisSectionnement.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_MOISSECTIONNEMENT_RENSEIGNE_01 
		= "message.SectionHit.moisSectionnement.renseigne";
	
	/**
	 * messageSectionHitMoisSectionnementRenseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitMoisSectionnementRenseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le mois de sectionnement de la section HIT (colonnes [143-144] du HIT) doit être renseigné".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_MOISSECTIONNEMENT_RENSEIGNE_01_EN_DUR 
		= "le mois de sectionnement de la section HIT (colonnes [143-144] du HIT) doit être renseigné";
		
	/**
	 * clé de messageSectionHitMoisSectionnementRegex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.moisSectionnement.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_MOISSECTIONNEMENT_REGEX_02 
		= "message.SectionHit.moisSectionnement.regex";
	
	/**
	 * messageSectionHitMoisSectionnementRegex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitMoisSectionnementRegex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le mois de sectionnement de la section HIT (colonnes [143-144] du HIT) doit comporter exactement 2 chiffres".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_MOISSECTIONNEMENT_REGEX_02_EN_DUR 
		= "le mois de sectionnement de la section HIT (colonnes [143-144] du HIT) doit comporter exactement 2 chiffres";
	
	/* 36 - anneeSectionnement. *******/
	/**
	 * clé de messageSectionHitAnneeSectionnementRenseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.anneeSectionnement.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_ANNEESECTIONNEMENT_RENSEIGNE_01 
		= "message.SectionHit.anneeSectionnement.renseigne";
	
	/**
	 * messageSectionHitAnneeSectionnementRenseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitAnneeSectionnementRenseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "l'année de sectionnement de la section HIT (colonnes [145-146] du HIT) doit être renseignée".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_ANNEESECTIONNEMENT_RENSEIGNE_01_EN_DUR 
		= "l'année de sectionnement de la section HIT (colonnes [145-146] du HIT) doit être renseignée";
		
	/**
	 * clé de messageSectionHitAnneeSectionnementRegex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.anneeSectionnement.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_ANNEESECTIONNEMENT_REGEX_02 
		= "message.SectionHit.anneeSectionnement.regex";
	
	/**
	 * messageSectionHitAnneeSectionnementRegex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitAnneeSectionnementRegex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "l'année de sectionnement de la section HIT (colonnes [145-146] du HIT) doit comporter exactement 2 chiffres".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_ANNEESECTIONNEMENT_REGEX_02_EN_DUR 
		= "l'année de sectionnement de la section HIT (colonnes [145-146] du HIT) doit comporter exactement 2 chiffres";
	
	/* 37 - zoneLibre2. *******/
	/**
	 * clé de messageSectionHitZoneLibre2Renseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.zoneLibre2.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_ZONELIBRE2_RENSEIGNE_01 
		= "message.SectionHit.zoneLibre2.renseigne";
	
	/**
	 * messageSectionHitZoneLibre2Renseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitZoneLibre2Renseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "la zone libre de la section HIT (colonnes [147-152] du HIT) doit être renseignée (avec des espaces)".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_ZONELIBRE2_RENSEIGNE_01_EN_DUR 
		= "la zone libre de la section HIT (colonnes [147-152] du HIT) doit être renseignée (avec des espaces)";
		
	/**
	 * clé de messageSectionHitZoneLibre2Regex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.zoneLibre2.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_ZONELIBRE2_REGEX_02 
		= "message.SectionHit.zoneLibre2.regex";
	
	/**
	 * messageSectionHitZoneLibre2Regex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitZoneLibre2Regex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "la zone libre de la section HIT (colonnes [147-152] du HIT) doit comporter exactement 6 espaces".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_ZONELIBRE2_REGEX_02_EN_DUR 
		= "la zone libre de la section HIT (colonnes [147-152] du HIT) doit comporter exactement 6 espaces";
	
	/* 38 - mjaN. *******/
	/**
	 * clé de messageSectionHitMjaNRenseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.mjaN.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_MJAN_RENSEIGNE_01 
		= "message.SectionHit.mjaN.renseigne";
	
	/**
	 * messageSectionHitMjaNRenseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitMjaNRenseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le trafic moyen journalier annuel de l'année n de la section HIT (colonnes [153-158] du HIT) doit être renseigné".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_MJAN_RENSEIGNE_01_EN_DUR 
		= "le trafic moyen journalier annuel de l'année n de la section HIT (colonnes [153-158] du HIT) doit être renseigné";
		
	/**
	 * clé de messageSectionHitMjaNRegex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.mjaN.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_MJAN_REGEX_02 
		= "message.SectionHit.mjaN.regex";
	
	/**
	 * messageSectionHitMjaNRegex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitMjaNRegex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le trafic moyen journalier annuel de l'année n de la section HIT (colonnes [153-158] du HIT) doit comporter exactement 6 chiffres".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_MJAN_REGEX_02_EN_DUR 
		= "le trafic moyen journalier annuel de l'année n de la section HIT (colonnes [153-158] du HIT) doit comporter exactement 6 chiffres";
		
	/**
	 * clé de messageSectionHitMjaNNumerique03 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.mjaN.numerique"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_MJAN_NUMERIQUE_03 
		= "message.SectionHit.mjaN.numerique";
	
	/**
	 * messageSectionHitMjaNNumerique03 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitMjaNNumerique03 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le trafic moyen journalier annuel de l'année n de la section HIT (colonnes [153-158] du HIT) doit être homogène à un entier".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_MJAN_NUMERIQUE_03_EN_DUR 
		= "le trafic moyen journalier annuel de l'année n de la section HIT (colonnes [153-158] du HIT) doit être homogène à un entier";
	
	/* 39 - modeCalculN. *******/
	/**
	 * clé de messageSectionHitModeCalculNRenseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.modeCalculN.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_MODECALCULN_RENSEIGNE_01 
		= "message.SectionHit.modeCalculN.renseigne";
	
	/**
	 * messageSectionHitModeCalculNRenseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitModeCalculNRenseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le mode de calcul des trafics de l'année n de la section HIT (colonne [159] du HIT) doit être renseigné".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_MODECALCULN_RENSEIGNE_01_EN_DUR 
		= "le mode de calcul des trafics de l'année n de la section HIT (colonne [159] du HIT) doit être renseigné";
		
	/**
	 * clé de messageSectionHitModeCalculNRegex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.modeCalculN.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_MODECALCULN_REGEX_02 
		= "message.SectionHit.modeCalculN.regex";
	
	/**
	 * messageSectionHitModeCalculNRegex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitModeCalculNRegex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le mode de calcul des trafics de l'année n de la section HIT (colonne [159] du HIT) doit comporter exactement 1 caractère (ou espace)".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_MODECALCULN_REGEX_02_EN_DUR 
		= "le mode de calcul des trafics de l'année n de la section HIT (colonne [159] du HIT) doit comporter exactement 1 caractère (ou espace)";
	
	/* 40 - pcPLN. *******/
	/**
	 * clé de messageSectionHitPcPLNRenseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.pcPLN.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_PCPLN_RENSEIGNE_01 
		= "message.SectionHit.pcPLN.renseigne";
	
	/**
	 * messageSectionHitPcPLNRenseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitPcPLNRenseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le pourcentage de trafic poids lourds annuel de l'année n de la section HIT (colonnes [160-162] du HIT) doit être renseigné".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_PCPLN_RENSEIGNE_01_EN_DUR 
		= "le pourcentage de trafic poids lourds annuel de l'année n de la section HIT (colonnes [160-162] du HIT) doit être renseigné";
		
	/**
	 * clé de messageSectionHitPcPLNRegex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.pcPLN.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_PCPLN_REGEX_02 
		= "message.SectionHit.pcPLN.regex";
	
	/**
	 * messageSectionHitPcPLNRegex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitPcPLNRegex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le pourcentage de trafic poids lourds annuel de l'année n de la section HIT (colonnes [160-162] du HIT) doit comporter exactement 3 chiffres".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_PCPLN_REGEX_02_EN_DUR 
		= "le pourcentage de trafic poids lourds annuel de l'année n de la section HIT (colonnes [160-162] du HIT) doit comporter exactement 3 chiffres";
		
	/**
	 * clé de messageSectionHitPcPLNNumerique03 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.pcPLN.numerique"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_PCPLN_NUMERIQUE_03 
		= "message.SectionHit.pcPLN.numerique";
	
	/**
	 * messageSectionHitPcPLNNumerique03 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitPcPLNNumerique03 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le pourcentage de trafic poids lourds annuel de l'année n de la section HIT (colonnes [160-162] du HIT) doit être homogène à un entier".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_PCPLN_NUMERIQUE_03_EN_DUR 
		= "le pourcentage de trafic poids lourds annuel de l'année n de la section HIT (colonnes [160-162] du HIT) doit être homogène à un entier";
	
	/* 41 - evaluationPLN. *******/
	/**
	 * clé de messageSectionHitEvaluationPLNRenseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.evaluationPLN.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_EVALUATIONPLN_RENSEIGNE_01 
		= "message.SectionHit.evaluationPLN.renseigne";
	
	/**
	 * messageSectionHitEvaluationPLNRenseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitEvaluationPLNRenseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "l'évaluation des pourcentages de trafic poids lourds de l'année n de la section HIT (colonne [163] du HIT) doit être renseigné".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_EVALUATIONPLN_RENSEIGNE_01_EN_DUR 
		= "l'évaluation des pourcentages de trafic poids lourds de l'année n de la section HIT (colonne [163] du HIT) doit être renseigné";
		
	/**
	 * clé de messageSectionHitEvaluationPLNRegex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.evaluationPLN.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_EVALUATIONPLN_REGEX_02 
		= "message.SectionHit.evaluationPLN.regex";
	
	/**
	 * messageSectionHitEvaluationPLNRegex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitEvaluationPLNRegex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "l'évaluation des pourcentages de trafic poids lourds de l'année n de la section HIT (colonne [163] du HIT) doit comporter exactement 1 caractère (ou espace)".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_EVALUATIONPLN_REGEX_02_EN_DUR 
		= "l'évaluation des pourcentages de trafic poids lourds de l'année n de la section HIT (colonne [163] du HIT) doit comporter exactement 1 caractère (ou espace)";
	
	/* 42 - pcNuitAnnuelN. *******/
	/**
	 * clé de messageSectionHitPcNuitAnnuelNRenseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.pcNuitAnnuelN.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_PCNUITANNUELN_RENSEIGNE_01 
		= "message.SectionHit.pcNuitAnnuelN.renseigne";
	
	/**
	 * messageSectionHitPcNuitAnnuelNRenseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitPcNuitAnnuelNRenseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le pourcentage de trafic de nuit tous véhicules annuel de l'année n de la section HIT (colonnes [164-166] du HIT) doit être renseigné".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_PCNUITANNUELN_RENSEIGNE_01_EN_DUR 
		= "le pourcentage de trafic de nuit tous véhicules annuel de l'année n de la section HIT (colonnes [164-166] du HIT) doit être renseigné";
		
	/**
	 * clé de messageSectionHitPcNuitAnnuelNRegex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.pcNuitAnnuelN.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_PCNUITANNUELN_REGEX_02 
		= "message.SectionHit.pcNuitAnnuelN.regex";
	
	/**
	 * messageSectionHitPcNuitAnnuelNRegex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitPcNuitAnnuelNRegex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le pourcentage de trafic de nuit tous véhicules annuel de l'année n de la section HIT (colonnes [164-166] du HIT) doit comporter exactement 3 chiffres".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_PCNUITANNUELN_REGEX_02_EN_DUR 
		= "le pourcentage de trafic de nuit tous véhicules annuel de l'année n de la section HIT (colonnes [164-166] du HIT) doit comporter exactement 3 chiffres";
		
	/**
	 * clé de messageSectionHitPcNuitAnnuelNNumerique03 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.pcNuitAnnuelN.numerique"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_PCNUITANNUELN_NUMERIQUE_03 
		= "message.SectionHit.pcNuitAnnuelN.numerique";
	
	/**
	 * messageSectionHitPcNuitAnnuelNNumerique03 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitPcNuitAnnuelNNumerique03 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le pourcentage de trafic de nuit tous véhicules annuel de l'année n de la section HIT (colonnes [164-166] du HIT) doit être homogène à un entier".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_PCNUITANNUELN_NUMERIQUE_03_EN_DUR 
		= "le pourcentage de trafic de nuit tous véhicules annuel de l'année n de la section HIT (colonnes [164-166] du HIT) doit être homogène à un entier";
	
	/* 43 - indiceFiabiliteMjaN. *******/
	/**
	 * clé de messageSectionHitIndiceFiabiliteMjaNRenseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.indiceFiabiliteMjaN.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_INDICEFIABLITEMJAN_RENSEIGNE_01 
		= "message.SectionHit.indiceFiabiliteMjaN.renseigne";
	
	/**
	 * messageSectionHitIndiceFiabiliteMjaNRenseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitIndiceFiabiliteMjaNRenseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "l'indice de fiabilité de la TMJA de l'année n de la section HIT (colonne [167] du HIT) doit être renseigné".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_INDICEFIABLITEMJAN_RENSEIGNE_01_EN_DUR 
		= "l'indice de fiabilité de la TMJA de l'année n de la section HIT (colonne [167] du HIT) doit être renseigné";
		
	/**
	 * clé de messageSectionHitIndiceFiabiliteMjaNRegex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.indiceFiabiliteMjaN.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_INDICEFIABLITEMJAN_REGEX_02 
		= "message.SectionHit.indiceFiabiliteMjaN.regex";
	
	/**
	 * messageSectionHitIndiceFiabiliteMjaNRegex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitIndiceFiabiliteMjaNRegex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "l'indice de fiabilité de la TMJA de l'année n de la section HIT (colonne [167] du HIT) doit comporter exactement 1 caractère (ou espace)".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_INDICEFIABLITEMJAN_REGEX_02_EN_DUR 
		= "l'indice de fiabilité de la TMJA de l'année n de la section HIT (colonne [167] du HIT) doit comporter exactement 1 caractère (ou espace)";
	
	/* 44 - mjmNmois01. *******/
	/**
	 * clé de messageSectionHitMjmNmois01Renseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.mjmNmois01.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_MJMNMOIS01_RENSEIGNE_01 
		= "message.SectionHit.mjmNmois01.renseigne";
	
	/**
	 * messageSectionHitMjmNmois01Renseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitMjmNmois01Renseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "la moyenne journalière mensuelle du mois de janvier (01) de l'année n en véhicules/jour de la section HIT (colonnes [168-173] du HIT) doit être renseignée".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_MJMNMOIS01_RENSEIGNE_01_EN_DUR 
		= "la moyenne journalière mensuelle du mois de janvier (01) de l'année n en véhicules/jour de la section HIT (colonnes [168-173] du HIT) doit être renseignée";
		
	/**
	 * clé de messageSectionHitMjmNmois01Regex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.mjmNmois01.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_MJMNMOIS01_REGEX_02 
		= "message.SectionHit.mjmNmois01.regex";
	
	/**
	 * messageSectionHitMjmNmois01Regex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitMjmNmois01Regex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "la moyenne journalière mensuelle du mois de janvier (01) de l'année n en véhicules/jour de la section HIT (colonnes [168-173] du HIT) doit comporter exactement 6 chiffres".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_MJMNMOIS01_REGEX_02_EN_DUR 
		= "la moyenne journalière mensuelle du mois de janvier (01) de l'année n en véhicules/jour de la section HIT (colonnes [168-173] du HIT) doit comporter exactement 6 chiffres";
		
	/**
	 * clé de messageSectionHitMjmNmois01Numerique03 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.mjmNmois01.numerique"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_MJMNMOIS01_NUMERIQUE_03 
		= "message.SectionHit.mjmNmois01.numerique";
	
	/**
	 * messageSectionHitMjmNmois01Numerique03 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitMjmNmois01Numerique03 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "la moyenne journalière mensuelle du mois de janvier (01) de l'année n en véhicules/jour de la section HIT (colonnes [168-173] du HIT) doit être homogène à un entier".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_MJMNMOIS01_NUMERIQUE_03_EN_DUR 
		= "la moyenne journalière mensuelle du mois de janvier (01) de l'année n en véhicules/jour de la section HIT (colonnes [168-173] du HIT) doit être homogène à un entier";
	
	/* 45 - pcNuitNmois01. *******/
	/**
	 * clé de messageSectionHitPcNuitNmois01Renseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.pcNuitNmois01.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS01_RENSEIGNE_01 
		= "message.SectionHit.pcNuitNmois01.renseigne";
	
	/**
	 * messageSectionHitPcNuitNmois01Renseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitPcNuitNmois01Renseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le pourcentage de trafic de nuit tous véhicules mensuel du mois de janvier (01) de l'année n de la section HIT (colonnes [174-176] du HIT) doit être renseigné".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_PCNUITNMOIS01_RENSEIGNE_01_EN_DUR 
		= "le pourcentage de trafic de nuit tous véhicules mensuel du mois de janvier (01) de l'année n de la section HIT (colonnes [174-176] du HIT) doit être renseigné";
		
	/**
	 * clé de messageSectionHitPcNuitNmois01Regex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.pcNuitNmois01.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS01_REGEX_02 
		= "message.SectionHit.pcNuitNmois01.regex";
	
	/**
	 * messageSectionHitPcNuitNmois01Regex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitPcNuitNmois01Regex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le pourcentage de trafic de nuit tous véhicules mensuel du mois de janvier (01) de l'année n de la section HIT (colonnes [174-176] du HIT) doit comporter exactement 3 chiffres".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_PCNUITNMOIS01_REGEX_02_EN_DUR 
		= "le pourcentage de trafic de nuit tous véhicules mensuel du mois de janvier (01) de l'année n de la section HIT (colonnes [174-176] du HIT) doit comporter exactement 3 chiffres";
		
	/**
	 * clé de messageSectionHitPcNuitNmois01Numerique03 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.pcNuitNmois01.numerique"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS01_NUMERIQUE_03 
		= "message.SectionHit.pcNuitNmois01.numerique";
	
	/**
	 * messageSectionHitPcNuitNmois01Numerique03 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitPcNuitNmois01Numerique03 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le pourcentage de trafic de nuit tous véhicules mensuel du mois de janvier (01) de l'année n de la section HIT (colonnes [174-176] du HIT) doit être homogène à un entier".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_PCNUITNMOIS01_NUMERIQUE_03_EN_DUR 
		= "le pourcentage de trafic de nuit tous véhicules mensuel du mois de janvier (01) de l'année n de la section HIT (colonnes [174-176] du HIT) doit être homogène à un entier";
	
	/* 46 - mjmNmois02. *******/
	/**
	 * clé de messageSectionHitMjmNmois02Renseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.mjmNmois02.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_MJMNMOIS02_RENSEIGNE_01 
		= "message.SectionHit.mjmNmois02.renseigne";
	
	/**
	 * messageSectionHitMjmNmois02Renseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitMjmNmois02Renseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "la moyenne journalière mensuelle du mois de février (02) de l'année n en véhicules/jour de la section HIT (colonnes [177-182] du HIT) doit être renseignée".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_MJMNMOIS02_RENSEIGNE_01_EN_DUR 
		= "la moyenne journalière mensuelle du mois de février (02) de l'année n en véhicules/jour de la section HIT (colonnes [177-182] du HIT) doit être renseignée";
		
	/**
	 * clé de messageSectionHitMjmNmois02Regex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.mjmNmois02.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_MJMNMOIS02_REGEX_02 
		= "message.SectionHit.mjmNmois02.regex";
	
	/**
	 * messageSectionHitMjmNmois02Regex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitMjmNmois02Regex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "la moyenne journalière mensuelle du mois de février (02) de l'année n en véhicules/jour de la section HIT (colonnes [177-182] du HIT) doit comporter exactement 6 chiffres".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_MJMNMOIS02_REGEX_02_EN_DUR 
		= "la moyenne journalière mensuelle du mois de février (02) de l'année n en véhicules/jour de la section HIT (colonnes [177-182] du HIT) doit comporter exactement 6 chiffres";
		
	/**
	 * clé de messageSectionHitMjmNmois02Numerique03 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.mjmNmois02.numerique"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_MJMNMOIS02_NUMERIQUE_03 
		= "message.SectionHit.mjmNmois02.numerique";
	
	/**
	 * messageSectionHitMjmNmois02Numerique03 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitMjmNmois02Numerique03 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "la moyenne journalière mensuelle du mois de février (02) de l'année n en véhicules/jour de la section HIT (colonnes [177-182] du HIT) doit être homogène à un entier".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_MJMNMOIS02_NUMERIQUE_03_EN_DUR 
		= "la moyenne journalière mensuelle du mois de février (02) de l'année n en véhicules/jour de la section HIT (colonnes [177-182] du HIT) doit être homogène à un entier";
	
	/* 47 - pcNuitNmois02. *******/
	/**
	 * clé de messageSectionHitPcNuitNmois02Renseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.pcNuitNmois02.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS02_RENSEIGNE_01 
		= "message.SectionHit.pcNuitNmois02.renseigne";
	
	/**
	 * messageSectionHitPcNuitNmois02Renseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitPcNuitNmois02Renseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le pourcentage de trafic de nuit tous véhicules mensuel du mois de février (02) de l'année n de la section HIT (colonnes [183-185] du HIT) doit être renseigné".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_PCNUITNMOIS02_RENSEIGNE_01_EN_DUR 
		= "le pourcentage de trafic de nuit tous véhicules mensuel du mois de février (02) de l'année n de la section HIT (colonnes [183-185] du HIT) doit être renseigné";
		
	/**
	 * clé de messageSectionHitPcNuitNmois02Regex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.pcNuitNmois02.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS02_REGEX_02 
		= "message.SectionHit.pcNuitNmois02.regex";
	
	/**
	 * messageSectionHitPcNuitNmois02Regex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitPcNuitNmois02Regex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le pourcentage de trafic de nuit tous véhicules mensuel du mois de février (02) de l'année n de la section HIT (colonnes [183-185] du HIT) doit comporter exactement 3 chiffres".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_PCNUITNMOIS02_REGEX_02_EN_DUR 
		= "le pourcentage de trafic de nuit tous véhicules mensuel du mois de février (02) de l'année n de la section HIT (colonnes [183-185] du HIT) doit comporter exactement 3 chiffres";
		
	/**
	 * clé de messageSectionHitPcNuitNmois02Numerique03 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.pcNuitNmois02.numerique"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS02_NUMERIQUE_03 
		= "message.SectionHit.pcNuitNmois02.numerique";
	
	/**
	 * messageSectionHitPcNuitNmois02Numerique03 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitPcNuitNmois02Numerique03 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le pourcentage de trafic de nuit tous véhicules mensuel du mois de février (02) de l'année n de la section HIT (colonnes [183-185] du HIT) doit être homogène à un entier".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_PCNUITNMOIS02_NUMERIQUE_03_EN_DUR 
		= "le pourcentage de trafic de nuit tous véhicules mensuel du mois de février (02) de l'année n de la section HIT (colonnes [183-185] du HIT) doit être homogène à un entier";
	
	/* 48 - mjmNmois03. *******/
	/**
	 * clé de messageSectionHitMjmNmois03Renseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.mjmNmois03.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_MJMNMOIS03_RENSEIGNE_01 
		= "message.SectionHit.mjmNmois03.renseigne";
	
	/**
	 * messageSectionHitMjmNmois03Renseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitMjmNmois03Renseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "la moyenne journalière mensuelle du mois de mars (03) de l'année n en véhicules/jour de la section HIT (colonnes [186-191] du HIT) doit être renseignée".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_MJMNMOIS03_RENSEIGNE_01_EN_DUR 
		= "la moyenne journalière mensuelle du mois de mars (03) de l'année n en véhicules/jour de la section HIT (colonnes [186-191] du HIT) doit être renseignée";
		
	/**
	 * clé de messageSectionHitMjmNmois03Regex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.mjmNmois03.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_MJMNMOIS03_REGEX_02 
		= "message.SectionHit.mjmNmois03.regex";
	
	/**
	 * messageSectionHitMjmNmois03Regex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitMjmNmois03Regex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "la moyenne journalière mensuelle du mois de mars (03) de l'année n en véhicules/jour de la section HIT (colonnes [186-191] du HIT) doit comporter exactement 6 chiffres".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_MJMNMOIS03_REGEX_02_EN_DUR 
		= "la moyenne journalière mensuelle du mois de mars (03) de l'année n en véhicules/jour de la section HIT (colonnes [186-191] du HIT) doit comporter exactement 6 chiffres";
		
	/**
	 * clé de messageSectionHitMjmNmois03Numerique03 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.mjmNmois03.numerique"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_MJMNMOIS03_NUMERIQUE_03 
		= "message.SectionHit.mjmNmois03.numerique";
	
	/**
	 * messageSectionHitMjmNmois03Numerique03 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitMjmNmois03Numerique03 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "la moyenne journalière mensuelle du mois de mars (03) de l'année n en véhicules/jour de la section HIT (colonnes [186-191] du HIT) doit être homogène à un entier".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_MJMNMOIS03_NUMERIQUE_03_EN_DUR 
		= "la moyenne journalière mensuelle du mois de mars (03) de l'année n en véhicules/jour de la section HIT (colonnes [186-191] du HIT) doit être homogène à un entier";
	
	/* 49 - pcNuitNmois03. *******/
	/**
	 * clé de messageSectionHitPcNuitNmois03Renseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.pcNuitNmois03.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS03_RENSEIGNE_01 
		= "message.SectionHit.pcNuitNmois03.renseigne";
	
	/**
	 * messageSectionHitPcNuitNmois03Renseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitPcNuitNmois03Renseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le pourcentage de trafic de nuit tous véhicules mensuel du mois de mars (03) de l'année n de la section HIT (colonnes [192-194] du HIT) doit être renseigné".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_PCNUITNMOIS03_RENSEIGNE_01_EN_DUR 
		= "le pourcentage de trafic de nuit tous véhicules mensuel du mois de mars (03) de l'année n de la section HIT (colonnes [192-194] du HIT) doit être renseigné";
		
	/**
	 * clé de messageSectionHitPcNuitNmois03Regex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.pcNuitNmois03.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS03_REGEX_02 
		= "message.SectionHit.pcNuitNmois03.regex";
	
	/**
	 * messageSectionHitPcNuitNmois03Regex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitPcNuitNmois03Regex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le pourcentage de trafic de nuit tous véhicules mensuel du mois de mars (03) de l'année n de la section HIT (colonnes [192-194] du HIT) doit comporter exactement 3 chiffres".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_PCNUITNMOIS03_REGEX_02_EN_DUR 
		= "le pourcentage de trafic de nuit tous véhicules mensuel du mois de mars (03) de l'année n de la section HIT (colonnes [192-194] du HIT) doit comporter exactement 3 chiffres";
		
	/**
	 * clé de messageSectionHitPcNuitNmois03Numerique03 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.pcNuitNmois03.numerique"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS03_NUMERIQUE_03 
		= "message.SectionHit.pcNuitNmois03.numerique";
	
	/**
	 * messageSectionHitPcNuitNmois03Numerique03 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitPcNuitNmois03Numerique03 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le pourcentage de trafic de nuit tous véhicules mensuel du mois de mars (03) de l'année n de la section HIT (colonnes [192-194] du HIT) doit être homogène à un entier".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_PCNUITNMOIS03_NUMERIQUE_03_EN_DUR 
		= "le pourcentage de trafic de nuit tous véhicules mensuel du mois de mars (03) de l'année n de la section HIT (colonnes [192-194] du HIT) doit être homogène à un entier";
	
	/* 50 - mjmNmois04. *******/
	/**
	 * clé de messageSectionHitMjmNmois04Renseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.mjmNmois04.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_MJMNMOIS04_RENSEIGNE_01 
		= "message.SectionHit.mjmNmois04.renseigne";
	
	/**
	 * messageSectionHitMjmNmois04Renseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitMjmNmois04Renseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "la moyenne journalière mensuelle du mois de avril (04) de l'année n en véhicules/jour de la section HIT (colonnes [195-200] du HIT) doit être renseignée".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_MJMNMOIS04_RENSEIGNE_01_EN_DUR 
		= "la moyenne journalière mensuelle du mois de avril (04) de l'année n en véhicules/jour de la section HIT (colonnes [195-200] du HIT) doit être renseignée";
		
	/**
	 * clé de messageSectionHitMjmNmois04Regex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.mjmNmois04.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_MJMNMOIS04_REGEX_02 
		= "message.SectionHit.mjmNmois04.regex";
	
	/**
	 * messageSectionHitMjmNmois04Regex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitMjmNmois04Regex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "la moyenne journalière mensuelle du mois de avril (04) de l'année n en véhicules/jour de la section HIT (colonnes [195-200] du HIT) doit comporter exactement 6 chiffres".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_MJMNMOIS04_REGEX_02_EN_DUR 
		= "la moyenne journalière mensuelle du mois de avril (04) de l'année n en véhicules/jour de la section HIT (colonnes [195-200] du HIT) doit comporter exactement 6 chiffres";
		
	/**
	 * clé de messageSectionHitMjmNmois04Numerique03 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.mjmNmois04.numerique"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_MJMNMOIS04_NUMERIQUE_03 
		= "message.SectionHit.mjmNmois04.numerique";
	
	/**
	 * messageSectionHitMjmNmois04Numerique03 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitMjmNmois04Numerique03 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "la moyenne journalière mensuelle du mois de avril (04) de l'année n en véhicules/jour de la section HIT (colonnes [195-200] du HIT) doit être homogène à un entier".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_MJMNMOIS04_NUMERIQUE_03_EN_DUR 
		= "la moyenne journalière mensuelle du mois de avril (04) de l'année n en véhicules/jour de la section HIT (colonnes [195-200] du HIT) doit être homogène à un entier";
	
	/* 51 - pcNuitNmois04. *******/
	/**
	 * clé de messageSectionHitPcNuitNmois04Renseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.pcNuitNmois04.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS04_RENSEIGNE_01 
		= "message.SectionHit.pcNuitNmois04.renseigne";
	
	/**
	 * messageSectionHitPcNuitNmois04Renseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitPcNuitNmois04Renseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le pourcentage de trafic de nuit tous véhicules mensuel du mois de avril (04) de l'année n de la section HIT (colonnes [201-203] du HIT) doit être renseigné".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_PCNUITNMOIS04_RENSEIGNE_01_EN_DUR 
		= "le pourcentage de trafic de nuit tous véhicules mensuel du mois de avril (04) de l'année n de la section HIT (colonnes [201-203] du HIT) doit être renseigné";
		
	/**
	 * clé de messageSectionHitPcNuitNmois04Regex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.pcNuitNmois04.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS04_REGEX_02 
		= "message.SectionHit.pcNuitNmois04.regex";
	
	/**
	 * messageSectionHitPcNuitNmois04Regex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitPcNuitNmois04Regex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le pourcentage de trafic de nuit tous véhicules mensuel du mois de avril (04) de l'année n de la section HIT (colonnes [201-203] du HIT) doit comporter exactement 3 chiffres".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_PCNUITNMOIS04_REGEX_02_EN_DUR 
		= "le pourcentage de trafic de nuit tous véhicules mensuel du mois de avril (04) de l'année n de la section HIT (colonnes [201-203] du HIT) doit comporter exactement 3 chiffres";
		
	/**
	 * clé de messageSectionHitPcNuitNmois04Numerique03 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.pcNuitNmois04.numerique"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS04_NUMERIQUE_03 
		= "message.SectionHit.pcNuitNmois04.numerique";
	
	/**
	 * messageSectionHitPcNuitNmois04Numerique03 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitPcNuitNmois04Numerique03 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le pourcentage de trafic de nuit tous véhicules mensuel du mois de avril (04) de l'année n de la section HIT (colonnes [201-203] du HIT) doit être homogène à un entier".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_PCNUITNMOIS04_NUMERIQUE_03_EN_DUR 
		= "le pourcentage de trafic de nuit tous véhicules mensuel du mois de avril (04) de l'année n de la section HIT (colonnes [201-203] du HIT) doit être homogène à un entier";

	
	/* 52 - mjmNmois05. *******/
	/**
	 * clé de messageSectionHitMjmNmois05Renseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.mjmNmois05.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_MJMNMOIS05_RENSEIGNE_01 
		= "message.SectionHit.mjmNmois05.renseigne";
	
	/**
	 * messageSectionHitMjmNmois05Renseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitMjmNmois05Renseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "la moyenne journalière mensuelle du mois de mai (05) de l'année n en véhicules/jour de la section HIT (colonnes [204-209] du HIT) doit être renseignée".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_MJMNMOIS05_RENSEIGNE_01_EN_DUR 
		= "la moyenne journalière mensuelle du mois de mai (05) de l'année n en véhicules/jour de la section HIT (colonnes [204-209] du HIT) doit être renseignée";
		
	/**
	 * clé de messageSectionHitMjmNmois05Regex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.mjmNmois05.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_MJMNMOIS05_REGEX_02 
		= "message.SectionHit.mjmNmois05.regex";
	
	/**
	 * messageSectionHitMjmNmois05Regex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitMjmNmois05Regex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "la moyenne journalière mensuelle du mois de mai (05) de l'année n en véhicules/jour de la section HIT (colonnes [204-209] du HIT) doit comporter exactement 6 chiffres".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_MJMNMOIS05_REGEX_02_EN_DUR 
		= "la moyenne journalière mensuelle du mois de mai (05) de l'année n en véhicules/jour de la section HIT (colonnes [204-209] du HIT) doit comporter exactement 6 chiffres";
		
	/**
	 * clé de messageSectionHitMjmNmois05Numerique03 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.mjmNmois05.numerique"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_MJMNMOIS05_NUMERIQUE_03 
		= "message.SectionHit.mjmNmois05.numerique";
	
	/**
	 * messageSectionHitMjmNmois05Numerique03 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitMjmNmois05Numerique03 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "la moyenne journalière mensuelle du mois de mai (05) de l'année n en véhicules/jour de la section HIT (colonnes [204-209] du HIT) doit être homogène à un entier".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_MJMNMOIS05_NUMERIQUE_03_EN_DUR 
		= "la moyenne journalière mensuelle du mois de mai (05) de l'année n en véhicules/jour de la section HIT (colonnes [204-209] du HIT) doit être homogène à un entier";
	
	/* 53 - pcNuitNmois05. *******/
	/**
	 * clé de messageSectionHitPcNuitNmois05Renseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.pcNuitNmois05.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS05_RENSEIGNE_01 
		= "message.SectionHit.pcNuitNmois05.renseigne";
	
	/**
	 * messageSectionHitPcNuitNmois05Renseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitPcNuitNmois05Renseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le pourcentage de trafic de nuit tous véhicules mensuel du mois de mai (05) de l'année n de la section HIT (colonnes [210-212] du HIT) doit être renseigné".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_PCNUITNMOIS05_RENSEIGNE_01_EN_DUR 
		= "le pourcentage de trafic de nuit tous véhicules mensuel du mois de mai (05) de l'année n de la section HIT (colonnes [210-212] du HIT) doit être renseigné";
		
	/**
	 * clé de messageSectionHitPcNuitNmois05Regex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.pcNuitNmois05.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS05_REGEX_02 
		= "message.SectionHit.pcNuitNmois05.regex";
	
	/**
	 * messageSectionHitPcNuitNmois05Regex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitPcNuitNmois05Regex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le pourcentage de trafic de nuit tous véhicules mensuel du mois de mai (05) de l'année n de la section HIT (colonnes [210-212] du HIT) doit comporter exactement 3 chiffres".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_PCNUITNMOIS05_REGEX_02_EN_DUR 
		= "le pourcentage de trafic de nuit tous véhicules mensuel du mois de mai (05) de l'année n de la section HIT (colonnes [210-212] du HIT) doit comporter exactement 3 chiffres";
		
	/**
	 * clé de messageSectionHitPcNuitNmois05Numerique03 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.pcNuitNmois05.numerique"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS05_NUMERIQUE_03 
		= "message.SectionHit.pcNuitNmois05.numerique";
	
	/**
	 * messageSectionHitPcNuitNmois05Numerique03 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitPcNuitNmois05Numerique03 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le pourcentage de trafic de nuit tous véhicules mensuel du mois de mai (05) de l'année n de la section HIT (colonnes [210-212] du HIT) doit être homogène à un entier".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_PCNUITNMOIS05_NUMERIQUE_03_EN_DUR 
		= "le pourcentage de trafic de nuit tous véhicules mensuel du mois de mai (05) de l'année n de la section HIT (colonnes [210-212] du HIT) doit être homogène à un entier";

	
	/* 54 - mjmNmois06. *******/
	/**
	 * clé de messageSectionHitMjmNmois06Renseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.mjmNmois06.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_MJMNMOIS06_RENSEIGNE_01 
		= "message.SectionHit.mjmNmois06.renseigne";
	
	/**
	 * messageSectionHitMjmNmois06Renseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitMjmNmois06Renseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "la moyenne journalière mensuelle du mois de juin (06) de l'année n en véhicules/jour de la section HIT (colonnes [213-218] du HIT) doit être renseignée".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_MJMNMOIS06_RENSEIGNE_01_EN_DUR 
		= "la moyenne journalière mensuelle du mois de juin (06) de l'année n en véhicules/jour de la section HIT (colonnes [213-218] du HIT) doit être renseignée";
		
	/**
	 * clé de messageSectionHitMjmNmois06Regex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.mjmNmois06.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_MJMNMOIS06_REGEX_02 
		= "message.SectionHit.mjmNmois06.regex";
	
	/**
	 * messageSectionHitMjmNmois06Regex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitMjmNmois06Regex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "la moyenne journalière mensuelle du mois de juin (06) de l'année n en véhicules/jour de la section HIT (colonnes [213-218] du HIT) doit comporter exactement 6 chiffres".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_MJMNMOIS06_REGEX_02_EN_DUR 
		= "la moyenne journalière mensuelle du mois de juin (06) de l'année n en véhicules/jour de la section HIT (colonnes [213-218] du HIT) doit comporter exactement 6 chiffres";
		
	/**
	 * clé de messageSectionHitMjmNmois06Numerique03 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.mjmNmois06.numerique"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_MJMNMOIS06_NUMERIQUE_03 
		= "message.SectionHit.mjmNmois06.numerique";
	
	/**
	 * messageSectionHitMjmNmois06Numerique03 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitMjmNmois06Numerique03 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "la moyenne journalière mensuelle du mois de juin (06) de l'année n en véhicules/jour de la section HIT (colonnes [213-218] du HIT) doit être homogène à un entier".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_MJMNMOIS06_NUMERIQUE_03_EN_DUR 
		= "la moyenne journalière mensuelle du mois de juin (06) de l'année n en véhicules/jour de la section HIT (colonnes [213-218] du HIT) doit être homogène à un entier";
	
	/* 55 - pcNuitNmois06. *******/
	/**
	 * clé de messageSectionHitPcNuitNmois06Renseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.pcNuitNmois06.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS06_RENSEIGNE_01 
		= "message.SectionHit.pcNuitNmois06.renseigne";
	
	/**
	 * messageSectionHitPcNuitNmois06Renseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitPcNuitNmois06Renseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le pourcentage de trafic de nuit tous véhicules mensuel du mois de juin (06) de l'année n de la section HIT (colonnes [219-221] du HIT) doit être renseigné".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_PCNUITNMOIS06_RENSEIGNE_01_EN_DUR 
		= "le pourcentage de trafic de nuit tous véhicules mensuel du mois de juin (06) de l'année n de la section HIT (colonnes [219-221] du HIT) doit être renseigné";
		
	/**
	 * clé de messageSectionHitPcNuitNmois06Regex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.pcNuitNmois06.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS06_REGEX_02 
		= "message.SectionHit.pcNuitNmois06.regex";
	
	/**
	 * messageSectionHitPcNuitNmois06Regex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitPcNuitNmois06Regex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le pourcentage de trafic de nuit tous véhicules mensuel du mois de juin (06) de l'année n de la section HIT (colonnes [219-221] du HIT) doit comporter exactement 3 chiffres".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_PCNUITNMOIS06_REGEX_02_EN_DUR 
		= "le pourcentage de trafic de nuit tous véhicules mensuel du mois de juin (06) de l'année n de la section HIT (colonnes [219-221] du HIT) doit comporter exactement 3 chiffres";
		
	/**
	 * clé de messageSectionHitPcNuitNmois06Numerique03 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.pcNuitNmois06.numerique"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS06_NUMERIQUE_03 
		= "message.SectionHit.pcNuitNmois06.numerique";
	
	/**
	 * messageSectionHitPcNuitNmois06Numerique03 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitPcNuitNmois06Numerique03 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le pourcentage de trafic de nuit tous véhicules mensuel du mois de juin (06) de l'année n de la section HIT (colonnes [219-221] du HIT) doit être homogène à un entier".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_PCNUITNMOIS06_NUMERIQUE_03_EN_DUR 
		= "le pourcentage de trafic de nuit tous véhicules mensuel du mois de juin (06) de l'année n de la section HIT (colonnes [219-221] du HIT) doit être homogène à un entier";

	
	/* 56 - mjmNmois07. *******/
	/**
	 * clé de messageSectionHitMjmNmois07Renseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.mjmNmois07.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_MJMNMOIS07_RENSEIGNE_01 
		= "message.SectionHit.mjmNmois07.renseigne";
	
	/**
	 * messageSectionHitMjmNmois07Renseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitMjmNmois07Renseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "la moyenne journalière mensuelle du mois de juillet (07) de l'année n en véhicules/jour de la section HIT (colonnes [222-227] du HIT) doit être renseignée".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_MJMNMOIS07_RENSEIGNE_01_EN_DUR 
		= "la moyenne journalière mensuelle du mois de juillet (07) de l'année n en véhicules/jour de la section HIT (colonnes [222-227] du HIT) doit être renseignée";
		
	/**
	 * clé de messageSectionHitMjmNmois07Regex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.mjmNmois07.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_MJMNMOIS07_REGEX_02 
		= "message.SectionHit.mjmNmois07.regex";
	
	/**
	 * messageSectionHitMjmNmois07Regex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitMjmNmois07Regex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "la moyenne journalière mensuelle du mois de juillet (07) de l'année n en véhicules/jour de la section HIT (colonnes [222-227] du HIT) doit comporter exactement 6 chiffres".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_MJMNMOIS07_REGEX_02_EN_DUR 
		= "la moyenne journalière mensuelle du mois de juillet (07) de l'année n en véhicules/jour de la section HIT (colonnes [222-227] du HIT) doit comporter exactement 6 chiffres";
		
	/**
	 * clé de messageSectionHitMjmNmois07Numerique03 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.mjmNmois07.numerique"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_MJMNMOIS07_NUMERIQUE_03 
		= "message.SectionHit.mjmNmois07.numerique";
	
	/**
	 * messageSectionHitMjmNmois07Numerique03 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitMjmNmois07Numerique03 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "la moyenne journalière mensuelle du mois de juillet (07) de l'année n en véhicules/jour de la section HIT (colonnes [222-227] du HIT) doit être homogène à un entier".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_MJMNMOIS07_NUMERIQUE_03_EN_DUR 
		= "la moyenne journalière mensuelle du mois de juillet (07) de l'année n en véhicules/jour de la section HIT (colonnes [222-227] du HIT) doit être homogène à un entier";
	
	/* 57 - pcNuitNmois07. *******/
	/**
	 * clé de messageSectionHitPcNuitNmois07Renseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.pcNuitNmois07.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS07_RENSEIGNE_01 
		= "message.SectionHit.pcNuitNmois07.renseigne";
	
	/**
	 * messageSectionHitPcNuitNmois07Renseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitPcNuitNmois07Renseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le pourcentage de trafic de nuit tous véhicules mensuel du mois de juillet (07) de l'année n de la section HIT (colonnes [228-230] du HIT) doit être renseigné".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_PCNUITNMOIS07_RENSEIGNE_01_EN_DUR 
		= "le pourcentage de trafic de nuit tous véhicules mensuel du mois de juillet (07) de l'année n de la section HIT (colonnes [228-230] du HIT) doit être renseigné";
		
	/**
	 * clé de messageSectionHitPcNuitNmois07Regex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.pcNuitNmois07.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS07_REGEX_02 
		= "message.SectionHit.pcNuitNmois07.regex";
	
	/**
	 * messageSectionHitPcNuitNmois07Regex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitPcNuitNmois07Regex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le pourcentage de trafic de nuit tous véhicules mensuel du mois de juillet (07) de l'année n de la section HIT (colonnes [228-230] du HIT) doit comporter exactement 3 chiffres".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_PCNUITNMOIS07_REGEX_02_EN_DUR 
		= "le pourcentage de trafic de nuit tous véhicules mensuel du mois de juillet (07) de l'année n de la section HIT (colonnes [228-230] du HIT) doit comporter exactement 3 chiffres";
		
	/**
	 * clé de messageSectionHitPcNuitNmois07Numerique03 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.pcNuitNmois07.numerique"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS07_NUMERIQUE_03 
		= "message.SectionHit.pcNuitNmois07.numerique";
	
	/**
	 * messageSectionHitPcNuitNmois07Numerique03 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitPcNuitNmois07Numerique03 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le pourcentage de trafic de nuit tous véhicules mensuel du mois de juillet (07) de l'année n de la section HIT (colonnes [228-230] du HIT) doit être homogène à un entier".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_PCNUITNMOIS07_NUMERIQUE_03_EN_DUR 
		= "le pourcentage de trafic de nuit tous véhicules mensuel du mois de juillet (07) de l'année n de la section HIT (colonnes [228-230] du HIT) doit être homogène à un entier";

	
	/* 58 - mjmNmois08. *******/
	/**
	 * clé de messageSectionHitMjmNmois08Renseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.mjmNmois08.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_MJMNMOIS08_RENSEIGNE_01 
		= "message.SectionHit.mjmNmois08.renseigne";
	
	/**
	 * messageSectionHitMjmNmois08Renseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitMjmNmois08Renseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "la moyenne journalière mensuelle du mois de août (08) de l'année n en véhicules/jour de la section HIT (colonnes [231-236] du HIT) doit être renseignée".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_MJMNMOIS08_RENSEIGNE_01_EN_DUR 
		= "la moyenne journalière mensuelle du mois de août (08) de l'année n en véhicules/jour de la section HIT (colonnes [231-236] du HIT) doit être renseignée";
		
	/**
	 * clé de messageSectionHitMjmNmois08Regex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.mjmNmois08.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_MJMNMOIS08_REGEX_02 
		= "message.SectionHit.mjmNmois08.regex";
	
	/**
	 * messageSectionHitMjmNmois08Regex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitMjmNmois08Regex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "la moyenne journalière mensuelle du mois de août (08) de l'année n en véhicules/jour de la section HIT (colonnes [231-236] du HIT) doit comporter exactement 6 chiffres".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_MJMNMOIS08_REGEX_02_EN_DUR 
		= "la moyenne journalière mensuelle du mois de août (08) de l'année n en véhicules/jour de la section HIT (colonnes [231-236] du HIT) doit comporter exactement 6 chiffres";
		
	/**
	 * clé de messageSectionHitMjmNmois08Numerique03 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.mjmNmois08.numerique"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_MJMNMOIS08_NUMERIQUE_03 
		= "message.SectionHit.mjmNmois08.numerique";
	
	/**
	 * messageSectionHitMjmNmois08Numerique03 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitMjmNmois08Numerique03 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "la moyenne journalière mensuelle du mois de août (08) de l'année n en véhicules/jour de la section HIT (colonnes [231-236] du HIT) doit être homogène à un entier".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_MJMNMOIS08_NUMERIQUE_03_EN_DUR 
		= "la moyenne journalière mensuelle du mois de août (08) de l'année n en véhicules/jour de la section HIT (colonnes [231-236] du HIT) doit être homogène à un entier";
	
	/* 59 - pcNuitNmois08. *******/
	/**
	 * clé de messageSectionHitPcNuitNmois08Renseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.pcNuitNmois08.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS08_RENSEIGNE_01 
		= "message.SectionHit.pcNuitNmois08.renseigne";
	
	/**
	 * messageSectionHitPcNuitNmois08Renseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitPcNuitNmois08Renseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le pourcentage de trafic de nuit tous véhicules mensuel du mois de août (08) de l'année n de la section HIT (colonnes [237-239] du HIT) doit être renseigné".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_PCNUITNMOIS08_RENSEIGNE_01_EN_DUR 
		= "le pourcentage de trafic de nuit tous véhicules mensuel du mois de août (08) de l'année n de la section HIT (colonnes [237-239] du HIT) doit être renseigné";
		
	/**
	 * clé de messageSectionHitPcNuitNmois08Regex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.pcNuitNmois08.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS08_REGEX_02 
		= "message.SectionHit.pcNuitNmois08.regex";
	
	/**
	 * messageSectionHitPcNuitNmois08Regex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitPcNuitNmois08Regex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le pourcentage de trafic de nuit tous véhicules mensuel du mois de août (08) de l'année n de la section HIT (colonnes [237-239] du HIT) doit comporter exactement 3 chiffres".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_PCNUITNMOIS08_REGEX_02_EN_DUR 
		= "le pourcentage de trafic de nuit tous véhicules mensuel du mois de août (08) de l'année n de la section HIT (colonnes [237-239] du HIT) doit comporter exactement 3 chiffres";
		
	/**
	 * clé de messageSectionHitPcNuitNmois08Numerique03 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.pcNuitNmois08.numerique"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS08_NUMERIQUE_03 
		= "message.SectionHit.pcNuitNmois08.numerique";
	
	/**
	 * messageSectionHitPcNuitNmois08Numerique03 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitPcNuitNmois08Numerique03 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le pourcentage de trafic de nuit tous véhicules mensuel du mois de août (08) de l'année n de la section HIT (colonnes [237-239] du HIT) doit être homogène à un entier".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_PCNUITNMOIS08_NUMERIQUE_03_EN_DUR 
		= "le pourcentage de trafic de nuit tous véhicules mensuel du mois de août (08) de l'année n de la section HIT (colonnes [237-239] du HIT) doit être homogène à un entier";

	
	/* 60 - mjmNmois09. *******/
	/**
	 * clé de messageSectionHitMjmNmois09Renseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.mjmNmois09.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_MJMNMOIS09_RENSEIGNE_01 
		= "message.SectionHit.mjmNmois09.renseigne";
	
	/**
	 * messageSectionHitMjmNmois09Renseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitMjmNmois09Renseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "la moyenne journalière mensuelle du mois de septembre (09) de l'année n en véhicules/jour de la section HIT (colonnes [240-245] du HIT) doit être renseignée".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_MJMNMOIS09_RENSEIGNE_01_EN_DUR 
		= "la moyenne journalière mensuelle du mois de septembre (09) de l'année n en véhicules/jour de la section HIT (colonnes [240-245] du HIT) doit être renseignée";
		
	/**
	 * clé de messageSectionHitMjmNmois09Regex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.mjmNmois09.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_MJMNMOIS09_REGEX_02 
		= "message.SectionHit.mjmNmois09.regex";
	
	/**
	 * messageSectionHitMjmNmois09Regex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitMjmNmois09Regex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "la moyenne journalière mensuelle du mois de septembre (09) de l'année n en véhicules/jour de la section HIT (colonnes [240-245] du HIT) doit comporter exactement 6 chiffres".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_MJMNMOIS09_REGEX_02_EN_DUR 
		= "la moyenne journalière mensuelle du mois de septembre (09) de l'année n en véhicules/jour de la section HIT (colonnes [240-245] du HIT) doit comporter exactement 6 chiffres";
		
	/**
	 * clé de messageSectionHitMjmNmois09Numerique03 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.mjmNmois09.numerique"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_MJMNMOIS09_NUMERIQUE_03 
		= "message.SectionHit.mjmNmois09.numerique";
	
	/**
	 * messageSectionHitMjmNmois09Numerique03 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitMjmNmois09Numerique03 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "la moyenne journalière mensuelle du mois de septembre (09) de l'année n en véhicules/jour de la section HIT (colonnes [240-245] du HIT) doit être homogène à un entier".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_MJMNMOIS09_NUMERIQUE_03_EN_DUR 
		= "la moyenne journalière mensuelle du mois de septembre (09) de l'année n en véhicules/jour de la section HIT (colonnes [240-245] du HIT) doit être homogène à un entier";
	
	/* 61 - pcNuitNmois09. *******/
	/**
	 * clé de messageSectionHitPcNuitNmois09Renseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.pcNuitNmois09.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS09_RENSEIGNE_01 
		= "message.SectionHit.pcNuitNmois09.renseigne";
	
	/**
	 * messageSectionHitPcNuitNmois09Renseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitPcNuitNmois09Renseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le pourcentage de trafic de nuit tous véhicules mensuel du mois de septembre (09) de l'année n de la section HIT (colonnes [246-248] du HIT) doit être renseigné".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_PCNUITNMOIS09_RENSEIGNE_01_EN_DUR 
		= "le pourcentage de trafic de nuit tous véhicules mensuel du mois de septembre (09) de l'année n de la section HIT (colonnes [246-248] du HIT) doit être renseigné";
		
	/**
	 * clé de messageSectionHitPcNuitNmois09Regex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.pcNuitNmois09.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS09_REGEX_02 
		= "message.SectionHit.pcNuitNmois09.regex";
	
	/**
	 * messageSectionHitPcNuitNmois09Regex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitPcNuitNmois09Regex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le pourcentage de trafic de nuit tous véhicules mensuel du mois de septembre (09) de l'année n de la section HIT (colonnes [246-248] du HIT) doit comporter exactement 3 chiffres".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_PCNUITNMOIS09_REGEX_02_EN_DUR 
		= "le pourcentage de trafic de nuit tous véhicules mensuel du mois de septembre (09) de l'année n de la section HIT (colonnes [246-248] du HIT) doit comporter exactement 3 chiffres";
		
	/**
	 * clé de messageSectionHitPcNuitNmois09Numerique03 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.pcNuitNmois09.numerique"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS09_NUMERIQUE_03 
		= "message.SectionHit.pcNuitNmois09.numerique";
	
	/**
	 * messageSectionHitPcNuitNmois09Numerique03 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitPcNuitNmois09Numerique03 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le pourcentage de trafic de nuit tous véhicules mensuel du mois de septembre (09) de l'année n de la section HIT (colonnes [246-248] du HIT) doit être homogène à un entier".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_PCNUITNMOIS09_NUMERIQUE_03_EN_DUR 
		= "le pourcentage de trafic de nuit tous véhicules mensuel du mois de septembre (09) de l'année n de la section HIT (colonnes [246-248] du HIT) doit être homogène à un entier";

	
	/* 62 - mjmNmois10. *******/
	/**
	 * clé de messageSectionHitMjmNmois10Renseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.mjmNmois10.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_MJMNMOIS10_RENSEIGNE_01 
		= "message.SectionHit.mjmNmois10.renseigne";
	
	/**
	 * messageSectionHitMjmNmois10Renseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitMjmNmois10Renseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "la moyenne journalière mensuelle du mois de octobre (10) de l'année n en véhicules/jour de la section HIT (colonnes [249-254] du HIT) doit être renseignée".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_MJMNMOIS10_RENSEIGNE_01_EN_DUR 
		= "la moyenne journalière mensuelle du mois de octobre (10) de l'année n en véhicules/jour de la section HIT (colonnes [249-254] du HIT) doit être renseignée";
		
	/**
	 * clé de messageSectionHitMjmNmois10Regex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.mjmNmois10.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_MJMNMOIS10_REGEX_02 
		= "message.SectionHit.mjmNmois10.regex";
	
	/**
	 * messageSectionHitMjmNmois10Regex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitMjmNmois10Regex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "la moyenne journalière mensuelle du mois de octobre (10) de l'année n en véhicules/jour de la section HIT (colonnes [249-254] du HIT) doit comporter exactement 6 chiffres".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_MJMNMOIS10_REGEX_02_EN_DUR 
		= "la moyenne journalière mensuelle du mois de octobre (10) de l'année n en véhicules/jour de la section HIT (colonnes [249-254] du HIT) doit comporter exactement 6 chiffres";
		
	/**
	 * clé de messageSectionHitMjmNmois10Numerique03 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.mjmNmois10.numerique"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_MJMNMOIS10_NUMERIQUE_03 
		= "message.SectionHit.mjmNmois10.numerique";
	
	/**
	 * messageSectionHitMjmNmois10Numerique03 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitMjmNmois10Numerique03 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "la moyenne journalière mensuelle du mois de octobre (10) de l'année n en véhicules/jour de la section HIT (colonnes [249-254] du HIT) doit être homogène à un entier".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_MJMNMOIS10_NUMERIQUE_03_EN_DUR 
		= "la moyenne journalière mensuelle du mois de octobre (10) de l'année n en véhicules/jour de la section HIT (colonnes [249-254] du HIT) doit être homogène à un entier";
	
	/* 63 - pcNuitNmois10. *******/
	/**
	 * clé de messageSectionHitPcNuitNmois10Renseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.pcNuitNmois10.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS10_RENSEIGNE_01 
		= "message.SectionHit.pcNuitNmois10.renseigne";
	
	/**
	 * messageSectionHitPcNuitNmois10Renseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitPcNuitNmois10Renseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le pourcentage de trafic de nuit tous véhicules mensuel du mois de octobre (10) de l'année n de la section HIT (colonnes [255-257] du HIT) doit être renseigné".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_PCNUITNMOIS10_RENSEIGNE_01_EN_DUR 
		= "le pourcentage de trafic de nuit tous véhicules mensuel du mois de octobre (10) de l'année n de la section HIT (colonnes [255-257] du HIT) doit être renseigné";
		
	/**
	 * clé de messageSectionHitPcNuitNmois10Regex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.pcNuitNmois10.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS10_REGEX_02 
		= "message.SectionHit.pcNuitNmois10.regex";
	
	/**
	 * messageSectionHitPcNuitNmois10Regex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitPcNuitNmois10Regex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le pourcentage de trafic de nuit tous véhicules mensuel du mois de octobre (10) de l'année n de la section HIT (colonnes [255-257] du HIT) doit comporter exactement 3 chiffres".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_PCNUITNMOIS10_REGEX_02_EN_DUR 
		= "le pourcentage de trafic de nuit tous véhicules mensuel du mois de octobre (10) de l'année n de la section HIT (colonnes [255-257] du HIT) doit comporter exactement 3 chiffres";
		
	/**
	 * clé de messageSectionHitPcNuitNmois10Numerique03 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.pcNuitNmois10.numerique"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS10_NUMERIQUE_03 
		= "message.SectionHit.pcNuitNmois10.numerique";
	
	/**
	 * messageSectionHitPcNuitNmois10Numerique03 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitPcNuitNmois10Numerique03 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le pourcentage de trafic de nuit tous véhicules mensuel du mois de octobre (10) de l'année n de la section HIT (colonnes [255-257] du HIT) doit être homogène à un entier".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_PCNUITNMOIS10_NUMERIQUE_03_EN_DUR 
		= "le pourcentage de trafic de nuit tous véhicules mensuel du mois de octobre (10) de l'année n de la section HIT (colonnes [255-257] du HIT) doit être homogène à un entier";

	
	/* 64 - mjmNmois11. *******/
	/**
	 * clé de messageSectionHitMjmNmois11Renseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.mjmNmois11.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_MJMNMOIS11_RENSEIGNE_01 
		= "message.SectionHit.mjmNmois11.renseigne";
	
	/**
	 * messageSectionHitMjmNmois11Renseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitMjmNmois11Renseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "la moyenne journalière mensuelle du mois de novembre (11) de l'année n en véhicules/jour de la section HIT (colonnes [258-263] du HIT) doit être renseignée".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_MJMNMOIS11_RENSEIGNE_01_EN_DUR 
		= "la moyenne journalière mensuelle du mois de novembre (11) de l'année n en véhicules/jour de la section HIT (colonnes [258-263] du HIT) doit être renseignée";
		
	/**
	 * clé de messageSectionHitMjmNmois11Regex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.mjmNmois11.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_MJMNMOIS11_REGEX_02 
		= "message.SectionHit.mjmNmois11.regex";
	
	/**
	 * messageSectionHitMjmNmois11Regex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitMjmNmois11Regex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "la moyenne journalière mensuelle du mois de novembre (11) de l'année n en véhicules/jour de la section HIT (colonnes [258-263] du HIT) doit comporter exactement 6 chiffres".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_MJMNMOIS11_REGEX_02_EN_DUR 
		= "la moyenne journalière mensuelle du mois de novembre (11) de l'année n en véhicules/jour de la section HIT (colonnes [258-263] du HIT) doit comporter exactement 6 chiffres";
		
	/**
	 * clé de messageSectionHitMjmNmois11Numerique03 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.mjmNmois11.numerique"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_MJMNMOIS11_NUMERIQUE_03 
		= "message.SectionHit.mjmNmois11.numerique";
	
	/**
	 * messageSectionHitMjmNmois11Numerique03 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitMjmNmois11Numerique03 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "la moyenne journalière mensuelle du mois de novembre (11) de l'année n en véhicules/jour de la section HIT (colonnes [258-263] du HIT) doit être homogène à un entier".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_MJMNMOIS11_NUMERIQUE_03_EN_DUR 
		= "la moyenne journalière mensuelle du mois de novembre (11) de l'année n en véhicules/jour de la section HIT (colonnes [258-263] du HIT) doit être homogène à un entier";
	
	/* 65 - pcNuitNmois11. *******/
	/**
	 * clé de messageSectionHitPcNuitNmois11Renseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.pcNuitNmois11.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS11_RENSEIGNE_01 
		= "message.SectionHit.pcNuitNmois11.renseigne";
	
	/**
	 * messageSectionHitPcNuitNmois11Renseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitPcNuitNmois11Renseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le pourcentage de trafic de nuit tous véhicules mensuel du mois de novembre (11) de l'année n de la section HIT (colonnes [264-266] du HIT) doit être renseigné".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_PCNUITNMOIS11_RENSEIGNE_01_EN_DUR 
		= "le pourcentage de trafic de nuit tous véhicules mensuel du mois de novembre (11) de l'année n de la section HIT (colonnes [264-266] du HIT) doit être renseigné";
		
	/**
	 * clé de messageSectionHitPcNuitNmois11Regex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.pcNuitNmois11.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS11_REGEX_02 
		= "message.SectionHit.pcNuitNmois11.regex";
	
	/**
	 * messageSectionHitPcNuitNmois11Regex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitPcNuitNmois11Regex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le pourcentage de trafic de nuit tous véhicules mensuel du mois de novembre (11) de l'année n de la section HIT (colonnes [264-266] du HIT) doit comporter exactement 3 chiffres".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_PCNUITNMOIS11_REGEX_02_EN_DUR 
		= "le pourcentage de trafic de nuit tous véhicules mensuel du mois de novembre (11) de l'année n de la section HIT (colonnes [264-266] du HIT) doit comporter exactement 3 chiffres";
		
	/**
	 * clé de messageSectionHitPcNuitNmois11Numerique03 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.pcNuitNmois11.numerique"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS11_NUMERIQUE_03 
		= "message.SectionHit.pcNuitNmois11.numerique";
	
	/**
	 * messageSectionHitPcNuitNmois11Numerique03 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitPcNuitNmois11Numerique03 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le pourcentage de trafic de nuit tous véhicules mensuel du mois de novembre (11) de l'année n de la section HIT (colonnes [264-266] du HIT) doit être homogène à un entier".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_PCNUITNMOIS11_NUMERIQUE_03_EN_DUR 
		= "le pourcentage de trafic de nuit tous véhicules mensuel du mois de novembre (11) de l'année n de la section HIT (colonnes [264-266] du HIT) doit être homogène à un entier";

	
	/* 66 - mjmNmois12. *******/
	/**
	 * clé de messageSectionHitMjmNmois12Renseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.mjmNmois12.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_MJMNMOIS12_RENSEIGNE_01 
		= "message.SectionHit.mjmNmois12.renseigne";
	
	/**
	 * messageSectionHitMjmNmois12Renseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitMjmNmois12Renseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "la moyenne journalière mensuelle du mois de décembre (12) de l'année n en véhicules/jour de la section HIT (colonnes [267-272] du HIT) doit être renseignée".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_MJMNMOIS12_RENSEIGNE_01_EN_DUR 
		= "la moyenne journalière mensuelle du mois de décembre (12) de l'année n en véhicules/jour de la section HIT (colonnes [267-272] du HIT) doit être renseignée";
		
	/**
	 * clé de messageSectionHitMjmNmois12Regex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.mjmNmois12.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_MJMNMOIS12_REGEX_02 
		= "message.SectionHit.mjmNmois12.regex";
	
	/**
	 * messageSectionHitMjmNmois12Regex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitMjmNmois12Regex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "la moyenne journalière mensuelle du mois de décembre (12) de l'année n en véhicules/jour de la section HIT (colonnes [267-272] du HIT) doit comporter exactement 6 chiffres".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_MJMNMOIS12_REGEX_02_EN_DUR 
		= "la moyenne journalière mensuelle du mois de décembre (12) de l'année n en véhicules/jour de la section HIT (colonnes [267-272] du HIT) doit comporter exactement 6 chiffres";
		
	/**
	 * clé de messageSectionHitMjmNmois12Numerique03 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.mjmNmois12.numerique"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_MJMNMOIS12_NUMERIQUE_03 
		= "message.SectionHit.mjmNmois12.numerique";
	
	/**
	 * messageSectionHitMjmNmois12Numerique03 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitMjmNmois12Numerique03 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "la moyenne journalière mensuelle du mois de décembre (12) de l'année n en véhicules/jour de la section HIT (colonnes [267-272] du HIT) doit être homogène à un entier".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_MJMNMOIS12_NUMERIQUE_03_EN_DUR 
		= "la moyenne journalière mensuelle du mois de décembre (12) de l'année n en véhicules/jour de la section HIT (colonnes [267-272] du HIT) doit être homogène à un entier";
	
	/* 67 - pcNuitNmois12. *******/
	/**
	 * clé de messageSectionHitPcNuitNmois12Renseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.pcNuitNmois12.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS12_RENSEIGNE_01 
		= "message.SectionHit.pcNuitNmois12.renseigne";
	
	/**
	 * messageSectionHitPcNuitNmois12Renseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitPcNuitNmois12Renseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le pourcentage de trafic de nuit tous véhicules mensuel du mois de décembre (12) de l'année n de la section HIT (colonnes [273-275] du HIT) doit être renseigné".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_PCNUITNMOIS12_RENSEIGNE_01_EN_DUR 
		= "le pourcentage de trafic de nuit tous véhicules mensuel du mois de décembre (12) de l'année n de la section HIT (colonnes [273-275] du HIT) doit être renseigné";
		
	/**
	 * clé de messageSectionHitPcNuitNmois12Regex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.pcNuitNmois12.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS12_REGEX_02 
		= "message.SectionHit.pcNuitNmois12.regex";
	
	/**
	 * messageSectionHitPcNuitNmois12Regex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitPcNuitNmois12Regex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le pourcentage de trafic de nuit tous véhicules mensuel du mois de décembre (12) de l'année n de la section HIT (colonnes [273-275] du HIT) doit comporter exactement 3 chiffres".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_PCNUITNMOIS12_REGEX_02_EN_DUR 
		= "le pourcentage de trafic de nuit tous véhicules mensuel du mois de décembre (12) de l'année n de la section HIT (colonnes [273-275] du HIT) doit comporter exactement 3 chiffres";
		
	/**
	 * clé de messageSectionHitPcNuitNmois12Numerique03 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.pcNuitNmois12.numerique"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS12_NUMERIQUE_03 
		= "message.SectionHit.pcNuitNmois12.numerique";
	
	/**
	 * messageSectionHitPcNuitNmois12Numerique03 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitPcNuitNmois12Numerique03 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le pourcentage de trafic de nuit tous véhicules mensuel du mois de décembre (12) de l'année n de la section HIT (colonnes [273-275] du HIT) doit être homogène à un entier".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_PCNUITNMOIS12_NUMERIQUE_03_EN_DUR 
		= "le pourcentage de trafic de nuit tous véhicules mensuel du mois de décembre (12) de l'année n de la section HIT (colonnes [273-275] du HIT) doit être homogène à un entier";
	
	/* 68 - zoneLibre3. *******/
	/**
	 * clé de messageSectionHitZoneLibre3Renseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.zoneLibre3.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_ZONELIBRE3_RENSEIGNE_01 
		= "message.SectionHit.zoneLibre3.renseigne";
	
	/**
	 * messageSectionHitZoneLibre3Renseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitZoneLibre3Renseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "la zone libre de la section HIT (colonnes [276-287] du HIT) doit être renseignée (avec des espaces)".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_ZONELIBRE3_RENSEIGNE_01_EN_DUR 
		= "la zone libre de la section HIT (colonnes [276-287] du HIT) doit être renseignée (avec des espaces)";
		
	/**
	 * clé de messageSectionHitZoneLibre3Regex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.zoneLibre3.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_ZONELIBRE3_REGEX_02 
		= "message.SectionHit.zoneLibre3.regex";
	
	/**
	 * messageSectionHitZoneLibre3Regex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitZoneLibre3Regex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "la zone libre de la section HIT (colonnes [276-287] du HIT) doit comporter exactement 12 espaces".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_ZONELIBRE3_REGEX_02_EN_DUR 
		= "la zone libre de la section HIT (colonnes [276-287] du HIT) doit comporter exactement 12 espaces";
	
	/* 69 - anneeNmoins1. *******/
	/**
	 * clé de messageSectionHitAnneeNmoins1Renseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.anneeNmoins1.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_ANNEENMOINS1_RENSEIGNE_01 
		= "message.SectionHit.anneeNmoins1.renseigne";
	
	/**
	 * messageSectionHitAnneeNmoins1Renseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitAnneeNmoins1Renseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "l'année n-1 de la section HIT (colonnes [288-289] du HIT) doit être renseignée".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_ANNEENMOINS1_RENSEIGNE_01_EN_DUR 
		= "l'année n-1 de la section HIT (colonnes [288-289] du HIT) doit être renseignée";
		
	/**
	 * clé de messageSectionHitAnneeNmoins1Regex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.anneeNmoins1.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_ANNEENMOINS1_REGEX_02 
		= "message.SectionHit.anneeNmoins1.regex";
	
	/**
	 * messageSectionHitAnneeNmoins1Regex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitAnneeNmoins1Regex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "l'année n-1 de la section HIT (colonnes [288-289] du HIT) doit comporter exactement 2 chiffres".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_ANNEENMOINS1_REGEX_02_EN_DUR 
		= "l'année n-1 de la section HIT (colonnes [288-289] du HIT) doit comporter exactement 2 chiffres";
	
	/* 70 - mjaNmoins1. *******/
	/**
	 * clé de messageSectionHitMjaNmoins1Renseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.mjaNmoins1.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_MJANMOINS1_RENSEIGNE_01 
		= "message.SectionHit.mjaNmoins1.renseigne";
	
	/**
	 * messageSectionHitMjaNmoins1Renseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitMjaNmoins1Renseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le trafic moyen journalier annuel de l'année n-1 de la section HIT (colonnes [290-295] du HIT) doit être renseigné".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_MJANMOINS1_RENSEIGNE_01_EN_DUR 
		= "le trafic moyen journalier annuel de l'année n-1 de la section HIT (colonnes [290-295] du HIT) doit être renseigné";
		
	/**
	 * clé de messageSectionHitMjaNmoins1Regex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.mjaNmoins1.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_MJANMOINS1_REGEX_02 
		= "message.SectionHit.mjaNmoins1.regex";
	
	/**
	 * messageSectionHitMjaNmoins1Regex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitMjaNmoins1Regex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le trafic moyen journalier annuel de l'année n-1 de la section HIT (colonnes [290-295] du HIT) doit comporter exactement 6 chiffres".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_MJANMOINS1_REGEX_02_EN_DUR 
		= "le trafic moyen journalier annuel de l'année n-1 de la section HIT (colonnes [290-295] du HIT) doit comporter exactement 6 chiffres";
		
	/**
	 * clé de messageSectionHitMjaNmoins1Numerique03 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.mjaNmoins1.numerique"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_MJANMOINS1_NUMERIQUE_03 
		= "message.SectionHit.mjaNmoins1.numerique";
	
	/**
	 * messageSectionHitMjaNmoins1Numerique03 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitMjaNmoins1Numerique03 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le trafic moyen journalier annuel de l'année n-1 de la section HIT (colonnes [290-295] du HIT) doit être homogène à un entier".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_MJANMOINS1_NUMERIQUE_03_EN_DUR 
		= "le trafic moyen journalier annuel de l'année n-1 de la section HIT (colonnes [290-295] du HIT) doit être homogène à un entier";
	
	/* 71 - typeComptageNmoins1. *******/
	/**
	 * clé de messageSectionHitTypeComptageNmoins1Renseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.typeComptageNmoins1.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS1_RENSEIGNE_01 
		= "message.SectionHit.typeComptageNmoins1.renseigne";
	
	/**
	 * messageSectionHitTypeComptageNmoins1Renseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitTypeComptageNmoins1Renseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le type de comptage de l'année n-1 de la section HIT (colonne [296] du HIT) doit être renseigné".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS1_RENSEIGNE_01_EN_DUR 
		= "le type de comptage de l'année n-1 de la section HIT (colonne [296] du HIT) doit être renseigné";
		
	/**
	 * clé de messageSectionHitTypeComptageNmoins1Regex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.typeComptageNmoins1.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS1_REGEX_02 
		= "message.SectionHit.typeComptageNmoins1.regex";
	
	/**
	 * messageSectionHitTypeComptageNmoins1Regex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitTypeComptageNmoins1Regex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le type de comptage de l'année n-1 de la section HIT (colonne [296] du HIT) doit comporter exactement 1 chiffre".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS1_REGEX_02_EN_DUR 
		= "le type de comptage de l'année n-1 de la section HIT (colonne [296] du HIT) doit comporter exactement 1 chiffre";
				
	/**
	 * clé de messageSectionHitTypeComptageNmoins1Nomenclature03 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.typeComptageNmoins1.nomenclature"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS1_NOMENCLATURE_03 
		= "message.SectionHit.typeComptageNmoins1.nomenclature";
	
	/**
	 * messageSectionHitTypeComptageNmoins1Nomenclature03 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitTypeComptageNmoins1Nomenclature03 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le type de comptage de l'année n-1 de la section HIT (colonne [296] du HIT) doit respecter une nomenclature [1, 2, 3, 4, 5, 6, 7, 8, 9]".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS1_NOMENCLATURE_03_EN_DUR 
		= "le type de comptage de l'année n-1 de la section HIT (colonne [296] du HIT) doit respecter une nomenclature [1, 2, 3, 4, 5, 6, 7, 8, 9]";
	
	/* 72 - modeCalculNmoins1. *******/
	/**
	 * clé de messageSectionHitModeCalculNmoins1Renseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.modeCalculNmoins1.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_MODECALCULNMOINS1_RENSEIGNE_01 
		= "message.SectionHit.modeCalculNmoins1.renseigne";
	
	/**
	 * messageSectionHitModeCalculNmoins1Renseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitModeCalculNmoins1Renseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le mode de calcul des trafics de l'année n-1 de la section HIT (colonne [297] du HIT) doit être renseigné".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_MODECALCULNMOINS1_RENSEIGNE_01_EN_DUR 
		= "le mode de calcul des trafics de l'année n-1 de la section HIT (colonne [297] du HIT) doit être renseigné";
		
	/**
	 * clé de messageSectionHitModeCalculNmoins1Regex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.modeCalculNmoins1.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_MODECALCULNMOINS1_REGEX_02 
		= "message.SectionHit.modeCalculNmoins1.regex";
	
	/**
	 * messageSectionHitModeCalculNmoins1Regex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitModeCalculNmoins1Regex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le mode de calcul des trafics de l'année n-1 de la section HIT (colonne [297] du HIT) doit comporter exactement 1 caractère (ou espace)".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_MODECALCULNMOINS1_REGEX_02_EN_DUR 
		= "le mode de calcul des trafics de l'année n-1 de la section HIT (colonne [297] du HIT) doit comporter exactement 1 caractère (ou espace)";
	
	/* 73 - pcPLNmoins1. *******/
	/**
	 * clé de messageSectionHitPcPLNmoins1Renseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.pcPLNmoins1.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_PCPLNMOINS1_RENSEIGNE_01 
		= "message.SectionHit.pcPLNmoins1.renseigne";
	
	/**
	 * messageSectionHitPcPLNmoins1Renseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitPcPLNmoins1Renseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le pourcentage de trafic poids lourds annuel de l'année n-1 de la section HIT (colonnes [298-300] du HIT) doit être renseigné".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_PCPLNMOINS1_RENSEIGNE_01_EN_DUR 
		= "le pourcentage de trafic poids lourds annuel de l'année n-1 de la section HIT (colonnes [298-300] du HIT) doit être renseigné";
		
	/**
	 * clé de messageSectionHitPcPLNmoins1Regex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.pcPLNmoins1.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_PCPLNMOINS1_REGEX_02 
		= "message.SectionHit.pcPLNmoins1.regex";
	
	/**
	 * messageSectionHitPcPLNmoins1Regex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitPcPLNmoins1Regex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le pourcentage de trafic poids lourds annuel de l'année n-1 de la section HIT (colonnes [298-300] du HIT) doit comporter exactement 3 chiffres".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_PCPLNMOINS1_REGEX_02_EN_DUR 
		= "le pourcentage de trafic poids lourds annuel de l'année n-1 de la section HIT (colonnes [298-300] du HIT) doit comporter exactement 3 chiffres";
		
	/**
	 * clé de messageSectionHitPcPLNmoins1Numerique03 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.pcPLNmoins1.numerique"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_PCPLNMOINS1_NUMERIQUE_03 
		= "message.SectionHit.pcPLNmoins1.numerique";
	
	/**
	 * messageSectionHitPcPLNmoins1Numerique03 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitPcPLNmoins1Numerique03 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le pourcentage de trafic poids lourds annuel de l'année n-1 de la section HIT (colonnes [298-300] du HIT) doit être homogène à un entier".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_PCPLNMOINS1_NUMERIQUE_03_EN_DUR 
		= "le pourcentage de trafic poids lourds annuel de l'année n-1 de la section HIT (colonnes [298-300] du HIT) doit être homogène à un entier";
	
	/* 74 - evaluationPLNmoins1. *******/
	/**
	 * clé de messageSectionHitEvaluationPLNmoins1Renseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.evaluationPLNmoins1.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_EVALUATIONPLNMOINS1_RENSEIGNE_01 
		= "message.SectionHit.evaluationPLNmoins1.renseigne";
	
	/**
	 * messageSectionHitEvaluationPLNmoins1Renseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitEvaluationPLNmoins1Renseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "l'évaluation des pourcentages de trafic poids lourds de l'année n-1 de la section HIT (colonne [301] du HIT) doit être renseigné".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_EVALUATIONPLNMOINS1_RENSEIGNE_01_EN_DUR 
		= "l'évaluation des pourcentages de trafic poids lourds de l'année n-1 de la section HIT (colonne [301] du HIT) doit être renseigné";
		
	/**
	 * clé de messageSectionHitEvaluationPLNmoins1Regex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.evaluationPLNmoins1.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_EVALUATIONPLNMOINS1_REGEX_02 
		= "message.SectionHit.evaluationPLNmoins1.regex";
	
	/**
	 * messageSectionHitEvaluationPLNmoins1Regex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitEvaluationPLNmoins1Regex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "l'évaluation des pourcentages de trafic poids lourds de l'année n-1 de la section HIT (colonne [301] du HIT) doit comporter exactement 1 caractère (ou espace)".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_EVALUATIONPLNMOINS1_REGEX_02_EN_DUR 
		= "l'évaluation des pourcentages de trafic poids lourds de l'année n-1 de la section HIT (colonne [301] du HIT) doit comporter exactement 1 caractère (ou espace)";
	
	/* 75 - pcNuitAnnuelNmoins1. *******/
	/**
	 * clé de messageSectionHitPcNuitAnnuelNmoins1Renseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.pcNuitAnnuelNmoins1.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS1_RENSEIGNE_01 
		= "message.SectionHit.pcNuitAnnuelNmoins1.renseigne";
	
	/**
	 * messageSectionHitPcNuitAnnuelNmoins1Renseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitPcNuitAnnuelNmoins1Renseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le pourcentage de trafic de nuit tous véhicules annuel de l'année n-1 de la section HIT (colonnes [302-304] du HIT) doit être renseigné".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS1_RENSEIGNE_01_EN_DUR 
		= "le pourcentage de trafic de nuit tous véhicules annuel de l'année n-1 de la section HIT (colonnes [302-304] du HIT) doit être renseigné";
		
	/**
	 * clé de messageSectionHitPcNuitAnnuelNmoins1Regex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.pcNuitAnnuelNmoins1.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS1_REGEX_02 
		= "message.SectionHit.pcNuitAnnuelNmoins1.regex";
	
	/**
	 * messageSectionHitPcNuitAnnuelNmoins1Regex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitPcNuitAnnuelNmoins1Regex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le pourcentage de trafic de nuit tous véhicules annuel de l'année n-1 de la section HIT (colonnes [302-304] du HIT) doit comporter exactement 3 chiffres".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS1_REGEX_02_EN_DUR 
		= "le pourcentage de trafic de nuit tous véhicules annuel de l'année n-1 de la section HIT (colonnes [302-304] du HIT) doit comporter exactement 3 chiffres";
		
	/**
	 * clé de messageSectionHitPcNuitAnnuelNmoins1Numerique03 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.pcNuitAnnuelNmoins1.numerique"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS1_NUMERIQUE_03 
		= "message.SectionHit.pcNuitAnnuelNmoins1.numerique";
	
	/**
	 * messageSectionHitPcNuitAnnuelNmoins1Numerique03 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitPcNuitAnnuelNmoins1Numerique03 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le pourcentage de trafic de nuit tous véhicules annuel de l'année n-1 de la section HIT (colonnes [302-304] du HIT) doit être homogène à un entier".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS1_NUMERIQUE_03_EN_DUR 
		= "le pourcentage de trafic de nuit tous véhicules annuel de l'année n-1 de la section HIT (colonnes [302-304] du HIT) doit être homogène à un entier";
	
	/* 76 - indiceFiabiliteMjaNmoins1. *******/
	/**
	 * clé de messageSectionHitIndiceFiabiliteMjaNmoins1Renseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.indiceFiabiliteMjaNmoins1.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_INDICEFIABLITEMJANMOINS1_RENSEIGNE_01 
		= "message.SectionHit.indiceFiabiliteMjaNmoins1.renseigne";
	
	/**
	 * messageSectionHitIndiceFiabiliteMjaNmoins1Renseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitIndiceFiabiliteMjaNmoins1Renseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "l'indice de fiabilité de la TMJA de l'année n-1 de la section HIT (colonne [305] du HIT) doit être renseigné".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_INDICEFIABLITEMJANMOINS1_RENSEIGNE_01_EN_DUR 
		= "l'indice de fiabilité de la TMJA de l'année n-1 de la section HIT (colonne [305] du HIT) doit être renseigné";
		
	/**
	 * clé de messageSectionHitIndiceFiabiliteMjaNmoins1Regex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.indiceFiabiliteMjaNmoins1.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_INDICEFIABLITEMJANMOINS1_REGEX_02 
		= "message.SectionHit.indiceFiabiliteMjaNmoins1.regex";
	
	/**
	 * messageSectionHitIndiceFiabiliteMjaNmoins1Regex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitIndiceFiabiliteMjaNmoins1Regex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "l'indice de fiabilité de la TMJA de l'année n-1 de la section HIT (colonne [305] du HIT) doit comporter exactement 1 caractère (ou espace)".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_INDICEFIABLITEMJANMOINS1_REGEX_02_EN_DUR 
		= "l'indice de fiabilité de la TMJA de l'année n-1 de la section HIT (colonne [305] du HIT) doit comporter exactement 1 caractère (ou espace)";
	
	/* 77 - anneeNmoins2. *******/
	/**
	 * clé de messageSectionHitAnneeNmoins2Renseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.anneeNmoins2.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_ANNEENMOINS2_RENSEIGNE_01 
		= "message.SectionHit.anneeNmoins2.renseigne";
	
	/**
	 * messageSectionHitAnneeNmoins2Renseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitAnneeNmoins2Renseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "l'année n-2 de la section HIT (colonnes [306-307] du HIT) doit être renseignée".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_ANNEENMOINS2_RENSEIGNE_01_EN_DUR 
		= "l'année n-2 de la section HIT (colonnes [306-307] du HIT) doit être renseignée";
		
	/**
	 * clé de messageSectionHitAnneeNmoins2Regex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.anneeNmoins2.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_ANNEENMOINS2_REGEX_02 
		= "message.SectionHit.anneeNmoins2.regex";
	
	/**
	 * messageSectionHitAnneeNmoins2Regex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitAnneeNmoins2Regex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "l'année n-2 de la section HIT (colonnes [306-307] du HIT) doit comporter exactement 2 chiffres".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_ANNEENMOINS2_REGEX_02_EN_DUR 
		= "l'année n-2 de la section HIT (colonnes [306-307] du HIT) doit comporter exactement 2 chiffres";
	
	/* 78 - mjaNmoins2. *******/
	/**
	 * clé de messageSectionHitMjaNmoins2Renseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.mjaNmoins2.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_MJANMOINS2_RENSEIGNE_01 
		= "message.SectionHit.mjaNmoins2.renseigne";
	
	/**
	 * messageSectionHitMjaNmoins2Renseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitMjaNmoins2Renseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le trafic moyen journalier annuel de l'année n-2 de la section HIT (colonnes [308-313] du HIT) doit être renseigné".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_MJANMOINS2_RENSEIGNE_01_EN_DUR 
		= "le trafic moyen journalier annuel de l'année n-2 de la section HIT (colonnes [308-313] du HIT) doit être renseigné";
		
	/**
	 * clé de messageSectionHitMjaNmoins2Regex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.mjaNmoins2.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_MJANMOINS2_REGEX_02 
		= "message.SectionHit.mjaNmoins2.regex";
	
	/**
	 * messageSectionHitMjaNmoins2Regex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitMjaNmoins2Regex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le trafic moyen journalier annuel de l'année n-2 de la section HIT (colonnes [308-313] du HIT) doit comporter exactement 6 chiffres".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_MJANMOINS2_REGEX_02_EN_DUR 
		= "le trafic moyen journalier annuel de l'année n-2 de la section HIT (colonnes [308-313] du HIT) doit comporter exactement 6 chiffres";
		
	/**
	 * clé de messageSectionHitMjaNmoins2Numerique03 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.mjaNmoins2.numerique"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_MJANMOINS2_NUMERIQUE_03 
		= "message.SectionHit.mjaNmoins2.numerique";
	
	/**
	 * messageSectionHitMjaNmoins2Numerique03 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitMjaNmoins2Numerique03 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le trafic moyen journalier annuel de l'année n-2 de la section HIT (colonnes [308-313] du HIT) doit être homogène à un entier".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_MJANMOINS2_NUMERIQUE_03_EN_DUR 
		= "le trafic moyen journalier annuel de l'année n-2 de la section HIT (colonnes [308-313] du HIT) doit être homogène à un entier";
	
	/* 79 - typeComptageNmoins2. *******/
	/**
	 * clé de messageSectionHitTypeComptageNmoins2Renseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.typeComptageNmoins2.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS2_RENSEIGNE_01 
		= "message.SectionHit.typeComptageNmoins2.renseigne";
	
	/**
	 * messageSectionHitTypeComptageNmoins2Renseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitTypeComptageNmoins2Renseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le type de comptage de l'année n-2 de la section HIT (colonne [314] du HIT) doit être renseigné".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS2_RENSEIGNE_01_EN_DUR 
		= "le type de comptage de l'année n-2 de la section HIT (colonne [314] du HIT) doit être renseigné";
		
	/**
	 * clé de messageSectionHitTypeComptageNmoins2Regex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.typeComptageNmoins2.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS2_REGEX_02 
		= "message.SectionHit.typeComptageNmoins2.regex";
	
	/**
	 * messageSectionHitTypeComptageNmoins2Regex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitTypeComptageNmoins2Regex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le type de comptage de l'année n-2 de la section HIT (colonne [314] du HIT) doit comporter exactement 1 chiffre".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS2_REGEX_02_EN_DUR 
		= "le type de comptage de l'année n-2 de la section HIT (colonne [314] du HIT) doit comporter exactement 1 chiffre";
				
	/**
	 * clé de messageSectionHitTypeComptageNmoins2Nomenclature03 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.typeComptageNmoins2.nomenclature"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS2_NOMENCLATURE_03 
		= "message.SectionHit.typeComptageNmoins2.nomenclature";
	
	/**
	 * messageSectionHitTypeComptageNmoins2Nomenclature03 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitTypeComptageNmoins2Nomenclature03 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le type de comptage de l'année n-2 de la section HIT (colonne [314] du HIT) doit respecter une nomenclature [1, 2, 3, 4, 5, 6, 7, 8, 9]".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS2_NOMENCLATURE_03_EN_DUR 
		= "le type de comptage de l'année n-2 de la section HIT (colonne [314] du HIT) doit respecter une nomenclature [1, 2, 3, 4, 5, 6, 7, 8, 9]";
	
	/* 80 - modeCalculNmoins2. *******/
	/**
	 * clé de messageSectionHitModeCalculNmoins2Renseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.modeCalculNmoins2.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_MODECALCULNMOINS2_RENSEIGNE_01 
		= "message.SectionHit.modeCalculNmoins2.renseigne";
	
	/**
	 * messageSectionHitModeCalculNmoins2Renseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitModeCalculNmoins2Renseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le mode de calcul des trafics de l'année n-2 de la section HIT (colonne [315] du HIT) doit être renseigné".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_MODECALCULNMOINS2_RENSEIGNE_01_EN_DUR 
		= "le mode de calcul des trafics de l'année n-2 de la section HIT (colonne [315] du HIT) doit être renseigné";
		
	/**
	 * clé de messageSectionHitModeCalculNmoins2Regex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.modeCalculNmoins2.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_MODECALCULNMOINS2_REGEX_02 
		= "message.SectionHit.modeCalculNmoins2.regex";
	
	/**
	 * messageSectionHitModeCalculNmoins2Regex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitModeCalculNmoins2Regex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le mode de calcul des trafics de l'année n-2 de la section HIT (colonne [315] du HIT) doit comporter exactement 1 caractère (ou espace)".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_MODECALCULNMOINS2_REGEX_02_EN_DUR 
		= "le mode de calcul des trafics de l'année n-2 de la section HIT (colonne [315] du HIT) doit comporter exactement 1 caractère (ou espace)";
	
	/* 81 - pcPLNmoins2. *******/
	/**
	 * clé de messageSectionHitPcPLNmoins2Renseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.pcPLNmoins2.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_PCPLNMOINS2_RENSEIGNE_01 
		= "message.SectionHit.pcPLNmoins2.renseigne";
	
	/**
	 * messageSectionHitPcPLNmoins2Renseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitPcPLNmoins2Renseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le pourcentage de trafic poids lourds annuel de l'année n-2 de la section HIT (colonnes [316-318] du HIT) doit être renseigné".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_PCPLNMOINS2_RENSEIGNE_01_EN_DUR 
		= "le pourcentage de trafic poids lourds annuel de l'année n-2 de la section HIT (colonnes [316-318] du HIT) doit être renseigné";
		
	/**
	 * clé de messageSectionHitPcPLNmoins2Regex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.pcPLNmoins2.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_PCPLNMOINS2_REGEX_02 
		= "message.SectionHit.pcPLNmoins2.regex";
	
	/**
	 * messageSectionHitPcPLNmoins2Regex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitPcPLNmoins2Regex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le pourcentage de trafic poids lourds annuel de l'année n-2 de la section HIT (colonnes [316-318] du HIT) doit comporter exactement 3 chiffres".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_PCPLNMOINS2_REGEX_02_EN_DUR 
		= "le pourcentage de trafic poids lourds annuel de l'année n-2 de la section HIT (colonnes [316-318] du HIT) doit comporter exactement 3 chiffres";
		
	/**
	 * clé de messageSectionHitPcPLNmoins2Numerique03 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.pcPLNmoins2.numerique"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_PCPLNMOINS2_NUMERIQUE_03 
		= "message.SectionHit.pcPLNmoins2.numerique";
	
	/**
	 * messageSectionHitPcPLNmoins2Numerique03 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitPcPLNmoins2Numerique03 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le pourcentage de trafic poids lourds annuel de l'année n-2 de la section HIT (colonnes [316-318] du HIT) doit être homogène à un entier".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_PCPLNMOINS2_NUMERIQUE_03_EN_DUR 
		= "le pourcentage de trafic poids lourds annuel de l'année n-2 de la section HIT (colonnes [316-318] du HIT) doit être homogène à un entier";
	
	/* 82 - evaluationPLNmoins2. *******/
	/**
	 * clé de messageSectionHitEvaluationPLNmoins2Renseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.evaluationPLNmoins2.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_EVALUATIONPLNMOINS2_RENSEIGNE_01 
		= "message.SectionHit.evaluationPLNmoins2.renseigne";
	
	/**
	 * messageSectionHitEvaluationPLNmoins2Renseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitEvaluationPLNmoins2Renseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "l'évaluation des pourcentages de trafic poids lourds de l'année n-2 de la section HIT (colonne [319] du HIT) doit être renseigné".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_EVALUATIONPLNMOINS2_RENSEIGNE_01_EN_DUR 
		= "l'évaluation des pourcentages de trafic poids lourds de l'année n-2 de la section HIT (colonne [319] du HIT) doit être renseigné";
		
	/**
	 * clé de messageSectionHitEvaluationPLNmoins2Regex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.evaluationPLNmoins2.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_EVALUATIONPLNMOINS2_REGEX_02 
		= "message.SectionHit.evaluationPLNmoins2.regex";
	
	/**
	 * messageSectionHitEvaluationPLNmoins2Regex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitEvaluationPLNmoins2Regex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "l'évaluation des pourcentages de trafic poids lourds de l'année n-2 de la section HIT (colonne [319] du HIT) doit comporter exactement 1 caractère (ou espace)".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_EVALUATIONPLNMOINS2_REGEX_02_EN_DUR 
		= "l'évaluation des pourcentages de trafic poids lourds de l'année n-2 de la section HIT (colonne [319] du HIT) doit comporter exactement 1 caractère (ou espace)";
	
	/* 83 - pcNuitAnnuelNmoins2. *******/
	/**
	 * clé de messageSectionHitPcNuitAnnuelNmoins2Renseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.pcNuitAnnuelNmoins2.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS2_RENSEIGNE_01 
		= "message.SectionHit.pcNuitAnnuelNmoins2.renseigne";
	
	/**
	 * messageSectionHitPcNuitAnnuelNmoins2Renseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitPcNuitAnnuelNmoins2Renseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le pourcentage de trafic de nuit tous véhicules annuel de l'année n-2 de la section HIT (colonnes [320-322] du HIT) doit être renseigné".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS2_RENSEIGNE_01_EN_DUR 
		= "le pourcentage de trafic de nuit tous véhicules annuel de l'année n-2 de la section HIT (colonnes [320-322] du HIT) doit être renseigné";
		
	/**
	 * clé de messageSectionHitPcNuitAnnuelNmoins2Regex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.pcNuitAnnuelNmoins2.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS2_REGEX_02 
		= "message.SectionHit.pcNuitAnnuelNmoins2.regex";
	
	/**
	 * messageSectionHitPcNuitAnnuelNmoins2Regex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitPcNuitAnnuelNmoins2Regex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le pourcentage de trafic de nuit tous véhicules annuel de l'année n-2 de la section HIT (colonnes [320-322] du HIT) doit comporter exactement 3 chiffres".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS2_REGEX_02_EN_DUR 
		= "le pourcentage de trafic de nuit tous véhicules annuel de l'année n-2 de la section HIT (colonnes [320-322] du HIT) doit comporter exactement 3 chiffres";
		
	/**
	 * clé de messageSectionHitPcNuitAnnuelNmoins2Numerique03 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.pcNuitAnnuelNmoins2.numerique"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS2_NUMERIQUE_03 
		= "message.SectionHit.pcNuitAnnuelNmoins2.numerique";
	
	/**
	 * messageSectionHitPcNuitAnnuelNmoins2Numerique03 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitPcNuitAnnuelNmoins2Numerique03 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le pourcentage de trafic de nuit tous véhicules annuel de l'année n-2 de la section HIT (colonnes [320-322] du HIT) doit être homogène à un entier".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS2_NUMERIQUE_03_EN_DUR 
		= "le pourcentage de trafic de nuit tous véhicules annuel de l'année n-2 de la section HIT (colonnes [320-322] du HIT) doit être homogène à un entier";
	
	/* 84 - indiceFiabiliteMjaNmoins2. *******/
	/**
	 * clé de messageSectionHitIndiceFiabiliteMjaNmoins2Renseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.indiceFiabiliteMjaNmoins2.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_INDICEFIABLITEMJANMOINS2_RENSEIGNE_01 
		= "message.SectionHit.indiceFiabiliteMjaNmoins2.renseigne";
	
	/**
	 * messageSectionHitIndiceFiabiliteMjaNmoins2Renseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitIndiceFiabiliteMjaNmoins2Renseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "l'indice de fiabilité de la TMJA de l'année n-2 de la section HIT (colonne [323] du HIT) doit être renseigné".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_INDICEFIABLITEMJANMOINS2_RENSEIGNE_01_EN_DUR 
		= "l'indice de fiabilité de la TMJA de l'année n-2 de la section HIT (colonne [323] du HIT) doit être renseigné";
		
	/**
	 * clé de messageSectionHitIndiceFiabiliteMjaNmoins2Regex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.indiceFiabiliteMjaNmoins2.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_INDICEFIABLITEMJANMOINS2_REGEX_02 
		= "message.SectionHit.indiceFiabiliteMjaNmoins2.regex";
	
	/**
	 * messageSectionHitIndiceFiabiliteMjaNmoins2Regex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitIndiceFiabiliteMjaNmoins2Regex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "l'indice de fiabilité de la TMJA de l'année n-2 de la section HIT (colonne [323] du HIT) doit comporter exactement 1 caractère (ou espace)".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_INDICEFIABLITEMJANMOINS2_REGEX_02_EN_DUR 
		= "l'indice de fiabilité de la TMJA de l'année n-2 de la section HIT (colonne [323] du HIT) doit comporter exactement 1 caractère (ou espace)";

	
	/* 85 - anneeNmoins3. *******/
	/**
	 * clé de messageSectionHitAnneeNmoins3Renseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.anneeNmoins3.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_ANNEENMOINS3_RENSEIGNE_01 
		= "message.SectionHit.anneeNmoins3.renseigne";
	
	/**
	 * messageSectionHitAnneeNmoins3Renseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitAnneeNmoins3Renseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "l'année n-3 de la section HIT (colonnes [324-325] du HIT) doit être renseignée".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_ANNEENMOINS3_RENSEIGNE_01_EN_DUR 
		= "l'année n-3 de la section HIT (colonnes [324-325] du HIT) doit être renseignée";
		
	/**
	 * clé de messageSectionHitAnneeNmoins3Regex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.anneeNmoins3.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_ANNEENMOINS3_REGEX_02 
		= "message.SectionHit.anneeNmoins3.regex";
	
	/**
	 * messageSectionHitAnneeNmoins3Regex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitAnneeNmoins3Regex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "l'année n-3 de la section HIT (colonnes [324-325] du HIT) doit comporter exactement 2 chiffres".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_ANNEENMOINS3_REGEX_02_EN_DUR 
		= "l'année n-3 de la section HIT (colonnes [324-325] du HIT) doit comporter exactement 2 chiffres";
	
	/* 86 - mjaNmoins3. *******/
	/**
	 * clé de messageSectionHitMjaNmoins3Renseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.mjaNmoins3.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_MJANMOINS3_RENSEIGNE_01 
		= "message.SectionHit.mjaNmoins3.renseigne";
	
	/**
	 * messageSectionHitMjaNmoins3Renseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitMjaNmoins3Renseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le trafic moyen journalier annuel de l'année n-3 de la section HIT (colonnes [326-331] du HIT) doit être renseigné".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_MJANMOINS3_RENSEIGNE_01_EN_DUR 
		= "le trafic moyen journalier annuel de l'année n-3 de la section HIT (colonnes [326-331] du HIT) doit être renseigné";
		
	/**
	 * clé de messageSectionHitMjaNmoins3Regex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.mjaNmoins3.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_MJANMOINS3_REGEX_02 
		= "message.SectionHit.mjaNmoins3.regex";
	
	/**
	 * messageSectionHitMjaNmoins3Regex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitMjaNmoins3Regex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le trafic moyen journalier annuel de l'année n-3 de la section HIT (colonnes [326-331] du HIT) doit comporter exactement 6 chiffres".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_MJANMOINS3_REGEX_02_EN_DUR 
		= "le trafic moyen journalier annuel de l'année n-3 de la section HIT (colonnes [326-331] du HIT) doit comporter exactement 6 chiffres";
		
	/**
	 * clé de messageSectionHitMjaNmoins3Numerique03 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.mjaNmoins3.numerique"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_MJANMOINS3_NUMERIQUE_03 
		= "message.SectionHit.mjaNmoins3.numerique";
	
	/**
	 * messageSectionHitMjaNmoins3Numerique03 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitMjaNmoins3Numerique03 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le trafic moyen journalier annuel de l'année n-3 de la section HIT (colonnes [326-331] du HIT) doit être homogène à un entier".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_MJANMOINS3_NUMERIQUE_03_EN_DUR 
		= "le trafic moyen journalier annuel de l'année n-3 de la section HIT (colonnes [326-331] du HIT) doit être homogène à un entier";
	
	/* 87 - typeComptageNmoins3. *******/
	/**
	 * clé de messageSectionHitTypeComptageNmoins3Renseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.typeComptageNmoins3.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS3_RENSEIGNE_01 
		= "message.SectionHit.typeComptageNmoins3.renseigne";
	
	/**
	 * messageSectionHitTypeComptageNmoins3Renseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitTypeComptageNmoins3Renseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le type de comptage de l'année n-3 de la section HIT (colonne [332] du HIT) doit être renseigné".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS3_RENSEIGNE_01_EN_DUR 
		= "le type de comptage de l'année n-3 de la section HIT (colonne [332] du HIT) doit être renseigné";
		
	/**
	 * clé de messageSectionHitTypeComptageNmoins3Regex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.typeComptageNmoins3.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS3_REGEX_02 
		= "message.SectionHit.typeComptageNmoins3.regex";
	
	/**
	 * messageSectionHitTypeComptageNmoins3Regex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitTypeComptageNmoins3Regex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le type de comptage de l'année n-3 de la section HIT (colonne [332] du HIT) doit comporter exactement 1 chiffre".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS3_REGEX_02_EN_DUR 
		= "le type de comptage de l'année n-3 de la section HIT (colonne [332] du HIT) doit comporter exactement 1 chiffre";
				
	/**
	 * clé de messageSectionHitTypeComptageNmoins3Nomenclature03 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.typeComptageNmoins3.nomenclature"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS3_NOMENCLATURE_03 
		= "message.SectionHit.typeComptageNmoins3.nomenclature";
	
	/**
	 * messageSectionHitTypeComptageNmoins3Nomenclature03 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitTypeComptageNmoins3Nomenclature03 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le type de comptage de l'année n-3 de la section HIT (colonne [332] du HIT) doit respecter une nomenclature [1, 2, 3, 4, 5, 6, 7, 8, 9]".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS3_NOMENCLATURE_03_EN_DUR 
		= "le type de comptage de l'année n-3 de la section HIT (colonne [332] du HIT) doit respecter une nomenclature [1, 2, 3, 4, 5, 6, 7, 8, 9]";
	
	/* 88 - modeCalculNmoins3. *******/
	/**
	 * clé de messageSectionHitModeCalculNmoins3Renseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.modeCalculNmoins3.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_MODECALCULNMOINS3_RENSEIGNE_01 
		= "message.SectionHit.modeCalculNmoins3.renseigne";
	
	/**
	 * messageSectionHitModeCalculNmoins3Renseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitModeCalculNmoins3Renseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le mode de calcul des trafics de l'année n-3 de la section HIT (colonne [333] du HIT) doit être renseigné".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_MODECALCULNMOINS3_RENSEIGNE_01_EN_DUR 
		= "le mode de calcul des trafics de l'année n-3 de la section HIT (colonne [333] du HIT) doit être renseigné";
		
	/**
	 * clé de messageSectionHitModeCalculNmoins3Regex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.modeCalculNmoins3.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_MODECALCULNMOINS3_REGEX_02 
		= "message.SectionHit.modeCalculNmoins3.regex";
	
	/**
	 * messageSectionHitModeCalculNmoins3Regex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitModeCalculNmoins3Regex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le mode de calcul des trafics de l'année n-3 de la section HIT (colonne [333] du HIT) doit comporter exactement 1 caractère (ou espace)".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_MODECALCULNMOINS3_REGEX_02_EN_DUR 
		= "le mode de calcul des trafics de l'année n-3 de la section HIT (colonne [333] du HIT) doit comporter exactement 1 caractère (ou espace)";
	
	/* 89 - pcPLNmoins3. *******/
	/**
	 * clé de messageSectionHitPcPLNmoins3Renseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.pcPLNmoins3.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_PCPLNMOINS3_RENSEIGNE_01 
		= "message.SectionHit.pcPLNmoins3.renseigne";
	
	/**
	 * messageSectionHitPcPLNmoins3Renseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitPcPLNmoins3Renseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le pourcentage de trafic poids lourds annuel de l'année n-3 de la section HIT (colonnes [334-336] du HIT) doit être renseigné".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_PCPLNMOINS3_RENSEIGNE_01_EN_DUR 
		= "le pourcentage de trafic poids lourds annuel de l'année n-3 de la section HIT (colonnes [334-336] du HIT) doit être renseigné";
		
	/**
	 * clé de messageSectionHitPcPLNmoins3Regex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.pcPLNmoins3.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_PCPLNMOINS3_REGEX_02 
		= "message.SectionHit.pcPLNmoins3.regex";
	
	/**
	 * messageSectionHitPcPLNmoins3Regex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitPcPLNmoins3Regex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le pourcentage de trafic poids lourds annuel de l'année n-3 de la section HIT (colonnes [334-336] du HIT) doit comporter exactement 3 chiffres".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_PCPLNMOINS3_REGEX_02_EN_DUR 
		= "le pourcentage de trafic poids lourds annuel de l'année n-3 de la section HIT (colonnes [334-336] du HIT) doit comporter exactement 3 chiffres";
		
	/**
	 * clé de messageSectionHitPcPLNmoins3Numerique03 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.pcPLNmoins3.numerique"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_PCPLNMOINS3_NUMERIQUE_03 
		= "message.SectionHit.pcPLNmoins3.numerique";
	
	/**
	 * messageSectionHitPcPLNmoins3Numerique03 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitPcPLNmoins3Numerique03 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le pourcentage de trafic poids lourds annuel de l'année n-3 de la section HIT (colonnes [334-336] du HIT) doit être homogène à un entier".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_PCPLNMOINS3_NUMERIQUE_03_EN_DUR 
		= "le pourcentage de trafic poids lourds annuel de l'année n-3 de la section HIT (colonnes [334-336] du HIT) doit être homogène à un entier";
	
	/* 90 - evaluationPLNmoins3. *******/
	/**
	 * clé de messageSectionHitEvaluationPLNmoins3Renseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.evaluationPLNmoins3.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_EVALUATIONPLNMOINS3_RENSEIGNE_01 
		= "message.SectionHit.evaluationPLNmoins3.renseigne";
	
	/**
	 * messageSectionHitEvaluationPLNmoins3Renseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitEvaluationPLNmoins3Renseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "l'évaluation des pourcentages de trafic poids lourds de l'année n-3 de la section HIT (colonne [337] du HIT) doit être renseigné".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_EVALUATIONPLNMOINS3_RENSEIGNE_01_EN_DUR 
		= "l'évaluation des pourcentages de trafic poids lourds de l'année n-3 de la section HIT (colonne [337] du HIT) doit être renseigné";
		
	/**
	 * clé de messageSectionHitEvaluationPLNmoins3Regex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.evaluationPLNmoins3.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_EVALUATIONPLNMOINS3_REGEX_02 
		= "message.SectionHit.evaluationPLNmoins3.regex";
	
	/**
	 * messageSectionHitEvaluationPLNmoins3Regex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitEvaluationPLNmoins3Regex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "l'évaluation des pourcentages de trafic poids lourds de l'année n-3 de la section HIT (colonne [337] du HIT) doit comporter exactement 1 caractère (ou espace)".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_EVALUATIONPLNMOINS3_REGEX_02_EN_DUR 
		= "l'évaluation des pourcentages de trafic poids lourds de l'année n-3 de la section HIT (colonne [337] du HIT) doit comporter exactement 1 caractère (ou espace)";
	
	/* 91 - pcNuitAnnuelNmoins3. *******/
	/**
	 * clé de messageSectionHitPcNuitAnnuelNmoins3Renseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.pcNuitAnnuelNmoins3.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS3_RENSEIGNE_01 
		= "message.SectionHit.pcNuitAnnuelNmoins3.renseigne";
	
	/**
	 * messageSectionHitPcNuitAnnuelNmoins3Renseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitPcNuitAnnuelNmoins3Renseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le pourcentage de trafic de nuit tous véhicules annuel de l'année n-3 de la section HIT (colonnes [338-340] du HIT) doit être renseigné".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS3_RENSEIGNE_01_EN_DUR 
		= "le pourcentage de trafic de nuit tous véhicules annuel de l'année n-3 de la section HIT (colonnes [338-340] du HIT) doit être renseigné";
		
	/**
	 * clé de messageSectionHitPcNuitAnnuelNmoins3Regex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.pcNuitAnnuelNmoins3.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS3_REGEX_02 
		= "message.SectionHit.pcNuitAnnuelNmoins3.regex";
	
	/**
	 * messageSectionHitPcNuitAnnuelNmoins3Regex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitPcNuitAnnuelNmoins3Regex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le pourcentage de trafic de nuit tous véhicules annuel de l'année n-3 de la section HIT (colonnes [338-340] du HIT) doit comporter exactement 3 chiffres".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS3_REGEX_02_EN_DUR 
		= "le pourcentage de trafic de nuit tous véhicules annuel de l'année n-3 de la section HIT (colonnes [338-340] du HIT) doit comporter exactement 3 chiffres";
		
	/**
	 * clé de messageSectionHitPcNuitAnnuelNmoins3Numerique03 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.pcNuitAnnuelNmoins3.numerique"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS3_NUMERIQUE_03 
		= "message.SectionHit.pcNuitAnnuelNmoins3.numerique";
	
	/**
	 * messageSectionHitPcNuitAnnuelNmoins3Numerique03 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitPcNuitAnnuelNmoins3Numerique03 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le pourcentage de trafic de nuit tous véhicules annuel de l'année n-3 de la section HIT (colonnes [338-340] du HIT) doit être homogène à un entier".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS3_NUMERIQUE_03_EN_DUR 
		= "le pourcentage de trafic de nuit tous véhicules annuel de l'année n-3 de la section HIT (colonnes [338-340] du HIT) doit être homogène à un entier";
	
	/* 92 - indiceFiabiliteMjaNmoins3. *******/
	/**
	 * clé de messageSectionHitIndiceFiabiliteMjaNmoins3Renseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.indiceFiabiliteMjaNmoins3.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_INDICEFIABLITEMJANMOINS3_RENSEIGNE_01 
		= "message.SectionHit.indiceFiabiliteMjaNmoins3.renseigne";
	
	/**
	 * messageSectionHitIndiceFiabiliteMjaNmoins3Renseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitIndiceFiabiliteMjaNmoins3Renseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "l'indice de fiabilité de la TMJA de l'année n-3 de la section HIT (colonne [341] du HIT) doit être renseigné".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_INDICEFIABLITEMJANMOINS3_RENSEIGNE_01_EN_DUR 
		= "l'indice de fiabilité de la TMJA de l'année n-3 de la section HIT (colonne [341] du HIT) doit être renseigné";
		
	/**
	 * clé de messageSectionHitIndiceFiabiliteMjaNmoins3Regex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.indiceFiabiliteMjaNmoins3.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_INDICEFIABLITEMJANMOINS3_REGEX_02 
		= "message.SectionHit.indiceFiabiliteMjaNmoins3.regex";
	
	/**
	 * messageSectionHitIndiceFiabiliteMjaNmoins3Regex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitIndiceFiabiliteMjaNmoins3Regex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "l'indice de fiabilité de la TMJA de l'année n-3 de la section HIT (colonne [341] du HIT) doit comporter exactement 1 caractère (ou espace)".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_INDICEFIABLITEMJANMOINS3_REGEX_02_EN_DUR 
		= "l'indice de fiabilité de la TMJA de l'année n-3 de la section HIT (colonne [341] du HIT) doit comporter exactement 1 caractère (ou espace)";

	
	/* 93 - anneeNmoins4. *******/
	/**
	 * clé de messageSectionHitAnneeNmoins4Renseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.anneeNmoins4.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_ANNEENMOINS4_RENSEIGNE_01 
		= "message.SectionHit.anneeNmoins4.renseigne";
	
	/**
	 * messageSectionHitAnneeNmoins4Renseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitAnneeNmoins4Renseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "l'année n-4 de la section HIT (colonnes [342-343] du HIT) doit être renseignée".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_ANNEENMOINS4_RENSEIGNE_01_EN_DUR 
		= "l'année n-4 de la section HIT (colonnes [342-343] du HIT) doit être renseignée";
		
	/**
	 * clé de messageSectionHitAnneeNmoins4Regex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.anneeNmoins4.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_ANNEENMOINS4_REGEX_02 
		= "message.SectionHit.anneeNmoins4.regex";
	
	/**
	 * messageSectionHitAnneeNmoins4Regex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitAnneeNmoins4Regex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "l'année n-4 de la section HIT (colonnes [342-343] du HIT) doit comporter exactement 2 chiffres".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_ANNEENMOINS4_REGEX_02_EN_DUR 
		= "l'année n-4 de la section HIT (colonnes [342-343] du HIT) doit comporter exactement 2 chiffres";
	
	/* 94 - mjaNmoins4. *******/
	/**
	 * clé de messageSectionHitMjaNmoins4Renseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.mjaNmoins4.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_MJANMOINS4_RENSEIGNE_01 
		= "message.SectionHit.mjaNmoins4.renseigne";
	
	/**
	 * messageSectionHitMjaNmoins4Renseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitMjaNmoins4Renseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le trafic moyen journalier annuel de l'année n-4 de la section HIT (colonnes [344-349] du HIT) doit être renseigné".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_MJANMOINS4_RENSEIGNE_01_EN_DUR 
		= "le trafic moyen journalier annuel de l'année n-4 de la section HIT (colonnes [344-349] du HIT) doit être renseigné";
		
	/**
	 * clé de messageSectionHitMjaNmoins4Regex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.mjaNmoins4.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_MJANMOINS4_REGEX_02 
		= "message.SectionHit.mjaNmoins4.regex";
	
	/**
	 * messageSectionHitMjaNmoins4Regex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitMjaNmoins4Regex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le trafic moyen journalier annuel de l'année n-4 de la section HIT (colonnes [344-349] du HIT) doit comporter exactement 6 chiffres".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_MJANMOINS4_REGEX_02_EN_DUR 
		= "le trafic moyen journalier annuel de l'année n-4 de la section HIT (colonnes [344-349] du HIT) doit comporter exactement 6 chiffres";
		
	/**
	 * clé de messageSectionHitMjaNmoins4Numerique03 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.mjaNmoins4.numerique"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_MJANMOINS4_NUMERIQUE_03 
		= "message.SectionHit.mjaNmoins4.numerique";
	
	/**
	 * messageSectionHitMjaNmoins4Numerique03 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitMjaNmoins4Numerique03 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le trafic moyen journalier annuel de l'année n-4 de la section HIT (colonnes [344-349] du HIT) doit être homogène à un entier".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_MJANMOINS4_NUMERIQUE_03_EN_DUR 
		= "le trafic moyen journalier annuel de l'année n-4 de la section HIT (colonnes [344-349] du HIT) doit être homogène à un entier";
	
	/* 95 - typeComptageNmoins4. *******/
	/**
	 * clé de messageSectionHitTypeComptageNmoins4Renseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.typeComptageNmoins4.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS4_RENSEIGNE_01 
		= "message.SectionHit.typeComptageNmoins4.renseigne";
	
	/**
	 * messageSectionHitTypeComptageNmoins4Renseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitTypeComptageNmoins4Renseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le type de comptage de l'année n-4 de la section HIT (colonne [350] du HIT) doit être renseigné".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS4_RENSEIGNE_01_EN_DUR 
		= "le type de comptage de l'année n-4 de la section HIT (colonne [350] du HIT) doit être renseigné";
		
	/**
	 * clé de messageSectionHitTypeComptageNmoins4Regex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.typeComptageNmoins4.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS4_REGEX_02 
		= "message.SectionHit.typeComptageNmoins4.regex";
	
	/**
	 * messageSectionHitTypeComptageNmoins4Regex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitTypeComptageNmoins4Regex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le type de comptage de l'année n-4 de la section HIT (colonne [350] du HIT) doit comporter exactement 1 chiffre".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS4_REGEX_02_EN_DUR 
		= "le type de comptage de l'année n-4 de la section HIT (colonne [350] du HIT) doit comporter exactement 1 chiffre";
				
	/**
	 * clé de messageSectionHitTypeComptageNmoins4Nomenclature03 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.typeComptageNmoins4.nomenclature"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS4_NOMENCLATURE_03 
		= "message.SectionHit.typeComptageNmoins4.nomenclature";
	
	/**
	 * messageSectionHitTypeComptageNmoins4Nomenclature03 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitTypeComptageNmoins4Nomenclature03 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le type de comptage de l'année n-4 de la section HIT (colonne [350] du HIT) doit respecter une nomenclature [1, 2, 3, 4, 5, 6, 7, 8, 9]".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS4_NOMENCLATURE_03_EN_DUR 
		= "le type de comptage de l'année n-4 de la section HIT (colonne [350] du HIT) doit respecter une nomenclature [1, 2, 3, 4, 5, 6, 7, 8, 9]";
	
	/* 96 - modeCalculNmoins4. *******/
	/**
	 * clé de messageSectionHitModeCalculNmoins4Renseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.modeCalculNmoins4.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_MODECALCULNMOINS4_RENSEIGNE_01 
		= "message.SectionHit.modeCalculNmoins4.renseigne";
	
	/**
	 * messageSectionHitModeCalculNmoins4Renseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitModeCalculNmoins4Renseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le mode de calcul des trafics de l'année n-4 de la section HIT (colonne [351] du HIT) doit être renseigné".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_MODECALCULNMOINS4_RENSEIGNE_01_EN_DUR 
		= "le mode de calcul des trafics de l'année n-4 de la section HIT (colonne [351] du HIT) doit être renseigné";
		
	/**
	 * clé de messageSectionHitModeCalculNmoins4Regex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.modeCalculNmoins4.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_MODECALCULNMOINS4_REGEX_02 
		= "message.SectionHit.modeCalculNmoins4.regex";
	
	/**
	 * messageSectionHitModeCalculNmoins4Regex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitModeCalculNmoins4Regex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le mode de calcul des trafics de l'année n-4 de la section HIT (colonne [351] du HIT) doit comporter exactement 1 caractère (ou espace)".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_MODECALCULNMOINS4_REGEX_02_EN_DUR 
		= "le mode de calcul des trafics de l'année n-4 de la section HIT (colonne [351] du HIT) doit comporter exactement 1 caractère (ou espace)";
	
	/* 97 - pcPLNmoins4. *******/
	/**
	 * clé de messageSectionHitPcPLNmoins4Renseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.pcPLNmoins4.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_PCPLNMOINS4_RENSEIGNE_01 
		= "message.SectionHit.pcPLNmoins4.renseigne";
	
	/**
	 * messageSectionHitPcPLNmoins4Renseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitPcPLNmoins4Renseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le pourcentage de trafic poids lourds annuel de l'année n-4 de la section HIT (colonnes [352-354] du HIT) doit être renseigné".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_PCPLNMOINS4_RENSEIGNE_01_EN_DUR 
		= "le pourcentage de trafic poids lourds annuel de l'année n-4 de la section HIT (colonnes [352-354] du HIT) doit être renseigné";
		
	/**
	 * clé de messageSectionHitPcPLNmoins4Regex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.pcPLNmoins4.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_PCPLNMOINS4_REGEX_02 
		= "message.SectionHit.pcPLNmoins4.regex";
	
	/**
	 * messageSectionHitPcPLNmoins4Regex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitPcPLNmoins4Regex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le pourcentage de trafic poids lourds annuel de l'année n-4 de la section HIT (colonnes [352-354] du HIT) doit comporter exactement 3 chiffres".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_PCPLNMOINS4_REGEX_02_EN_DUR 
		= "le pourcentage de trafic poids lourds annuel de l'année n-4 de la section HIT (colonnes [352-354] du HIT) doit comporter exactement 3 chiffres";
		
	/**
	 * clé de messageSectionHitPcPLNmoins4Numerique03 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.pcPLNmoins4.numerique"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_PCPLNMOINS4_NUMERIQUE_03 
		= "message.SectionHit.pcPLNmoins4.numerique";
	
	/**
	 * messageSectionHitPcPLNmoins4Numerique03 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitPcPLNmoins4Numerique03 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le pourcentage de trafic poids lourds annuel de l'année n-4 de la section HIT (colonnes [352-354] du HIT) doit être homogène à un entier".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_PCPLNMOINS4_NUMERIQUE_03_EN_DUR 
		= "le pourcentage de trafic poids lourds annuel de l'année n-4 de la section HIT (colonnes [352-354] du HIT) doit être homogène à un entier";
	
	/* 98 - evaluationPLNmoins4. *******/
	/**
	 * clé de messageSectionHitEvaluationPLNmoins4Renseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.evaluationPLNmoins4.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_EVALUATIONPLNMOINS4_RENSEIGNE_01 
		= "message.SectionHit.evaluationPLNmoins4.renseigne";
	
	/**
	 * messageSectionHitEvaluationPLNmoins4Renseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitEvaluationPLNmoins4Renseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "l'évaluation des pourcentages de trafic poids lourds de l'année n-4 de la section HIT (colonne [355] du HIT) doit être renseigné".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_EVALUATIONPLNMOINS4_RENSEIGNE_01_EN_DUR 
		= "l'évaluation des pourcentages de trafic poids lourds de l'année n-4 de la section HIT (colonne [355] du HIT) doit être renseigné";
		
	/**
	 * clé de messageSectionHitEvaluationPLNmoins4Regex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.evaluationPLNmoins4.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_EVALUATIONPLNMOINS4_REGEX_02 
		= "message.SectionHit.evaluationPLNmoins4.regex";
	
	/**
	 * messageSectionHitEvaluationPLNmoins4Regex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitEvaluationPLNmoins4Regex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "l'évaluation des pourcentages de trafic poids lourds de l'année n-4 de la section HIT (colonne [355] du HIT) doit comporter exactement 1 caractère (ou espace)".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_EVALUATIONPLNMOINS4_REGEX_02_EN_DUR 
		= "l'évaluation des pourcentages de trafic poids lourds de l'année n-4 de la section HIT (colonne [355] du HIT) doit comporter exactement 1 caractère (ou espace)";
	
	/* 99 - pcNuitAnnuelNmoins4. *******/
	/**
	 * clé de messageSectionHitPcNuitAnnuelNmoins4Renseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.pcNuitAnnuelNmoins4.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS4_RENSEIGNE_01 
		= "message.SectionHit.pcNuitAnnuelNmoins4.renseigne";
	
	/**
	 * messageSectionHitPcNuitAnnuelNmoins4Renseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitPcNuitAnnuelNmoins4Renseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le pourcentage de trafic de nuit tous véhicules annuel de l'année n-4 de la section HIT (colonnes [356-358] du HIT) doit être renseigné".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS4_RENSEIGNE_01_EN_DUR 
		= "le pourcentage de trafic de nuit tous véhicules annuel de l'année n-4 de la section HIT (colonnes [356-358] du HIT) doit être renseigné";
		
	/**
	 * clé de messageSectionHitPcNuitAnnuelNmoins4Regex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.pcNuitAnnuelNmoins4.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS4_REGEX_02 
		= "message.SectionHit.pcNuitAnnuelNmoins4.regex";
	
	/**
	 * messageSectionHitPcNuitAnnuelNmoins4Regex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitPcNuitAnnuelNmoins4Regex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le pourcentage de trafic de nuit tous véhicules annuel de l'année n-4 de la section HIT (colonnes [356-358] du HIT) doit comporter exactement 3 chiffres".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS4_REGEX_02_EN_DUR 
		= "le pourcentage de trafic de nuit tous véhicules annuel de l'année n-4 de la section HIT (colonnes [356-358] du HIT) doit comporter exactement 3 chiffres";
		
	/**
	 * clé de messageSectionHitPcNuitAnnuelNmoins4Numerique03 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.pcNuitAnnuelNmoins4.numerique"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS4_NUMERIQUE_03 
		= "message.SectionHit.pcNuitAnnuelNmoins4.numerique";
	
	/**
	 * messageSectionHitPcNuitAnnuelNmoins4Numerique03 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitPcNuitAnnuelNmoins4Numerique03 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le pourcentage de trafic de nuit tous véhicules annuel de l'année n-4 de la section HIT (colonnes [356-358] du HIT) doit être homogène à un entier".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS4_NUMERIQUE_03_EN_DUR 
		= "le pourcentage de trafic de nuit tous véhicules annuel de l'année n-4 de la section HIT (colonnes [356-358] du HIT) doit être homogène à un entier";
	
	/* 100 - indiceFiabiliteMjaNmoins4. *******/
	/**
	 * clé de messageSectionHitIndiceFiabiliteMjaNmoins4Renseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.indiceFiabiliteMjaNmoins4.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_INDICEFIABLITEMJANMOINS4_RENSEIGNE_01 
		= "message.SectionHit.indiceFiabiliteMjaNmoins4.renseigne";
	
	/**
	 * messageSectionHitIndiceFiabiliteMjaNmoins4Renseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitIndiceFiabiliteMjaNmoins4Renseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "l'indice de fiabilité de la TMJA de l'année n-4 de la section HIT (colonne [359] du HIT) doit être renseigné".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_INDICEFIABLITEMJANMOINS4_RENSEIGNE_01_EN_DUR 
		= "l'indice de fiabilité de la TMJA de l'année n-4 de la section HIT (colonne [359] du HIT) doit être renseigné";
		
	/**
	 * clé de messageSectionHitIndiceFiabiliteMjaNmoins4Regex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.indiceFiabiliteMjaNmoins4.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_INDICEFIABLITEMJANMOINS4_REGEX_02 
		= "message.SectionHit.indiceFiabiliteMjaNmoins4.regex";
	
	/**
	 * messageSectionHitIndiceFiabiliteMjaNmoins4Regex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitIndiceFiabiliteMjaNmoins4Regex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "l'indice de fiabilité de la TMJA de l'année n-4 de la section HIT (colonne [359] du HIT) doit comporter exactement 1 caractère (ou espace)".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_INDICEFIABLITEMJANMOINS4_REGEX_02_EN_DUR 
		= "l'indice de fiabilité de la TMJA de l'année n-4 de la section HIT (colonne [359] du HIT) doit comporter exactement 1 caractère (ou espace)";

	
	/* 101 - anneeNmoins5. *******/
	/**
	 * clé de messageSectionHitAnneeNmoins5Renseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.anneeNmoins5.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_ANNEENMOINS5_RENSEIGNE_01 
		= "message.SectionHit.anneeNmoins5.renseigne";
	
	/**
	 * messageSectionHitAnneeNmoins5Renseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitAnneeNmoins5Renseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "l'année n-5 de la section HIT (colonnes [360-361] du HIT) doit être renseignée".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_ANNEENMOINS5_RENSEIGNE_01_EN_DUR 
		= "l'année n-5 de la section HIT (colonnes [360-361] du HIT) doit être renseignée";
		
	/**
	 * clé de messageSectionHitAnneeNmoins5Regex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.anneeNmoins5.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_ANNEENMOINS5_REGEX_02 
		= "message.SectionHit.anneeNmoins5.regex";
	
	/**
	 * messageSectionHitAnneeNmoins5Regex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitAnneeNmoins5Regex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "l'année n-5 de la section HIT (colonnes [360-361] du HIT) doit comporter exactement 2 chiffres".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_ANNEENMOINS5_REGEX_02_EN_DUR 
		= "l'année n-5 de la section HIT (colonnes [360-361] du HIT) doit comporter exactement 2 chiffres";
	
	/* 102 - mjaNmoins5. *******/
	/**
	 * clé de messageSectionHitMjaNmoins5Renseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.mjaNmoins5.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_MJANMOINS5_RENSEIGNE_01 
		= "message.SectionHit.mjaNmoins5.renseigne";
	
	/**
	 * messageSectionHitMjaNmoins5Renseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitMjaNmoins5Renseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le trafic moyen journalier annuel de l'année n-5 de la section HIT (colonnes [362-367] du HIT) doit être renseigné".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_MJANMOINS5_RENSEIGNE_01_EN_DUR 
		= "le trafic moyen journalier annuel de l'année n-5 de la section HIT (colonnes [362-367] du HIT) doit être renseigné";
		
	/**
	 * clé de messageSectionHitMjaNmoins5Regex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.mjaNmoins5.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_MJANMOINS5_REGEX_02 
		= "message.SectionHit.mjaNmoins5.regex";
	
	/**
	 * messageSectionHitMjaNmoins5Regex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitMjaNmoins5Regex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le trafic moyen journalier annuel de l'année n-5 de la section HIT (colonnes [362-367] du HIT) doit comporter exactement 6 chiffres".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_MJANMOINS5_REGEX_02_EN_DUR 
		= "le trafic moyen journalier annuel de l'année n-5 de la section HIT (colonnes [362-367] du HIT) doit comporter exactement 6 chiffres";
		
	/**
	 * clé de messageSectionHitMjaNmoins5Numerique03 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.mjaNmoins5.numerique"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_MJANMOINS5_NUMERIQUE_03 
		= "message.SectionHit.mjaNmoins5.numerique";
	
	/**
	 * messageSectionHitMjaNmoins5Numerique03 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitMjaNmoins5Numerique03 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le trafic moyen journalier annuel de l'année n-5 de la section HIT (colonnes [362-367] du HIT) doit être homogène à un entier".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_MJANMOINS5_NUMERIQUE_03_EN_DUR 
		= "le trafic moyen journalier annuel de l'année n-5 de la section HIT (colonnes [362-367] du HIT) doit être homogène à un entier";
	
	/* 103 - typeComptageNmoins5. *******/
	/**
	 * clé de messageSectionHitTypeComptageNmoins5Renseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.typeComptageNmoins5.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS5_RENSEIGNE_01 
		= "message.SectionHit.typeComptageNmoins5.renseigne";
	
	/**
	 * messageSectionHitTypeComptageNmoins5Renseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitTypeComptageNmoins5Renseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le type de comptage de l'année n-5 de la section HIT (colonne [368] du HIT) doit être renseigné".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS5_RENSEIGNE_01_EN_DUR 
		= "le type de comptage de l'année n-5 de la section HIT (colonne [368] du HIT) doit être renseigné";
		
	/**
	 * clé de messageSectionHitTypeComptageNmoins5Regex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.typeComptageNmoins5.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS5_REGEX_02 
		= "message.SectionHit.typeComptageNmoins5.regex";
	
	/**
	 * messageSectionHitTypeComptageNmoins5Regex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitTypeComptageNmoins5Regex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le type de comptage de l'année n-5 de la section HIT (colonne [368] du HIT) doit comporter exactement 1 chiffre".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS5_REGEX_02_EN_DUR 
		= "le type de comptage de l'année n-5 de la section HIT (colonne [368] du HIT) doit comporter exactement 1 chiffre";
				
	/**
	 * clé de messageSectionHitTypeComptageNmoins5Nomenclature03 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.typeComptageNmoins5.nomenclature"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS5_NOMENCLATURE_03 
		= "message.SectionHit.typeComptageNmoins5.nomenclature";
	
	/**
	 * messageSectionHitTypeComptageNmoins5Nomenclature03 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitTypeComptageNmoins5Nomenclature03 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le type de comptage de l'année n-5 de la section HIT (colonne [368] du HIT) doit respecter une nomenclature [1, 2, 3, 4, 5, 6, 7, 8, 9]".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS5_NOMENCLATURE_03_EN_DUR 
		= "le type de comptage de l'année n-5 de la section HIT (colonne [368] du HIT) doit respecter une nomenclature [1, 2, 3, 4, 5, 6, 7, 8, 9]";
	
	/* 104 - modeCalculNmoins5. *******/
	/**
	 * clé de messageSectionHitModeCalculNmoins5Renseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.modeCalculNmoins5.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_MODECALCULNMOINS5_RENSEIGNE_01 
		= "message.SectionHit.modeCalculNmoins5.renseigne";
	
	/**
	 * messageSectionHitModeCalculNmoins5Renseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitModeCalculNmoins5Renseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le mode de calcul des trafics de l'année n-5 de la section HIT (colonne [369] du HIT) doit être renseigné".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_MODECALCULNMOINS5_RENSEIGNE_01_EN_DUR 
		= "le mode de calcul des trafics de l'année n-5 de la section HIT (colonne [369] du HIT) doit être renseigné";
		
	/**
	 * clé de messageSectionHitModeCalculNmoins5Regex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.modeCalculNmoins5.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_MODECALCULNMOINS5_REGEX_02 
		= "message.SectionHit.modeCalculNmoins5.regex";
	
	/**
	 * messageSectionHitModeCalculNmoins5Regex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitModeCalculNmoins5Regex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le mode de calcul des trafics de l'année n-5 de la section HIT (colonne [369] du HIT) doit comporter exactement 1 caractère (ou espace)".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_MODECALCULNMOINS5_REGEX_02_EN_DUR 
		= "le mode de calcul des trafics de l'année n-5 de la section HIT (colonne [369] du HIT) doit comporter exactement 1 caractère (ou espace)";
	
	/* 105 - pcPLNmoins5. *******/
	/**
	 * clé de messageSectionHitPcPLNmoins5Renseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.pcPLNmoins5.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_PCPLNMOINS5_RENSEIGNE_01 
		= "message.SectionHit.pcPLNmoins5.renseigne";
	
	/**
	 * messageSectionHitPcPLNmoins5Renseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitPcPLNmoins5Renseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le pourcentage de trafic poids lourds annuel de l'année n-5 de la section HIT (colonnes [370-372] du HIT) doit être renseigné".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_PCPLNMOINS5_RENSEIGNE_01_EN_DUR 
		= "le pourcentage de trafic poids lourds annuel de l'année n-5 de la section HIT (colonnes [370-372] du HIT) doit être renseigné";
		
	/**
	 * clé de messageSectionHitPcPLNmoins5Regex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.pcPLNmoins5.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_PCPLNMOINS5_REGEX_02 
		= "message.SectionHit.pcPLNmoins5.regex";
	
	/**
	 * messageSectionHitPcPLNmoins5Regex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitPcPLNmoins5Regex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le pourcentage de trafic poids lourds annuel de l'année n-5 de la section HIT (colonnes [370-372] du HIT) doit comporter exactement 3 chiffres".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_PCPLNMOINS5_REGEX_02_EN_DUR 
		= "le pourcentage de trafic poids lourds annuel de l'année n-5 de la section HIT (colonnes [370-372] du HIT) doit comporter exactement 3 chiffres";
		
	/**
	 * clé de messageSectionHitPcPLNmoins5Numerique03 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.pcPLNmoins5.numerique"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_PCPLNMOINS5_NUMERIQUE_03 
		= "message.SectionHit.pcPLNmoins5.numerique";
	
	/**
	 * messageSectionHitPcPLNmoins5Numerique03 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitPcPLNmoins5Numerique03 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le pourcentage de trafic poids lourds annuel de l'année n-5 de la section HIT (colonnes [370-372] du HIT) doit être homogène à un entier".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_PCPLNMOINS5_NUMERIQUE_03_EN_DUR 
		= "le pourcentage de trafic poids lourds annuel de l'année n-5 de la section HIT (colonnes [370-372] du HIT) doit être homogène à un entier";
	
	/* 106 - evaluationPLNmoins5. *******/
	/**
	 * clé de messageSectionHitEvaluationPLNmoins5Renseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.evaluationPLNmoins5.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_EVALUATIONPLNMOINS5_RENSEIGNE_01 
		= "message.SectionHit.evaluationPLNmoins5.renseigne";
	
	/**
	 * messageSectionHitEvaluationPLNmoins5Renseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitEvaluationPLNmoins5Renseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "l'évaluation des pourcentages de trafic poids lourds de l'année n-5 de la section HIT (colonne [373] du HIT) doit être renseigné".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_EVALUATIONPLNMOINS5_RENSEIGNE_01_EN_DUR 
		= "l'évaluation des pourcentages de trafic poids lourds de l'année n-5 de la section HIT (colonne [373] du HIT) doit être renseigné";
		
	/**
	 * clé de messageSectionHitEvaluationPLNmoins5Regex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.evaluationPLNmoins5.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_EVALUATIONPLNMOINS5_REGEX_02 
		= "message.SectionHit.evaluationPLNmoins5.regex";
	
	/**
	 * messageSectionHitEvaluationPLNmoins5Regex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitEvaluationPLNmoins5Regex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "l'évaluation des pourcentages de trafic poids lourds de l'année n-5 de la section HIT (colonne [373] du HIT) doit comporter exactement 1 caractère (ou espace)".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_EVALUATIONPLNMOINS5_REGEX_02_EN_DUR 
		= "l'évaluation des pourcentages de trafic poids lourds de l'année n-5 de la section HIT (colonne [373] du HIT) doit comporter exactement 1 caractère (ou espace)";
	
	/* 107 - pcNuitAnnuelNmoins5. *******/
	/**
	 * clé de messageSectionHitPcNuitAnnuelNmoins5Renseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.pcNuitAnnuelNmoins5.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS5_RENSEIGNE_01 
		= "message.SectionHit.pcNuitAnnuelNmoins5.renseigne";
	
	/**
	 * messageSectionHitPcNuitAnnuelNmoins5Renseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitPcNuitAnnuelNmoins5Renseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le pourcentage de trafic de nuit tous véhicules annuel de l'année n-5 de la section HIT (colonnes [374-376] du HIT) doit être renseigné".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS5_RENSEIGNE_01_EN_DUR 
		= "le pourcentage de trafic de nuit tous véhicules annuel de l'année n-5 de la section HIT (colonnes [374-376] du HIT) doit être renseigné";
		
	/**
	 * clé de messageSectionHitPcNuitAnnuelNmoins5Regex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.pcNuitAnnuelNmoins5.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS5_REGEX_02 
		= "message.SectionHit.pcNuitAnnuelNmoins5.regex";
	
	/**
	 * messageSectionHitPcNuitAnnuelNmoins5Regex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitPcNuitAnnuelNmoins5Regex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le pourcentage de trafic de nuit tous véhicules annuel de l'année n-5 de la section HIT (colonnes [374-376] du HIT) doit comporter exactement 3 chiffres".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS5_REGEX_02_EN_DUR 
		= "le pourcentage de trafic de nuit tous véhicules annuel de l'année n-5 de la section HIT (colonnes [374-376] du HIT) doit comporter exactement 3 chiffres";
		
	/**
	 * clé de messageSectionHitPcNuitAnnuelNmoins5Numerique03 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.pcNuitAnnuelNmoins5.numerique"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS5_NUMERIQUE_03 
		= "message.SectionHit.pcNuitAnnuelNmoins5.numerique";
	
	/**
	 * messageSectionHitPcNuitAnnuelNmoins5Numerique03 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitPcNuitAnnuelNmoins5Numerique03 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "le pourcentage de trafic de nuit tous véhicules annuel de l'année n-5 de la section HIT (colonnes [374-376] du HIT) doit être homogène à un entier".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS5_NUMERIQUE_03_EN_DUR 
		= "le pourcentage de trafic de nuit tous véhicules annuel de l'année n-5 de la section HIT (colonnes [374-376] du HIT) doit être homogène à un entier";
	
	/* 108 - indiceFiabiliteMjaNmoins5. *******/
	/**
	 * clé de messageSectionHitIndiceFiabiliteMjaNmoins5Renseigne01 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.indiceFiabiliteMjaNmoins5.renseigne"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_INDICEFIABLITEMJANMOINS5_RENSEIGNE_01 
		= "message.SectionHit.indiceFiabiliteMjaNmoins5.renseigne";
	
	/**
	 * messageSectionHitIndiceFiabiliteMjaNmoins5Renseigne01 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitIndiceFiabiliteMjaNmoins5Renseigne01 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "l'indice de fiabilité de la TMJA de l'année n-5 de la section HIT (colonne [377] du HIT) doit être renseigné".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_INDICEFIABLITEMJANMOINS5_RENSEIGNE_01_EN_DUR 
		= "l'indice de fiabilité de la TMJA de l'année n-5 de la section HIT (colonne [377] du HIT) doit être renseigné";
		
	/**
	 * clé de messageSectionHitIndiceFiabiliteMjaNmoins5Regex02 dans 
	 * SectionHit_CONTROLES.properties<br/>
	 * "message.SectionHit.indiceFiabiliteMjaNmoins5.regex"<br/>
	 */
	public static final String KEY_MESSAGE_SECTIONHIT_INDICEFIABLITEMJANMOINS5_REGEX_02 
		= "message.SectionHit.indiceFiabiliteMjaNmoins5.regex";
	
	/**
	 * messageSectionHitIndiceFiabiliteMjaNmoins5Regex02 par défaut 
	 * de l'application en dur.<br/>
	 * N'est utilisé que si l'application ne peut lire le 
	 * messageSectionHitIndiceFiabiliteMjaNmoins5Regex02 
	 * indiqué dans SectionHit_CONTROLES.properties.<br/>
	 * "l'indice de fiabilité de la TMJA de l'année n-5 de la section HIT (colonne [377] du HIT) doit comporter exactement 1 caractère (ou espace)".<br/>
	 */
	public static final String MESSAGE_SECTIONHIT_INDICEFIABLITEMJANMOINS5_REGEX_02_EN_DUR 
		= "l'indice de fiabilité de la TMJA de l'année n-5 de la section HIT (colonne [377] du HIT) doit comporter exactement 1 caractère (ou espace)";

	
	/**
	* java.util.Properties encapsulant les préférences.<br/>
	*/
	private static Properties preferences = new Properties();
	
	/**
	* Path absolu vers le fichier properties contenant les preferences
	* <code>SectionHit_CONTROLES.properties</code>.<br/>
	*/
	private static Path pathAbsoluPreferencesProperties;
	
	/**
	* Chemin relatif (par rapport à ressources_externes) 
	* du fichier properties contenant les preferences
	* <code>SectionHit_CONTROLES.properties</code>.<br/>
	* "preferences/metier/sections/SectionHit_CONTROLES.properties"
	*/
	private static final String CHEMIN_RELATIF_PREFERENCES_PROPERTIES_STRING 
	= "preferences/metier/sections/SectionHit_CONTROLES.properties";
	
	/**
	* Modélisation Java du fichier properties contenant les preferences
	* <code>SectionHit_CONTROLES.properties</code>.<br/>
	*/
	private static File filePreferencesProperties;
	
	/**
	* commentaire à ajouter en haut du fichier properties 
	* contenant les preferences 
	* <code>SectionHit_CONTROLES.properties</code>.<br/>
	*/
	private static String commentaire;
	
	/**
	* Chemin relatif (par rapport à src/main/resources) 
	* du template contenant le commentataire à ajouter 
	* en haut du fichier properties contenant les preferences 
	* <code>SectionHit_CONTROLES.properties</code>.<br/>
	* "commentaires_properties/metier/sections/SectionHit_CONTROLES_properties_commentaires.txt"
	*/
	private static final String CHEMIN_RELATIF_TEMPLATE_COMMENTAIRE 
	= "commentaires_properties/metier/sections/SectionHit_CONTROLES_properties_commentaires.txt";

	// MESSAGES ************************************************
	/* 1 - numDepartement. ***********/
	/**
	* message émis par la RG-SectionHit-NumDepartement-01 : 
	* "le numéro de département de la section HIT (colonnes [1-3] du HIT) doit être renseigné (obligatoire)".<br/>
	*/
	private static String messageSectionHitNumDepartementRenseigne01;
	
	/**
	* message émis par la RG-SectionHit-NumDepartement-02 : 
	* "le numéro de département doit comporter exactement 3 chiffres dans les colonnes [1-3] du HIT ('030' pour 03, '300' pour 30, '972' pour 972)".<br/>
	*/
	private static String messageSectionHitNumDepartementRegex02;

	/* 2 - numSection. ***************/
	/**
	* message émis par la RG-SectionHit-NumSection-01 : 
	* "le numéro de section de la section HIT (colonnes [4-9] du HIT) doit être renseigné (obligatoire)".<br/>
	*/
	private static String messageSectionHitNumSectionRenseigne01;
	
	/**
	* message émis par la RG-SectionHit-NumSection-02 : 
	* "le numéro de section doit comporter exactement 6 chiffres 
	 * (Numéro de section sur 4 chiffres significatifs maxi complété 
	 * éventuellement avec des 0 à gauche et indice sur 2 chiffres 
	 * significatifs maxi complété éventuellement avec des 0 à gauche. 
	 * Exemples : section 26 indice 4 = 002604, section 1 indice 0 = 000100
	 * , section 162 indice 65 = 016265)".<br/>
	*/
	private static String messageSectionHitNumSectionRegex02;

	/* 3 - sens. **********************/
	/**
	* message émis par la RG-SectionHit-Sens-01 : 
	* "le sens de la section HIT doit être renseigné (obligatoire)".<br/>
	*/
	private static String messageSectionHitSensRenseigne01;
	
	/**
	* message émis par la RG-SectionHit-Sens-02 : 
	* "le sens de la section HIT (colonne [10] du HIT) doit comporter exactement 1 chiffre".<br/>
	*/
	private static String messageSectionHitSensRegex02;

	/**
	 * message émis par la RG-SectionHit-Sens-03 : 
	 * "le sens de la section HIT (colonne [10] du HIT) doit respecter une nomenclature [1, 2, 3, 4, 5]"
	 */
	private static String messageSectionHitSensNomenclature03;

	/* 4 - nature. ***************/
	/**
	* message émis par la RG-SectionHit-Nature-01 : 
	* "la nature de la section HIT (colonne [11] du HIT) doit être renseignée (obligatoire)".<br/>
	*/
	private static String messageSectionHitNatureRenseigne01;
	
	/**
	* message émis par la RG-SectionHit-Nature-02 : 
	* "la nature de la section HIT (colonne [11] du HIT) doit comporter exactement 1 chiffre" .<br/>
	*/
	private static String messageSectionHitNatureRegex02;

	/**
	 * message émis par la RG-SectionHit-Nature-03 : 
	 * "la nature de la section HIT (colonne [11] du HIT) doit respecter une nomenclature [1, 2, 3, 4, 5, 6, 7, 8, 9]"
	 */
	private static String messageSectionHitNatureNomenclature03;

	/* 5 - classe. ************/
	/**
	* message émis par la RG-SectionHit-Classe-01 : 
	* "la classe de la section HIT (colonnes [12-13] du HIT) doit être renseignée".<br/>
	*/
	private static String messageSectionHitClasseRenseigne01;
	
	/**
	* message émis par la RG-SectionHit-Classe-02 : 
	* "la classe de la section HIT (colonnes [12-13] du HIT) doit comporter exactement 2 chiffres ('00')".<br/>
	*/
	private static String messageSectionHitClasseRegex02;

	/* 6 - anneeTraitement. *******/
	/**
	* message émis par la RG-SectionHit-AnneeTraitement-01 : 
	* "l'année de traitement de la section HIT (colonnes [14-15] du HIT) doit être renseignée (obligatoire)".<br/>
	*/
	private static String messageSectionHitAnneeTraitementRenseigne01;
	
	/**
	* message émis par la RG-SectionHit-AnneeTraitement-02 : 
	* "l'année de traitement de la section HIT (colonnes [14-15] du HIT) doit comporter exactement 2 chiffres".<br/>
	*/
	private static String messageSectionHitAnneeTraitementRegex02;

	/* 7 - zoneLibre1. *******/
	/**
	* message émis par la RG-SectionHit-ZoneLibre1-01 : 
	* "la zone libre de la section HIT (colonnes [16] du HIT) doit être renseignée (1 espace)".<br/>
	*/
	private static String messageSectionHitZoneLibre1Renseigne01;
	
	/**
	* message émis par la RG-SectionHit-ZoneLibre1-02 : 
	* "la zone libre de la section HIT (colonnes [16] du HIT) doit comporter exactement 1 espace".<br/>
	*/
	private static String messageSectionHitZoneLibre1Regex02;

	/* 8 - numRoute. *******/
	/**
	* message émis par la RG-SectionHit-NumRoute-01 : 
	* "le numéro de la route de la section HIT (colonnes [17-20] du HIT) doit être renseigné (obligatoire)".<br/>
	*/
	private static String messageSectionHitNumRouteRenseigne01;
	
	/**
	* message émis par la RG-SectionHit-NumRoute-02 : 
	* "le numéro de la route de la section HIT (colonnes [17-20] du HIT) doit comporter exactement 4 chiffres".<br/>
	*/
	private static String messageSectionHitNumRouteRegex02;

	/* 9 - indiceNumRoute. *******/
	/**
	* message émis par la RG-SectionHit-IndiceNumRoute-01 : 
	* "l'indice numérique de la route de la section HIT (colonnes [21] du HIT) doit être renseigné".<br/>
	*/
	private static String messageSectionHitIndiceNumRouteRenseigne01;
	
	/**
	* message émis par la RG-SectionHit-IndiceNumRoute-02 : 
	* "l'indice numérique de la route de la section HIT (colonnes [21] du HIT) doit comporter exactement 1 chiffre".<br/>
	*/
	private static String messageSectionHitIndiceNumRouteRegex02;

	/* 10 - indiceLettreRoute. *******/
	/**
	* message émis par la RG-SectionHit-IndiceLettreRoute-01 : 
	* "l'indice lettre de la route de la section HIT (colonnes [22] du HIT) doit être renseigné (ou espace si pas d'indice)".<br/>
	*/
	private static String messageSectionHitIndiceLettreRouteRenseigne01;
	
	/**
	* message émis par la RG-SectionHit-IndiceLettreRoute-02 : 
	* "l'indice lettre de la route de la section HIT (colonnes [22] du HIT) doit comporter exactement 1 lettre (ou espace si pas d'indice)".<br/>
	*/
	private static String messageSectionHitIndiceLettreRouteRegex02;

	/* 11 - categorieAdminRoute. *******/
	/**
	* message émis par la RG-SectionHit-CategorieAdminRoute-01 : 
	* "la catégorie administrative de la route de la section HIT (colonne [23] du HIT) doit être renseignée (obligatoire)".<br/>
	*/
	private static String messageSectionHitCategorieAdminRouteRenseigne01;
	
	/**
	* message émis par la RG-SectionHit-CategorieAdminRoute-02 : 
	* "la catégorie administrative de la route de la section HIT (colonne [23] du HIT) doit comporter exactement 1 chiffre".<br/>
	*/
	private static String messageSectionHitCategorieAdminRouteRegex02;

	/**
	 * message émis par la RG-SectionHit-CategorieAdminRoute-03 : 
	 * "la catégorie administrative de la route de la section HIT (colonne [23] du HIT) doit respecter une nomenclature [1, 2, 3, 4, 5, 6, 7, 8, 9]"
	 */
	private static String messageSectionHitCategorieAdminRouteNomenclature03;

	/* 12 - typeComptage. *******/
	/**
	* message émis par la RG-SectionHit-TypeComptage-01 : 
	* "le type de comptage de la section HIT (colonne [24] du HIT) doit être renseigné".<br/>
	*/
	private static String messageSectionHitTypeComptageRenseigne01;
	
	/**
	* message émis par la RG-SectionHit-TypeComptage-02 : 
	* "le type de comptage de la section HIT (colonne [24] du HIT) doit comporter exactement 1 chiffre".<br/>
	*/
	private static String messageSectionHitTypeComptageRegex02;

	/**
	 * message émis par la RG-SectionHit-TypeComptage-03 : 
	 * "le type de comptage de la section HIT (colonne [24] du HIT) doit respecter une nomenclature [1, 2, 3, 4, 5, 6, 7, 8, 9]"
	 */
	private static String messageSectionHitTypeComptageNomenclature03;

	/* 13 - classementRoute. *******/
	/**
	* message émis par la RG-SectionHit-ClassementRoute-01 : 
	* "le classement de la route de la section HIT (colonne [25] du HIT) doit être renseigné".<br/>
	*/
	private static String messageSectionHitClassementRouteRenseigne01;
	
	/**
	* message émis par la RG-SectionHit-ClassementRoute-02 : 
	* "le classement de la route de la section HIT (colonne [25] du HIT) doit comporter exactement 1 chiffre".<br/>
	*/
	private static String messageSectionHitClassementRouteRegex02;

	/**
	 * message émis par la RG-SectionHit-ClassementRoute-03 : 
	 * "le classement de la route de la section HIT (colonne [25] du HIT) doit respecter une nomenclature [1, 2, 3, 4, 5]"
	 */
	private static String messageSectionHitClassementRouteNomenclature03;

	/* 14 - classeLargeurChausseeU. *******/
	/**
	* message émis par la RG-SectionHit-ClasseLargeurChausseeU-01 : 
	* "la classe de largeur de chaussée unique de la section HIT (colonne [26] du HIT) doit être renseignée (0 si sans objet)".<br/>
	*/
	private static String messageSectionHitClasseLargeurChausseeURenseigne01;
	
	/**
	* message émis par la RG-SectionHit-ClasseLargeurChausseeU-02 : 
	* "la classe de largeur de chaussée unique de la section HIT (colonne [26] du HIT) doit comporter exactement 1 chiffre".<br/>
	*/
	private static String messageSectionHitClasseLargeurChausseeURegex02;

	/**
	 * message émis par la RG-SectionHit-ClasseLargeurChausseeU-03 : 
	 * "la classe de largeur de chaussée unique de la section HIT (colonne [26] du HIT) doit respecter une nomenclature [0, 1, 2, 3, 4, 5, 6, 7, 8]"
	 */
	private static String messageSectionHitClasseLargeurChausseeUNomenclature03;

	/* 15 - classeLargeurChausseesS. *******/
	/**
	* message émis par la RG-SectionHit-ClasseLargeurChausseesS-01 : 
	* "la classe de largeur de chaussées séparées de la section HIT (colonne [27] du HIT) doit être renseignée".<br/>
	*/
	private static String messageSectionHitClasseLargeurChausseesSRenseigne01;
	
	/**
	* message émis par la RG-SectionHit-ClasseLargeurChausseesS-02 : 
	* "la classe de largeur de chaussées séparées de la section HIT (colonne [27] du HIT) doit comporter exactement 1 chiffre".<br/>
	*/
	private static String messageSectionHitClasseLargeurChausseesSRegex02;

	/**
	 * message émis par la RG-SectionHit-ClasseLargeurChausseesS-03 : 
	 * "la classe de largeur de chaussées séparées de la section HIT (colonne [27] du HIT) doit respecter une nomenclature [0, 1, 2, 3, 4, 5, 6, 7]"
	 */
	private static String messageSectionHitClasseLargeurChausseesSNomenclature03;

	/* 16 - typeReseau. *******/
	/**
	* message émis par la RG-SectionHit-TypeReseau-01 : 
	* "le type de réseau de la section HIT (colonne [28] du HIT) doit être renseigné (0 si autre que autoroute)".<br/>
	*/
	private static String messageSectionHitTypeReseauRenseigne01;
	
	/**
	* message émis par la RG-SectionHit-TypeReseau-02 : 
	* "le type de réseau de la section HIT (colonne [28] du HIT) doit comporter exactement 1 chiffre".<br/>
	*/
	private static String messageSectionHitTypeReseauRegex02;

	/**
	 * message émis par la RG-SectionHit-TypeReseau-03 : 
	 * "le type de réseau de la section HIT (colonne [28] du HIT) doit respecter une nomenclature [0, 1, 2, 3, 4]"
	 */
	private static String messageSectionHitTypeReseauNomenclature03;

	/* 17 - pRoupK. *******/
	/**
	* message émis par la RG-SectionHit-PRoupK-01 : 
	* "PR ou PK de la section HIT (colonne [29] du HIT) doit être renseigné".<br/>
	*/
	private static String messageSectionHitPRoupKRenseigne01;
	
	/**
	* message émis par la RG-SectionHit-PRoupK-02 : 
	* "PR ou PK de la section HIT (colonne [29] du HIT) doit comporter exactement 1 chiffre".<br/>
	*/
	private static String messageSectionHitPRoupKRegex02;

	/**
	 * message émis par la RG-SectionHit-PRoupK-03 : 
	 * "PR ou PK de la section HIT (colonne [29] du HIT) doit respecter une nomenclature [1, 2]"
	 */
	private static String messageSectionHitPRoupKNomenclature03;

	/* 18 - lieuDitOrigine. *******/
	/**
	* message émis par la RG-SectionHit-LieuDitOrigine-01 : 
	* "le lieu-dit origine de la section HIT (colonnes [30-49] du HIT) doit être renseigné".<br/>
	*/
	private static String messageSectionHitLieuDitOrigineRenseigne01;
	
	/**
	* message émis par la RG-SectionHit-LieuDitOrigine-02 : 
	* "le lieu-dit origine de la section HIT (colonnes [30-49] du HIT) doit comporter exactement 20 caractères".<br/>
	*/
	private static String messageSectionHitLieuDitOrigineRegex02;		

	/* 19 - prOrigine. *******/
	/**
	* message émis par la RG-SectionHit-PrOrigine-01 : 
	* "le PR origine de la section HIT (colonnes [50-52] du HIT) doit être renseigné (obligatoire)".<br/>
	*/
	private static String messageSectionHitPrOrigineRenseigne01;
	
	/**
	* message émis par la RG-SectionHit-PrOrigine-02 : 
	* "le PR origine de la section HIT (colonnes [50-52] du HIT) doit comporter exactement 3 chiffres".<br/>
	*/
	private static String messageSectionHitPrOrigineRegex02;
	
	/**
	* message émis par la RG-SectionHit-PrOrigine-03 : 
	* "le PR origine de la section HIT (colonnes [50-52] du HIT) doit être homogène à un entier".<br/>
	*/
	private static String messageSectionHitPrOrigineNumerique03;

	/* 20 - absOrigine. *******/
	/**
	* message émis par la RG-SectionHit-AbsOrigine-01 : 
	* "l'abscisse origine de la section HIT (colonnes [53-56] du HIT) doit être renseignée (obligatoire)".<br/>
	*/
	private static String messageSectionHitAbsOrigineRenseigne01;
	
	/**
	* message émis par la RG-SectionHit-AbsOrigine-02 : 
	* "l'abscisse origine de la section HIT (colonnes [53-56] du HIT) doit comporter exactement 4 chiffres".<br/>
	*/
	private static String messageSectionHitAbsOrigineRegex02;
	
	/**
	* message émis par la RG-SectionHit-AbsOrigine-03 : 
	* "l'abscisse origine de la section HIT (colonnes [53-56] du HIT) doit être homogène à un entier".<br/>
	*/
	private static String messageSectionHitAbsOrigineNumerique03;

	/* 21 - lieuDitExtremite. *******/
	/**
	* message émis par la RG-SectionHit-LieuDitExtremite-01 : 
	* "le lieu-dit extremité de la section HIT (colonnes [57-76] du HIT) doit être renseigné".<br/>
	*/
	private static String messageSectionHitLieuDitExtremiteRenseigne01;
	
	/**
	* message émis par la RG-SectionHit-LieuDitExtremite-02 : 
	* "le lieu-dit extremité de la section HIT (colonnes [57-76] du HIT) doit comporter exactement 20 caractères".<br/>
	*/
	private static String messageSectionHitLieuDitExtremiteRegex02;		

	/* 22 - prExtremite. *******/
	/**
	* message émis par la RG-SectionHit-PrExtremite-01 : 
	* "le PR extremité de la section HIT (colonnes [77-79] du HIT) doit être renseigné (obligatoire)".<br/>
	*/
	private static String messageSectionHitPrExtremiteRenseigne01;
	
	/**
	* message émis par la RG-SectionHit-PrExtremite-02 : 
	* "le PR extremité de la section HIT (colonnes [77-79] du HIT) doit comporter exactement 3 chiffres".<br/>
	*/
	private static String messageSectionHitPrExtremiteRegex02;
	
	/**
	* message émis par la RG-SectionHit-PrExtremite-03 : 
	* "le PR extremité de la section HIT (colonnes [77-79] du HIT) doit être homogène à un entier".<br/>
	*/
	private static String messageSectionHitPrExtremiteNumerique03;

	/* 23 - absExtremite. *******/
	/**
	* message émis par la RG-SectionHit-AbsExtremite-01 : 
	* "l'abscisse extremité de la section HIT (colonnes [80-83] du HIT) doit être renseignée (obligatoire)".<br/>
	*/
	private static String messageSectionHitAbsExtremiteRenseigne01;
	
	/**
	* message émis par la RG-SectionHit-AbsExtremite-02 : 
	* "l'abscisse extremité de la section HIT (colonnes [80-83] du HIT) doit comporter exactement 4 chiffres".<br/>
	*/
	private static String messageSectionHitAbsExtremiteRegex02;
	
	/**
	* message émis par la RG-SectionHit-AbsExtremite-03 : 
	* "l'abscisse extremité de la section HIT (colonnes [80-83] du HIT) doit être homogène à un entier".<br/>
	*/
	private static String messageSectionHitAbsExtremiteNumerique03;

	/* 24 - lieuDitComptage. *******/
	/**
	* message émis par la RG-SectionHit-LieuDitComptage-01 : 
	* "le lieu-dit de comptage de la section HIT (colonnes [84-103] du HIT) doit être renseigné".<br/>
	*/
	private static String messageSectionHitLieuDitComptageRenseigne01;
	
	/**
	* message émis par la RG-SectionHit-LieuDitComptage-02 : 
	* "le lieu-dit de comptage de la section HIT (colonnes [84-103] du HIT) doit comporter exactement 20 caractères".<br/>
	*/
	private static String messageSectionHitLieuDitComptageRegex02;		

	/* 25 - prComptage. *******/
	/**
	* message émis par la RG-SectionHit-PrComptage-01 : 
	* "le PR du comptage de la section HIT (colonnes [104-106] du HIT) doit être renseigné (obligatoire)".<br/>
	*/
	private static String messageSectionHitPrComptageRenseigne01;
	
	/**
	* message émis par la RG-SectionHit-PrComptage-02 : 
	* "le PR du comptage de la section HIT (colonnes [104-106] du HIT) doit comporter exactement 3 chiffres".<br/>
	*/
	private static String messageSectionHitPrComptageRegex02;
	
	/**
	* message émis par la RG-SectionHit-PrComptage-03 : 
	* "le PR du comptage de la section HIT (colonnes [104-106] du HIT) doit être homogène à un entier".<br/>
	*/
	private static String messageSectionHitPrComptageNumerique03;

	/* 26 - absComptage. *******/
	/**
	* message émis par la RG-SectionHit-AbsComptage-01 : 
	* "l'abscisse du comptage de la section HIT (colonnes [107-110] du HIT) doit être renseignée (obligatoire)".<br/>
	*/
	private static String messageSectionHitAbsComptageRenseigne01;
	
	/**
	* message émis par la RG-SectionHit-AbsComptage-02 : 
	* "l'abscisse du comptage de la section HIT (colonnes [107-110] du HIT) doit comporter exactement 4 chiffres".<br/>
	*/
	private static String messageSectionHitAbsComptageRegex02;
	
	/**
	* message émis par la RG-SectionHit-AbsComptage-03 : 
	* "l'abscisse du comptage de la section HIT (colonnes [107-110] du HIT) doit être homogène à un entier".<br/>
	*/
	private static String messageSectionHitAbsComptageNumerique03;

	/* 27 - longueurSection. *******/
	/**
	* message émis par la RG-SectionHit-LongueurSection-01 : 
	* "la longueur de la section HIT (colonnes [111-116] du HIT) doit être renseignée".<br/>
	*/
	private static String messageSectionHitLongueurSectionRenseigne01;
	
	/**
	* message émis par la RG-SectionHit-LongueurSection-02 : 
	* "la longueur de la section HIT (colonnes [111-116] du HIT) doit comporter exactement 6 chiffres".<br/>
	*/
	private static String messageSectionHitLongueurSectionRegex02;
	
	/**
	* message émis par la RG-SectionHit-LongueurSection-03 : 
	* "la longueur de la section HIT (colonnes [111-116] du HIT) doit être homogène à un entier".<br/>
	*/
	private static String messageSectionHitLongueurSectionNumerique03;

	/* 28 - longueurRaseCampagne. *******/
	/**
	* message émis par la RG-SectionHit-LongueurRaseCampagne-01 : 
	* "la longueur en rase campagne de la section HIT (colonnes [117-122] du HIT) doit être renseignée".<br/>
	*/
	private static String messageSectionHitLongueurRaseCampagneRenseigne01;
	
	/**
	* message émis par la RG-SectionHit-LongueurRaseCampagne-02 : 
	* "la longueur en rase campagne de la section HIT (colonnes [117-122] du HIT) doit comporter exactement 6 chiffres".<br/>
	*/
	private static String messageSectionHitLongueurRaseCampagneRegex02;
	
	/**
	* message émis par la RG-SectionHit-LongueurRaseCampagne-03 : 
	* "la longueur en rase campagne de la section HIT (colonnes [117-122] du HIT) doit être homogène à un entier".<br/>
	*/
	private static String messageSectionHitLongueurRaseCampagneNumerique03;			

	/* 29 - numDepartementRattachement. *******/
	/**
	* message émis par la RG-SectionHit-NumDepartementRattachement-01 : 
	* "le numéro de département de rattachement de la section HIT (colonnes [123-125] du HIT) doit être renseigné".<br/>
	*/
	private static String messageSectionHitNumDepartementRattachementRenseigne01;
	
	/**
	* message émis par la RG-SectionHit-NumDepartementRattachement-02 : 
	* "le numéro de département de rattachement de la section HIT (colonnes [123-125] du HIT) doit comporter exactement 3 chiffres".<br/>
	*/
	private static String messageSectionHitNumDepartementRattachementRegex02;

	/* 30 - numSectionRattachement. *******/
	/**
	* message émis par la RG-SectionHit-NumSectionRattachement-01 : 
	* "le numéro de section de rattachement de la section HIT (colonnes [126-131] du HIT) doit être renseigné".<br/>
	*/
	private static String messageSectionHitNumSectionRattachementRenseigne01;
	
	/**
	* message émis par la RG-SectionHit-NumSectionRattachement-02 : 
	* "le numéro de section de rattachement de la section HIT (colonnes [126-131] du HIT) doit comporter exactement 6 chiffres".<br/>
	*/
	private static String messageSectionHitNumSectionRattachementRegex02;

	/* 31 - sensRattachement. *******/
	/**
	* message émis par la RG-SectionHit-SensRattachement-01 : 
	* "le sens de la section de rattachement de la section HIT (colonne [132] du HIT) doit être renseigné".<br/>
	*/
	private static String messageSectionHitSensRattachementRenseigne01;
	
	/**
	* message émis par la RG-SectionHit-SensRattachement-02 : 
	* "le sens de la section de rattachement de la section HIT (colonne [132] du HIT) doit comporter exactement 1 chiffre".<br/>
	*/
	private static String messageSectionHitSensRattachementRegex02;

	/**
	 * message émis par la RG-SectionHit-SensRattachement-03 : 
	 * "le sens de la section de rattachement de la section HIT (colonne [132] du HIT) doit respecter une nomenclature [1, 2, 3, 4, 5]"
	 */
	private static String messageSectionHitSensRattachementNomenclature03;

	/* 32 - numDepartementLimitrophe. *******/
	/**
	* message émis par la RG-SectionHit-NumDepartementLimitrophe-01 : 
	* "le numéro de département limitrophe de la section HIT (colonnes [133-135] du HIT) doit être renseigné".<br/>
	*/
	private static String messageSectionHitNumDepartementLimitropheRenseigne01;
	
	/**
	* message émis par la RG-SectionHit-NumDepartementLimitrophe-02 : 
	* "le numéro de département limitrophe de la section HIT (colonnes [133-135] du HIT) doit comporter exactement 3 chiffres".<br/>
	*/
	private static String messageSectionHitNumDepartementLimitropheRegex02;

	/* 33 - numSectionLimitrophe. *******/
	/**
	* message émis par la RG-SectionHit-NumSectionLimitrophe-01 : 
	* "le numéro de section limitrophe de la section HIT (colonnes [136-141] du HIT) doit être renseigné".<br/>
	*/
	private static String messageSectionHitNumSectionLimitropheRenseigne01;
	
	/**
	* message émis par la RG-SectionHit-NumSectionLimitrophe-02 : 
	* "le numéro de section limitrophe de la section HIT (colonnes [136-141] du HIT) doit comporter exactement 6 chiffres".<br/>
	*/
	private static String messageSectionHitNumSectionLimitropheRegex02;

	/* 34 - sensLimitrophe. *******/
	/**
	* message émis par la RG-SectionHit-SensLimitrophe-01 : 
	* "le sens de la section limitrophe de la section HIT (colonne [142] du HIT) doit être renseigné".<br/>
	*/
	private static String messageSectionHitSensLimitropheRenseigne01;
	
	/**
	* message émis par la RG-SectionHit-SensLimitrophe-02 : 
	* "le sens de la section limitrophe de la section HIT (colonne [142] du HIT) doit comporter exactement 1 chiffre".<br/>
	*/
	private static String messageSectionHitSensLimitropheRegex02;

	/**
	 * message émis par la RG-SectionHit-SensLimitrophe-03 : 
	 * "le sens de la section limitrophe de la section HIT (colonne [142] du HIT) doit respecter une nomenclature [1, 2, 3, 4, 5]"
	 */
	private static String messageSectionHitSensLimitropheNomenclature03;

	/* 35 - moisSectionnement. *******/
	/**
	* message émis par la RG-SectionHit-MoisSectionnement-01 : 
	* "le mois de sectionnement de la section HIT (colonnes [143-144] du HIT) doit être renseigné".<br/>
	*/
	private static String messageSectionHitMoisSectionnementRenseigne01;
	
	/**
	* message émis par la RG-SectionHit-MoisSectionnement-02 : 
	* "le mois de sectionnement de la section HIT (colonnes [143-144] du HIT) doit comporter exactement 2 chiffres".<br/>
	*/
	private static String messageSectionHitMoisSectionnementRegex02;

	/* 36 - anneeSectionnement. *******/
	/**
	* message émis par la RG-SectionHit-AnneeSectionnement-01 : 
	* "l'année de sectionnement de la section HIT (colonnes [145-146] du HIT) doit être renseignée".<br/>
	*/
	private static String messageSectionHitAnneeSectionnementRenseigne01;
	
	/**
	* message émis par la RG-SectionHit-AnneeSectionnement-02 : 
	* "l'année de sectionnement de la section HIT (colonnes [145-146] du HIT) doit comporter exactement 2 chiffres".<br/>
	*/
	private static String messageSectionHitAnneeSectionnementRegex02;

	/* 37 - zoneLibre2. *******/
	/**
	* message émis par la RG-SectionHit-ZoneLibre2-01 : 
	* "la zone libre de la section HIT (colonnes [147-152] du HIT) doit être renseignée avec des espaces)".<br/>
	*/
	private static String messageSectionHitZoneLibre2Renseigne01;
	
	/**
	* message émis par la RG-SectionHit-ZoneLibre2-02 : 
	* "la zone libre de la section HIT (colonnes [147-152] du HIT) doit comporter exactement 6 espaces".<br/>
	*/
	private static String messageSectionHitZoneLibre2Regex02;

	/* 38 - mjaN. *******/
	/**
	* message émis par la RG-SectionHit-MjaN-01 : 
	* "le trafic moyen journalier annuel de l'année n de la section HIT (colonnes [153-158] du HIT) doit être renseigné".<br/>
	*/
	private static String messageSectionHitMjaNRenseigne01;
	
	/**
	* message émis par la RG-SectionHit-MjaN-02 : 
	* "le trafic moyen journalier annuel de l'année n de la section HIT (colonnes [153-158] du HIT) doit comporter exactement 6 chiffres".<br/>
	*/
	private static String messageSectionHitMjaNRegex02;
	
	/**
	* message émis par la RG-SectionHit-MjaN-03 : 
	* "le trafic moyen journalier annuel de l'année n de la section HIT (colonnes [153-158] du HIT) doit être homogène à un entier".<br/>
	*/
	private static String messageSectionHitMjaNNumerique03;

	/* 39 - modeCalculN. *******/
	/**
	* message émis par la RG-SectionHit-ModeCalculN-01 : 
	* "le mode de calcul des trafics de l'année n de la section HIT (colonne [159] du HIT) doit être renseigné".<br/>
	*/
	private static String messageSectionHitModeCalculNRenseigne01;
	
	/**
	* message émis par la RG-SectionHit-ModeCalculN-02 : 
	* "le mode de calcul des trafics de l'année n de la section HIT (colonne [159] du HIT) doit comporter exactement 1 caractère (ou espace)".<br/>
	*/
	private static String messageSectionHitModeCalculNRegex02;

	/* 40 - pcPLN. *******/
	/**
	* message émis par la RG-SectionHit-PcPLN-01 : 
	* "le pourcentage de trafic poids lourds annuel de l'année n de la section HIT (colonnes [160-162] du HIT) doit être renseigné".<br/>
	*/
	private static String messageSectionHitPcPLNRenseigne01;
	
	/**
	* message émis par la RG-SectionHit-PcPLN-02 : 
	* "le pourcentage de trafic poids lourds annuel de l'année n de la section HIT (colonnes [160-162] du HIT) doit comporter exactement 3 chiffres".<br/>
	*/
	private static String messageSectionHitPcPLNRegex02;
	
	/**
	* message émis par la RG-SectionHit-PcPLN-03 : 
	* "le pourcentage de trafic poids lourds annuel de l'année n de la section HIT (colonnes [160-162] du HIT) doit être homogène à un entier".<br/>
	*/
	private static String messageSectionHitPcPLNNumerique03;

	/* 41 - evaluationPLN. *******/
	/**
	* message émis par la RG-SectionHit-EvaluationPLN-01 : 
	* "l'évaluation des pourcentages de trafic poids lourds de l'année n de la section HIT (colonne [163] du HIT) doit être renseigné".<br/>
	*/
	private static String messageSectionHitEvaluationPLNRenseigne01;
	
	/**
	* message émis par la RG-SectionHit-EvaluationPLN-02 : 
	* "l'évaluation des pourcentages de trafic poids lourds de l'année n de la section HIT (colonne [163] du HIT) doit comporter exactement 1 caractère (ou espace)".<br/>
	*/
	private static String messageSectionHitEvaluationPLNRegex02;

	/* 42 - pcNuitAnnuelN. *******/
	/**
	* message émis par la RG-SectionHit-PcNuitAnnuelN-01 : 
	* "le pourcentage de trafic de nuit tous véhicules annuel de l'année n de la section HIT (colonnes [164-166] du HIT) doit être renseigné".<br/>
	*/
	private static String messageSectionHitPcNuitAnnuelNRenseigne01;
	
	/**
	* message émis par la RG-SectionHit-PcNuitAnnuelN-02 : 
	* "le pourcentage de trafic de nuit tous véhicules annuel de l'année n de la section HIT (colonnes [164-166] du HIT) doit comporter exactement 3 chiffres".<br/>
	*/
	private static String messageSectionHitPcNuitAnnuelNRegex02;
	
	/**
	* message émis par la RG-SectionHit-PcNuitAnnuelN-03 : 
	* "le pourcentage de trafic de nuit tous véhicules annuel de l'année n de la section HIT (colonnes [164-166] du HIT) doit être homogène à un entier".<br/>
	*/
	private static String messageSectionHitPcNuitAnnuelNNumerique03;

	/* 43 - indiceFiabiliteMjaN. *******/
	/**
	* message émis par la RG-SectionHit-IndiceFiabiliteMjaN-01 : 
	* "l'indice de fiabilité de la TMJA de l'année n de la section HIT (colonne [167] du HIT) doit être renseigné".<br/>
	*/
	private static String messageSectionHitIndiceFiabiliteMjaNRenseigne01;
	
	/**
	* message émis par la RG-SectionHit-IndiceFiabiliteMjaN-02 : 
	* "l'indice de fiabilité de la TMJA de l'année n de la section HIT (colonne [167] du HIT) doit comporter exactement 1 caractère (ou espace)".<br/>
	*/
	private static String messageSectionHitIndiceFiabiliteMjaNRegex02;

	/* 44 - mjmNmois01. *******/
	/**
	* message émis par la RG-SectionHit-MjmNmois01-01 : 
	* "la moyenne journalière mensuelle du mois de janvier (01) de l'année n en véhicules/jour de la section HIT (colonnes [168-173] du HIT) doit être renseignée".<br/>
	*/
	private static String messageSectionHitMjmNmois01Renseigne01;
	
	/**
	* message émis par la RG-SectionHit-MjmNmois01-02 : 
	* "la moyenne journalière mensuelle du mois de janvier (01) de l'année n en véhicules/jour de la section HIT (colonnes [168-173] du HIT) doit comporter exactement 6 chiffres".<br/>
	*/
	private static String messageSectionHitMjmNmois01Regex02;
	
	/**
	* message émis par la RG-SectionHit-MjmNmois01-03 : 
	* "la moyenne journalière mensuelle du mois de janvier (01) de l'année n en véhicules/jour de la section HIT (colonnes [168-173] du HIT) doit être homogène à un entier".<br/>
	*/
	private static String messageSectionHitMjmNmois01Numerique03;

	/* 45 - pcNuitNmois01. *******/
	/**
	* message émis par la RG-SectionHit-PcNuitNmois01-01 : 
	* "le pourcentage de trafic de nuit tous véhicules mensuel du mois de janvier (01) de l'année n de la section HIT (colonnes [174-176] du HIT) doit être renseigné".<br/>
	*/
	private static String messageSectionHitPcNuitNmois01Renseigne01;
	
	/**
	* message émis par la RG-SectionHit-PcNuitNmois01-02 : 
	* "le pourcentage de trafic de nuit tous véhicules mensuel du mois de janvier (01) de l'année n de la section HIT (colonnes [174-176] du HIT) doit comporter exactement 3 chiffres".<br/>
	*/
	private static String messageSectionHitPcNuitNmois01Regex02;
	
	/**
	* message émis par la RG-SectionHit-PcNuitNmois01-03 : 
	* "le pourcentage de trafic de nuit tous véhicules mensuel du mois de janvier (01) de l'année n de la section HIT (colonnes [174-176] du HIT) doit être homogène à un entier".<br/>
	*/
	private static String messageSectionHitPcNuitNmois01Numerique03;

	/* 46 - mjmNmois02. *******/
	/**
	* message émis par la RG-SectionHit-MjmNmois02-01 : 
	* "la moyenne journalière mensuelle du mois de février (02) de l'année n en véhicules/jour de la section HIT (colonnes [177-182] du HIT) doit être renseignée".<br/>
	*/
	private static String messageSectionHitMjmNmois02Renseigne01;
	
	/**
	* message émis par la RG-SectionHit-MjmNmois02-02 : 
	* "la moyenne journalière mensuelle du mois de février (02) de l'année n en véhicules/jour de la section HIT (colonnes [177-182] du HIT) doit comporter exactement 6 chiffres".<br/>
	*/
	private static String messageSectionHitMjmNmois02Regex02;
	
	/**
	* message émis par la RG-SectionHit-MjmNmois02-03 : 
	* "la moyenne journalière mensuelle du mois de février (02) de l'année n en véhicules/jour de la section HIT (colonnes [177-182] du HIT) doit être homogène à un entier".<br/>
	*/
	private static String messageSectionHitMjmNmois02Numerique03;

	/* 47 - pcNuitNmois02. *******/
	/**
	* message émis par la RG-SectionHit-PcNuitNmois02-01 : 
	* "le pourcentage de trafic de nuit tous véhicules mensuel du mois de février (02) de l'année n de la section HIT (colonnes [183-185] du HIT) doit être renseigné".<br/>
	*/
	private static String messageSectionHitPcNuitNmois02Renseigne01;
	
	/**
	* message émis par la RG-SectionHit-PcNuitNmois02-02 : 
	* "le pourcentage de trafic de nuit tous véhicules mensuel du mois de février (02) de l'année n de la section HIT (colonnes [183-185] du HIT) doit comporter exactement 3 chiffres".<br/>
	*/
	private static String messageSectionHitPcNuitNmois02Regex02;
	
	/**
	* message émis par la RG-SectionHit-PcNuitNmois02-03 : 
	* "le pourcentage de trafic de nuit tous véhicules mensuel du mois de février (02) de l'année n de la section HIT (colonnes [183-185] du HIT) doit être homogène à un entier".<br/>
	*/
	private static String messageSectionHitPcNuitNmois02Numerique03;

	/* 48 - mjmNmois03. *******/
	/**
	* message émis par la RG-SectionHit-MjmNmois03-01 : 
	* "la moyenne journalière mensuelle du mois de mars (03) de l'année n en véhicules/jour de la section HIT (colonnes [186-191] du HIT) doit être renseignée".<br/>
	*/
	private static String messageSectionHitMjmNmois03Renseigne01;
	
	/**
	* message émis par la RG-SectionHit-MjmNmois03-02 : 
	* "la moyenne journalière mensuelle du mois de mars (03) de l'année n en véhicules/jour de la section HIT (colonnes [186-191] du HIT) doit comporter exactement 6 chiffres".<br/>
	*/
	private static String messageSectionHitMjmNmois03Regex02;
	
	/**
	* message émis par la RG-SectionHit-MjmNmois03-03 : 
	* "la moyenne journalière mensuelle du mois de mars (03) de l'année n en véhicules/jour de la section HIT (colonnes [186-191] du HIT) doit être homogène à un entier".<br/>
	*/
	private static String messageSectionHitMjmNmois03Numerique03;

	/* 49 - pcNuitNmois03. *******/
	/**
	* message émis par la RG-SectionHit-PcNuitNmois03-01 : 
	* "le pourcentage de trafic de nuit tous véhicules mensuel du mois de mars (03) de l'année n de la section HIT (colonnes [192-194] du HIT) doit être renseigné".<br/>
	*/
	private static String messageSectionHitPcNuitNmois03Renseigne01;
	
	/**
	* message émis par la RG-SectionHit-PcNuitNmois03-02 : 
	* "le pourcentage de trafic de nuit tous véhicules mensuel du mois de mars (03) de l'année n de la section HIT (colonnes [192-194] du HIT) doit comporter exactement 3 chiffres".<br/>
	*/
	private static String messageSectionHitPcNuitNmois03Regex02;
	
	/**
	* message émis par la RG-SectionHit-PcNuitNmois03-03 : 
	* "le pourcentage de trafic de nuit tous véhicules mensuel du mois de mars (03) de l'année n de la section HIT (colonnes [192-194] du HIT) doit être homogène à un entier".<br/>
	*/
	private static String messageSectionHitPcNuitNmois03Numerique03;

	/* 50 - mjmNmois04. *******/
	/**
	* message émis par la RG-SectionHit-MjmNmois04-01 : 
	* "la moyenne journalière mensuelle du mois de avril (04) de l'année n en véhicules/jour de la section HIT (colonnes [195-200] du HIT) doit être renseignée".<br/>
	*/
	private static String messageSectionHitMjmNmois04Renseigne01;
	
	/**
	* message émis par la RG-SectionHit-MjmNmois04-02 : 
	* "la moyenne journalière mensuelle du mois de avril (04) de l'année n en véhicules/jour de la section HIT (colonnes [195-200] du HIT) doit comporter exactement 6 chiffres".<br/>
	*/
	private static String messageSectionHitMjmNmois04Regex02;
	
	/**
	* message émis par la RG-SectionHit-MjmNmois04-03 : 
	* "la moyenne journalière mensuelle du mois de avril (04) de l'année n en véhicules/jour de la section HIT (colonnes [195-200] du HIT) doit être homogène à un entier".<br/>
	*/
	private static String messageSectionHitMjmNmois04Numerique03;

	/* 51 - pcNuitNmois04. *******/
	/**
	* message émis par la RG-SectionHit-PcNuitNmois04-01 : 
	* "le pourcentage de trafic de nuit tous véhicules mensuel du mois de avril (04) de l'année n de la section HIT (colonnes [201-203] du HIT) doit être renseigné".<br/>
	*/
	private static String messageSectionHitPcNuitNmois04Renseigne01;
	
	/**
	* message émis par la RG-SectionHit-PcNuitNmois04-02 : 
	* "le pourcentage de trafic de nuit tous véhicules mensuel du mois de avril (04) de l'année n de la section HIT (colonnes [201-203] du HIT) doit comporter exactement 3 chiffres".<br/>
	*/
	private static String messageSectionHitPcNuitNmois04Regex02;
	
	/**
	* message émis par la RG-SectionHit-PcNuitNmois04-03 : 
	* "le pourcentage de trafic de nuit tous véhicules mensuel du mois de avril (04) de l'année n de la section HIT (colonnes [201-203] du HIT) doit être homogène à un entier".<br/>
	*/
	private static String messageSectionHitPcNuitNmois04Numerique03;


	/* 52 - mjmNmois05. *******/
	/**
	* message émis par la RG-SectionHit-MjmNmois05-01 : 
	* "la moyenne journalière mensuelle du mois de mai (05) de l'année n en véhicules/jour de la section HIT (colonnes [204-209] du HIT) doit être renseignée".<br/>
	*/
	private static String messageSectionHitMjmNmois05Renseigne01;
	
	/**
	* message émis par la RG-SectionHit-MjmNmois05-02 : 
	* "la moyenne journalière mensuelle du mois de mai (05) de l'année n en véhicules/jour de la section HIT (colonnes [204-209] du HIT) doit comporter exactement 6 chiffres".<br/>
	*/
	private static String messageSectionHitMjmNmois05Regex02;
	
	/**
	* message émis par la RG-SectionHit-MjmNmois05-03 : 
	* "la moyenne journalière mensuelle du mois de mai (05) de l'année n en véhicules/jour de la section HIT (colonnes [204-209] du HIT) doit être homogène à un entier".<br/>
	*/
	private static String messageSectionHitMjmNmois05Numerique03;

	/* 53 - pcNuitNmois05. *******/
	/**
	* message émis par la RG-SectionHit-PcNuitNmois05-01 : 
	* "le pourcentage de trafic de nuit tous véhicules mensuel du mois de mai (05) de l'année n de la section HIT (colonnes [210-212] du HIT) doit être renseigné".<br/>
	*/
	private static String messageSectionHitPcNuitNmois05Renseigne01;
	
	/**
	* message émis par la RG-SectionHit-PcNuitNmois05-02 : 
	* "le pourcentage de trafic de nuit tous véhicules mensuel du mois de mai (05) de l'année n de la section HIT (colonnes [210-212] du HIT) doit comporter exactement 3 chiffres".<br/>
	*/
	private static String messageSectionHitPcNuitNmois05Regex02;
	
	/**
	* message émis par la RG-SectionHit-PcNuitNmois05-03 : 
	* "le pourcentage de trafic de nuit tous véhicules mensuel du mois de mai (05) de l'année n de la section HIT (colonnes [210-212] du HIT) doit être homogène à un entier".<br/>
	*/
	private static String messageSectionHitPcNuitNmois05Numerique03;


	/* 54 - mjmNmois06. *******/
	/**
	* message émis par la RG-SectionHit-MjmNmois06-01 : 
	* "la moyenne journalière mensuelle du mois de juin (06) de l'année n en véhicules/jour de la section HIT (colonnes [213-218] du HIT) doit être renseignée".<br/>
	*/
	private static String messageSectionHitMjmNmois06Renseigne01;
	
	/**
	* message émis par la RG-SectionHit-MjmNmois06-02 : 
	* "la moyenne journalière mensuelle du mois de juin (06) de l'année n en véhicules/jour de la section HIT (colonnes [213-218] du HIT) doit comporter exactement 6 chiffres".<br/>
	*/
	private static String messageSectionHitMjmNmois06Regex02;
	
	/**
	* message émis par la RG-SectionHit-MjmNmois06-03 : 
	* "la moyenne journalière mensuelle du mois de juin (06) de l'année n en véhicules/jour de la section HIT (colonnes [213-218] du HIT) doit être homogène à un entier".<br/>
	*/
	private static String messageSectionHitMjmNmois06Numerique03;

	/* 55 - pcNuitNmois06. *******/
	/**
	* message émis par la RG-SectionHit-PcNuitNmois06-01 : 
	* "le pourcentage de trafic de nuit tous véhicules mensuel du mois de juin (06) de l'année n de la section HIT (colonnes [219-221] du HIT) doit être renseigné".<br/>
	*/
	private static String messageSectionHitPcNuitNmois06Renseigne01;
	
	/**
	* message émis par la RG-SectionHit-PcNuitNmois06-02 : 
	* "le pourcentage de trafic de nuit tous véhicules mensuel du mois de juin (06) de l'année n de la section HIT (colonnes [219-221] du HIT) doit comporter exactement 3 chiffres".<br/>
	*/
	private static String messageSectionHitPcNuitNmois06Regex02;
	
	/**
	* message émis par la RG-SectionHit-PcNuitNmois06-03 : 
	* "le pourcentage de trafic de nuit tous véhicules mensuel du mois de juin (06) de l'année n de la section HIT (colonnes [219-221] du HIT) doit être homogène à un entier".<br/>
	*/
	private static String messageSectionHitPcNuitNmois06Numerique03;


	/* 56 - mjmNmois07. *******/
	/**
	* message émis par la RG-SectionHit-MjmNmois07-01 : 
	* "la moyenne journalière mensuelle du mois de juillet (07) de l'année n en véhicules/jour de la section HIT (colonnes [222-227] du HIT) doit être renseignée".<br/>
	*/
	private static String messageSectionHitMjmNmois07Renseigne01;
	
	/**
	* message émis par la RG-SectionHit-MjmNmois07-02 : 
	* "la moyenne journalière mensuelle du mois de juillet (07) de l'année n en véhicules/jour de la section HIT (colonnes [222-227] du HIT) doit comporter exactement 6 chiffres".<br/>
	*/
	private static String messageSectionHitMjmNmois07Regex02;
	
	/**
	* message émis par la RG-SectionHit-MjmNmois07-03 : 
	* "la moyenne journalière mensuelle du mois de juillet (07) de l'année n en véhicules/jour de la section HIT (colonnes [222-227] du HIT) doit être homogène à un entier".<br/>
	*/
	private static String messageSectionHitMjmNmois07Numerique03;

	/* 57 - pcNuitNmois07. *******/
	/**
	* message émis par la RG-SectionHit-PcNuitNmois07-01 : 
	* "le pourcentage de trafic de nuit tous véhicules mensuel du mois de juillet (07) de l'année n de la section HIT (colonnes [228-230] du HIT) doit être renseigné".<br/>
	*/
	private static String messageSectionHitPcNuitNmois07Renseigne01;
	
	/**
	* message émis par la RG-SectionHit-PcNuitNmois07-02 : 
	* "le pourcentage de trafic de nuit tous véhicules mensuel du mois de juillet (07) de l'année n de la section HIT (colonnes [228-230] du HIT) doit comporter exactement 3 chiffres".<br/>
	*/
	private static String messageSectionHitPcNuitNmois07Regex02;
	
	/**
	* message émis par la RG-SectionHit-PcNuitNmois07-03 : 
	* "le pourcentage de trafic de nuit tous véhicules mensuel du mois de juillet (07) de l'année n de la section HIT (colonnes [228-230] du HIT) doit être homogène à un entier".<br/>
	*/
	private static String messageSectionHitPcNuitNmois07Numerique03;


	/* 58 - mjmNmois08. *******/
	/**
	* message émis par la RG-SectionHit-MjmNmois08-01 : 
	* "la moyenne journalière mensuelle du mois de août (08) de l'année n en véhicules/jour de la section HIT (colonnes [231-236] du HIT) doit être renseignée".<br/>
	*/
	private static String messageSectionHitMjmNmois08Renseigne01;
	
	/**
	* message émis par la RG-SectionHit-MjmNmois08-02 : 
	* "la moyenne journalière mensuelle du mois de août (08) de l'année n en véhicules/jour de la section HIT (colonnes [231-236] du HIT) doit comporter exactement 6 chiffres".<br/>
	*/
	private static String messageSectionHitMjmNmois08Regex02;
	
	/**
	* message émis par la RG-SectionHit-MjmNmois08-03 : 
	* "la moyenne journalière mensuelle du mois de août (08) de l'année n en véhicules/jour de la section HIT (colonnes [231-236] du HIT) doit être homogène à un entier".<br/>
	*/
	private static String messageSectionHitMjmNmois08Numerique03;

	/* 59 - pcNuitNmois08. *******/
	/**
	* message émis par la RG-SectionHit-PcNuitNmois08-01 : 
	* "le pourcentage de trafic de nuit tous véhicules mensuel du mois de août (08) de l'année n de la section HIT (colonnes [237-239] du HIT) doit être renseigné".<br/>
	*/
	private static String messageSectionHitPcNuitNmois08Renseigne01;
	
	/**
	* message émis par la RG-SectionHit-PcNuitNmois08-02 : 
	* "le pourcentage de trafic de nuit tous véhicules mensuel du mois de août (08) de l'année n de la section HIT (colonnes [237-239] du HIT) doit comporter exactement 3 chiffres".<br/>
	*/
	private static String messageSectionHitPcNuitNmois08Regex02;
	
	/**
	* message émis par la RG-SectionHit-PcNuitNmois08-03 : 
	* "le pourcentage de trafic de nuit tous véhicules mensuel du mois de août (08) de l'année n de la section HIT (colonnes [237-239] du HIT) doit être homogène à un entier".<br/>
	*/
	private static String messageSectionHitPcNuitNmois08Numerique03;


	/* 60 - mjmNmois09. *******/
	/**
	* message émis par la RG-SectionHit-MjmNmois09-01 : 
	* "la moyenne journalière mensuelle du mois de septembre (09) de l'année n en véhicules/jour de la section HIT (colonnes [240-245] du HIT) doit être renseignée".<br/>
	*/
	private static String messageSectionHitMjmNmois09Renseigne01;
	
	/**
	* message émis par la RG-SectionHit-MjmNmois09-02 : 
	* "la moyenne journalière mensuelle du mois de septembre (09) de l'année n en véhicules/jour de la section HIT (colonnes [240-245] du HIT) doit comporter exactement 6 chiffres".<br/>
	*/
	private static String messageSectionHitMjmNmois09Regex02;
	
	/**
	* message émis par la RG-SectionHit-MjmNmois09-03 : 
	* "la moyenne journalière mensuelle du mois de septembre (09) de l'année n en véhicules/jour de la section HIT (colonnes [240-245] du HIT) doit être homogène à un entier".<br/>
	*/
	private static String messageSectionHitMjmNmois09Numerique03;

	/* 61 - pcNuitNmois09. *******/
	/**
	* message émis par la RG-SectionHit-PcNuitNmois09-01 : 
	* "le pourcentage de trafic de nuit tous véhicules mensuel du mois de septembre (09) de l'année n de la section HIT (colonnes [246-248] du HIT) doit être renseigné".<br/>
	*/
	private static String messageSectionHitPcNuitNmois09Renseigne01;
	
	/**
	* message émis par la RG-SectionHit-PcNuitNmois09-02 : 
	* "le pourcentage de trafic de nuit tous véhicules mensuel du mois de septembre (09) de l'année n de la section HIT (colonnes [246-248] du HIT) doit comporter exactement 3 chiffres".<br/>
	*/
	private static String messageSectionHitPcNuitNmois09Regex02;
	
	/**
	* message émis par la RG-SectionHit-PcNuitNmois09-03 : 
	* "le pourcentage de trafic de nuit tous véhicules mensuel du mois de septembre (09) de l'année n de la section HIT (colonnes [246-248] du HIT) doit être homogène à un entier".<br/>
	*/
	private static String messageSectionHitPcNuitNmois09Numerique03;


	/* 62 - mjmNmois10. *******/
	/**
	* message émis par la RG-SectionHit-MjmNmois10-01 : 
	* "la moyenne journalière mensuelle du mois de octobre (10) de l'année n en véhicules/jour de la section HIT (colonnes [249-254] du HIT) doit être renseignée".<br/>
	*/
	private static String messageSectionHitMjmNmois10Renseigne01;
	
	/**
	* message émis par la RG-SectionHit-MjmNmois10-02 : 
	* "la moyenne journalière mensuelle du mois de octobre (10) de l'année n en véhicules/jour de la section HIT (colonnes [249-254] du HIT) doit comporter exactement 6 chiffres".<br/>
	*/
	private static String messageSectionHitMjmNmois10Regex02;
	
	/**
	* message émis par la RG-SectionHit-MjmNmois10-03 : 
	* "la moyenne journalière mensuelle du mois de octobre (10) de l'année n en véhicules/jour de la section HIT (colonnes [249-254] du HIT) doit être homogène à un entier".<br/>
	*/
	private static String messageSectionHitMjmNmois10Numerique03;

	/* 63 - pcNuitNmois10. *******/
	/**
	* message émis par la RG-SectionHit-PcNuitNmois10-01 : 
	* "le pourcentage de trafic de nuit tous véhicules mensuel du mois de octobre (10) de l'année n de la section HIT (colonnes [255-257] du HIT) doit être renseigné".<br/>
	*/
	private static String messageSectionHitPcNuitNmois10Renseigne01;
	
	/**
	* message émis par la RG-SectionHit-PcNuitNmois10-02 : 
	* "le pourcentage de trafic de nuit tous véhicules mensuel du mois de octobre (10) de l'année n de la section HIT (colonnes [255-257] du HIT) doit comporter exactement 3 chiffres".<br/>
	*/
	private static String messageSectionHitPcNuitNmois10Regex02;
	
	/**
	* message émis par la RG-SectionHit-PcNuitNmois10-03 : 
	* "le pourcentage de trafic de nuit tous véhicules mensuel du mois de octobre (10) de l'année n de la section HIT (colonnes [255-257] du HIT) doit être homogène à un entier".<br/>
	*/
	private static String messageSectionHitPcNuitNmois10Numerique03;


	/* 64 - mjmNmois11. *******/
	/**
	* message émis par la RG-SectionHit-MjmNmois11-01 : 
	* "la moyenne journalière mensuelle du mois de novembre (11) de l'année n en véhicules/jour de la section HIT (colonnes [258-263] du HIT) doit être renseignée".<br/>
	*/
	private static String messageSectionHitMjmNmois11Renseigne01;
	
	/**
	* message émis par la RG-SectionHit-MjmNmois11-02 : 
	* "la moyenne journalière mensuelle du mois de novembre (11) de l'année n en véhicules/jour de la section HIT (colonnes [258-263] du HIT) doit comporter exactement 6 chiffres".<br/>
	*/
	private static String messageSectionHitMjmNmois11Regex02;
	
	/**
	* message émis par la RG-SectionHit-MjmNmois11-03 : 
	* "la moyenne journalière mensuelle du mois de novembre (11) de l'année n en véhicules/jour de la section HIT (colonnes [258-263] du HIT) doit être homogène à un entier".<br/>
	*/
	private static String messageSectionHitMjmNmois11Numerique03;

	/* 65 - pcNuitNmois11. *******/
	/**
	* message émis par la RG-SectionHit-PcNuitNmois11-01 : 
	* "le pourcentage de trafic de nuit tous véhicules mensuel du mois de novembre (11) de l'année n de la section HIT (colonnes [264-266] du HIT) doit être renseigné".<br/>
	*/
	private static String messageSectionHitPcNuitNmois11Renseigne01;
	
	/**
	* message émis par la RG-SectionHit-PcNuitNmois11-02 : 
	* "le pourcentage de trafic de nuit tous véhicules mensuel du mois de novembre (11) de l'année n de la section HIT (colonnes [264-266] du HIT) doit comporter exactement 3 chiffres".<br/>
	*/
	private static String messageSectionHitPcNuitNmois11Regex02;
	
	/**
	* message émis par la RG-SectionHit-PcNuitNmois11-03 : 
	* "le pourcentage de trafic de nuit tous véhicules mensuel du mois de novembre (11) de l'année n de la section HIT (colonnes [264-266] du HIT) doit être homogène à un entier".<br/>
	*/
	private static String messageSectionHitPcNuitNmois11Numerique03;


	/* 66 - mjmNmois12. *******/
	/**
	* message émis par la RG-SectionHit-MjmNmois12-01 : 
	* "la moyenne journalière mensuelle du mois de décembre (12) de l'année n en véhicules/jour de la section HIT (colonnes [267-272] du HIT) doit être renseignée".<br/>
	*/
	private static String messageSectionHitMjmNmois12Renseigne01;
	
	/**
	* message émis par la RG-SectionHit-MjmNmois12-02 : 
	* "la moyenne journalière mensuelle du mois de décembre (12) de l'année n en véhicules/jour de la section HIT (colonnes [267-272] du HIT) doit comporter exactement 6 chiffres".<br/>
	*/
	private static String messageSectionHitMjmNmois12Regex02;
	
	/**
	* message émis par la RG-SectionHit-MjmNmois12-03 : 
	* "la moyenne journalière mensuelle du mois de décembre (12) de l'année n en véhicules/jour de la section HIT (colonnes [267-272] du HIT) doit être homogène à un entier".<br/>
	*/
	private static String messageSectionHitMjmNmois12Numerique03;

	/* 67 - pcNuitNmois12. *******/
	/**
	* message émis par la RG-SectionHit-PcNuitNmois12-01 : 
	* "le pourcentage de trafic de nuit tous véhicules mensuel du mois de décembre (12) de l'année n de la section HIT (colonnes [273-275] du HIT) doit être renseigné".<br/>
	*/
	private static String messageSectionHitPcNuitNmois12Renseigne01;
	
	/**
	* message émis par la RG-SectionHit-PcNuitNmois12-02 : 
	* "le pourcentage de trafic de nuit tous véhicules mensuel du mois de décembre (12) de l'année n de la section HIT (colonnes [273-275] du HIT) doit comporter exactement 3 chiffres".<br/>
	*/
	private static String messageSectionHitPcNuitNmois12Regex02;
	
	/**
	* message émis par la RG-SectionHit-PcNuitNmois12-03 : 
	* "le pourcentage de trafic de nuit tous véhicules mensuel du mois de décembre (12) de l'année n de la section HIT (colonnes [273-275] du HIT) doit être homogène à un entier".<br/>
	*/
	private static String messageSectionHitPcNuitNmois12Numerique03;

	/* 68 - zoneLibre3. *******/
	/**
	* message émis par la RG-SectionHit-ZoneLibre3-01 : 
	* "la zone libre de la section HIT (colonnes [276-287] du HIT) doit être renseignée avec des espaces)".<br/>
	*/
	private static String messageSectionHitZoneLibre3Renseigne01;
	
	/**
	* message émis par la RG-SectionHit-ZoneLibre3-02 : 
	* "la zone libre de la section HIT (colonnes [276-287] du HIT) doit comporter exactement 12 espaces".<br/>
	*/
	private static String messageSectionHitZoneLibre3Regex02;

	/* 69 - anneeNmoins1. *******/
	/**
	* message émis par la RG-SectionHit-AnneeNmoins1-01 : 
	* "l'année n-1 de la section HIT (colonnes [288-289] du HIT) doit être renseignée".<br/>
	*/
	private static String messageSectionHitAnneeNmoins1Renseigne01;
	
	/**
	* message émis par la RG-SectionHit-AnneeNmoins1-02 : 
	* "l'année n-1 de la section HIT (colonnes [288-289] du HIT) doit comporter exactement 2 chiffres".<br/>
	*/
	private static String messageSectionHitAnneeNmoins1Regex02;

	/* 70 - mjaNmoins1. *******/
	/**
	* message émis par la RG-SectionHit-MjaNmoins1-01 : 
	* "le trafic moyen journalier annuel de l'année n-1 de la section HIT (colonnes [290-295] du HIT) doit être renseigné".<br/>
	*/
	private static String messageSectionHitMjaNmoins1Renseigne01;
	
	/**
	* message émis par la RG-SectionHit-MjaNmoins1-02 : 
	* "le trafic moyen journalier annuel de l'année n-1 de la section HIT (colonnes [290-295] du HIT) doit comporter exactement 6 chiffres".<br/>
	*/
	private static String messageSectionHitMjaNmoins1Regex02;
	
	/**
	* message émis par la RG-SectionHit-MjaNmoins1-03 : 
	* "le trafic moyen journalier annuel de l'année n-1 de la section HIT (colonnes [290-295] du HIT) doit être homogène à un entier".<br/>
	*/
	private static String messageSectionHitMjaNmoins1Numerique03;

	/* 71 - typeComptageNmoins1. *******/
	/**
	* message émis par la RG-SectionHit-TypeComptageNmoins1-01 : 
	* "le type de comptage de l'année n-1 de la section HIT (colonnes [296] du HIT) doit être renseigné".<br/>
	*/
	private static String messageSectionHitTypeComptageNmoins1Renseigne01;
	
	/**
	* message émis par la RG-SectionHit-TypeComptageNmoins1-02 : 
	* "le type de comptage de l'année n-1 de la section HIT (colonnes [296] du HIT) doit comporter exactement 1 chiffre".<br/>
	*/
	private static String messageSectionHitTypeComptageNmoins1Regex02;

	/**
	 * message émis par la RG-SectionHit-TypeComptageNmoins1-03 : 
	 * "le type de comptage de l'année n-1 de la section HIT (colonnes [296] du HIT) doit respecter une nomenclature [1, 2, 3, 4, 5, 6, 7, 8, 9]"
	 */
	private static String messageSectionHitTypeComptageNmoins1Nomenclature03;

	/* 72 - modeCalculNmoins1. *******/
	/**
	* message émis par la RG-SectionHit-ModeCalculNmoins1-01 : 
	* "le mode de calcul des trafics de l'année n-1 de la section HIT (colonne [297] du HIT) doit être renseigné".<br/>
	*/
	private static String messageSectionHitModeCalculNmoins1Renseigne01;
	
	/**
	* message émis par la RG-SectionHit-ModeCalculNmoins1-02 : 
	* "le mode de calcul des trafics de l'année n-1 de la section HIT (colonne [297] du HIT) doit comporter exactement 1 caractère (ou espace)".<br/>
	*/
	private static String messageSectionHitModeCalculNmoins1Regex02;

	/* 73 - pcPLNmoins1. *******/
	/**
	* message émis par la RG-SectionHit-PcPLNmoins1-01 : 
	* "le pourcentage de trafic poids lourds annuel de l'année n-1 de la section HIT (colonnes [298-300] du HIT) doit être renseigné".<br/>
	*/
	private static String messageSectionHitPcPLNmoins1Renseigne01;
	
	/**
	* message émis par la RG-SectionHit-PcPLNmoins1-02 : 
	* "le pourcentage de trafic poids lourds annuel de l'année n-1 de la section HIT (colonnes [298-300] du HIT) doit comporter exactement 3 chiffres".<br/>
	*/
	private static String messageSectionHitPcPLNmoins1Regex02;
	
	/**
	* message émis par la RG-SectionHit-PcPLNmoins1-03 : 
	* "le pourcentage de trafic poids lourds annuel de l'année n-1 de la section HIT (colonnes [298-300] du HIT) doit être homogène à un entier".<br/>
	*/
	private static String messageSectionHitPcPLNmoins1Numerique03;

	/* 74 - evaluationPLNmoins1. *******/
	/**
	* message émis par la RG-SectionHit-EvaluationPLNmoins1-01 : 
	* "l'évaluation des pourcentages de trafic poids lourds de l'année n-1 de la section HIT (colonne [301] du HIT) doit être renseigné".<br/>
	*/
	private static String messageSectionHitEvaluationPLNmoins1Renseigne01;
	
	/**
	* message émis par la RG-SectionHit-EvaluationPLNmoins1-02 : 
	* "l'évaluation des pourcentages de trafic poids lourds de l'année n-1 de la section HIT (colonne [301] du HIT) doit comporter exactement 1 caractère (ou espace)".<br/>
	*/
	private static String messageSectionHitEvaluationPLNmoins1Regex02;

	/* 75 - pcNuitAnnuelNmoins1. *******/
	/**
	* message émis par la RG-SectionHit-PcNuitAnnuelNmoins1-01 : 
	* "le pourcentage de trafic de nuit tous véhicules annuel de l'année n-1 de la section HIT (colonnes [302-304] du HIT) doit être renseigné".<br/>
	*/
	private static String messageSectionHitPcNuitAnnuelNmoins1Renseigne01;
	
	/**
	* message émis par la RG-SectionHit-PcNuitAnnuelNmoins1-02 : 
	* "le pourcentage de trafic de nuit tous véhicules annuel de l'année n-1 de la section HIT (colonnes [302-304] du HIT) doit comporter exactement 3 chiffres".<br/>
	*/
	private static String messageSectionHitPcNuitAnnuelNmoins1Regex02;
	
	/**
	* message émis par la RG-SectionHit-PcNuitAnnuelNmoins1-03 : 
	* "le pourcentage de trafic de nuit tous véhicules annuel de l'année n-1 de la section HIT (colonnes [302-304] du HIT) doit être homogène à un entier".<br/>
	*/
	private static String messageSectionHitPcNuitAnnuelNmoins1Numerique03;

	/* 76 - indiceFiabiliteMjaNmoins1. *******/
	/**
	* message émis par la RG-SectionHit-IndiceFiabiliteMjaNmoins1-01 : 
	* "l'indice de fiabilité de la TMJA de l'année n-1 de la section HIT (colonne [305] du HIT) doit être renseigné".<br/>
	*/
	private static String messageSectionHitIndiceFiabiliteMjaNmoins1Renseigne01;
	
	/**
	* message émis par la RG-SectionHit-IndiceFiabiliteMjaNmoins1-02 : 
	* "l'indice de fiabilité de la TMJA de l'année n-1 de la section HIT (colonne [305] du HIT) doit comporter exactement 1 caractère (ou espace)".<br/>
	*/
	private static String messageSectionHitIndiceFiabiliteMjaNmoins1Regex02;

	/* 77 - anneeNmoins2. *******/
	/**
	* message émis par la RG-SectionHit-AnneeNmoins2-01 : 
	* "l'année n-2 de la section HIT (colonnes [306-307] du HIT) doit être renseignée".<br/>
	*/
	private static String messageSectionHitAnneeNmoins2Renseigne01;
	
	/**
	* message émis par la RG-SectionHit-AnneeNmoins2-02 : 
	* "l'année n-2 de la section HIT (colonnes [306-307] du HIT) doit comporter exactement 2 chiffres".<br/>
	*/
	private static String messageSectionHitAnneeNmoins2Regex02;

	/* 78 - mjaNmoins2. *******/
	/**
	* message émis par la RG-SectionHit-MjaNmoins2-01 : 
	* "le trafic moyen journalier annuel de l'année n-2 de la section HIT (colonnes [308-313] du HIT) doit être renseigné".<br/>
	*/
	private static String messageSectionHitMjaNmoins2Renseigne01;
	
	/**
	* message émis par la RG-SectionHit-MjaNmoins2-02 : 
	* "le trafic moyen journalier annuel de l'année n-2 de la section HIT (colonnes [308-313] du HIT) doit comporter exactement 6 chiffres".<br/>
	*/
	private static String messageSectionHitMjaNmoins2Regex02;
	
	/**
	* message émis par la RG-SectionHit-MjaNmoins2-03 : 
	* "le trafic moyen journalier annuel de l'année n-2 de la section HIT (colonnes [308-313] du HIT) doit être homogène à un entier".<br/>
	*/
	private static String messageSectionHitMjaNmoins2Numerique03;

	/* 79 - typeComptageNmoins2. *******/
	/**
	* message émis par la RG-SectionHit-TypeComptageNmoins2-01 : 
	* "le type de comptage de l'année n-2 de la section HIT (colonnes [314] du HIT) doit être renseigné".<br/>
	*/
	private static String messageSectionHitTypeComptageNmoins2Renseigne01;
	
	/**
	* message émis par la RG-SectionHit-TypeComptageNmoins2-02 : 
	* "le type de comptage de l'année n-2 de la section HIT (colonnes [314] du HIT) doit comporter exactement 1 chiffre".<br/>
	*/
	private static String messageSectionHitTypeComptageNmoins2Regex02;

	/**
	 * message émis par la RG-SectionHit-TypeComptageNmoins2-03 : 
	 * "le type de comptage de l'année n-2 de la section HIT (colonnes [314] du HIT) doit respecter une nomenclature [1, 2, 3, 4, 5, 6, 7, 8, 9]"
	 */
	private static String messageSectionHitTypeComptageNmoins2Nomenclature03;

	/* 80 - modeCalculNmoins2. *******/
	/**
	* message émis par la RG-SectionHit-ModeCalculNmoins2-01 : 
	* "le mode de calcul des trafics de l'année n-2 de la section HIT (colonne [315] du HIT) doit être renseigné".<br/>
	*/
	private static String messageSectionHitModeCalculNmoins2Renseigne01;
	
	/**
	* message émis par la RG-SectionHit-ModeCalculNmoins2-02 : 
	* "le mode de calcul des trafics de l'année n-2 de la section HIT (colonne [315] du HIT) doit comporter exactement 1 caractère (ou espace)".<br/>
	*/
	private static String messageSectionHitModeCalculNmoins2Regex02;

	/* 81 - pcPLNmoins2. *******/
	/**
	* message émis par la RG-SectionHit-PcPLNmoins2-01 : 
	* "le pourcentage de trafic poids lourds annuel de l'année n-2 de la section HIT (colonnes [316-318] du HIT) doit être renseigné".<br/>
	*/
	private static String messageSectionHitPcPLNmoins2Renseigne01;
	
	/**
	* message émis par la RG-SectionHit-PcPLNmoins2-02 : 
	* "le pourcentage de trafic poids lourds annuel de l'année n-2 de la section HIT (colonnes [316-318] du HIT) doit comporter exactement 3 chiffres".<br/>
	*/
	private static String messageSectionHitPcPLNmoins2Regex02;
	
	/**
	* message émis par la RG-SectionHit-PcPLNmoins2-03 : 
	* "le pourcentage de trafic poids lourds annuel de l'année n-2 de la section HIT (colonnes [316-318] du HIT) doit être homogène à un entier".<br/>
	*/
	private static String messageSectionHitPcPLNmoins2Numerique03;

	/* 82 - evaluationPLNmoins2. *******/
	/**
	* message émis par la RG-SectionHit-EvaluationPLNmoins2-01 : 
	* "l'évaluation des pourcentages de trafic poids lourds de l'année n-2 de la section HIT (colonne [319] du HIT) doit être renseigné".<br/>
	*/
	private static String messageSectionHitEvaluationPLNmoins2Renseigne01;
	
	/**
	* message émis par la RG-SectionHit-EvaluationPLNmoins2-02 : 
	* "l'évaluation des pourcentages de trafic poids lourds de l'année n-2 de la section HIT (colonne [319] du HIT) doit comporter exactement 1 caractère (ou espace)".<br/>
	*/
	private static String messageSectionHitEvaluationPLNmoins2Regex02;

	/* 83 - pcNuitAnnuelNmoins2. *******/
	/**
	* message émis par la RG-SectionHit-PcNuitAnnuelNmoins2-01 : 
	* "le pourcentage de trafic de nuit tous véhicules annuel de l'année n-2 de la section HIT (colonnes [320-322] du HIT) doit être renseigné".<br/>
	*/
	private static String messageSectionHitPcNuitAnnuelNmoins2Renseigne01;
	
	/**
	* message émis par la RG-SectionHit-PcNuitAnnuelNmoins2-02 : 
	* "le pourcentage de trafic de nuit tous véhicules annuel de l'année n-2 de la section HIT (colonnes [320-322] du HIT) doit comporter exactement 3 chiffres".<br/>
	*/
	private static String messageSectionHitPcNuitAnnuelNmoins2Regex02;
	
	/**
	* message émis par la RG-SectionHit-PcNuitAnnuelNmoins2-03 : 
	* "le pourcentage de trafic de nuit tous véhicules annuel de l'année n-2 de la section HIT (colonnes [320-322] du HIT) doit être homogène à un entier".<br/>
	*/
	private static String messageSectionHitPcNuitAnnuelNmoins2Numerique03;

	/* 84 - indiceFiabiliteMjaNmoins2. *******/
	/**
	* message émis par la RG-SectionHit-IndiceFiabiliteMjaNmoins2-01 : 
	* "l'indice de fiabilité de la TMJA de l'année n-2 de la section HIT (colonne [323] du HIT) doit être renseigné".<br/>
	*/
	private static String messageSectionHitIndiceFiabiliteMjaNmoins2Renseigne01;
	
	/**
	* message émis par la RG-SectionHit-IndiceFiabiliteMjaNmoins2-02 : 
	* "l'indice de fiabilité de la TMJA de l'année n-2 de la section HIT (colonne [323] du HIT) doit comporter exactement 1 caractère (ou espace)".<br/>
	*/
	private static String messageSectionHitIndiceFiabiliteMjaNmoins2Regex02;


	/* 85 - anneeNmoins3. *******/
	/**
	* message émis par la RG-SectionHit-AnneeNmoins3-01 : 
	* "l'année n-3 de la section HIT (colonnes [324-325] du HIT) doit être renseignée".<br/>
	*/
	private static String messageSectionHitAnneeNmoins3Renseigne01;
	
	/**
	* message émis par la RG-SectionHit-AnneeNmoins3-02 : 
	* "l'année n-3 de la section HIT (colonnes [324-325] du HIT) doit comporter exactement 2 chiffres".<br/>
	*/
	private static String messageSectionHitAnneeNmoins3Regex02;

	/* 86 - mjaNmoins3. *******/
	/**
	* message émis par la RG-SectionHit-MjaNmoins3-01 : 
	* "le trafic moyen journalier annuel de l'année n-3 de la section HIT (colonnes [326-331] du HIT) doit être renseigné".<br/>
	*/
	private static String messageSectionHitMjaNmoins3Renseigne01;
	
	/**
	* message émis par la RG-SectionHit-MjaNmoins3-02 : 
	* "le trafic moyen journalier annuel de l'année n-3 de la section HIT (colonnes [326-331] du HIT) doit comporter exactement 6 chiffres".<br/>
	*/
	private static String messageSectionHitMjaNmoins3Regex02;
	
	/**
	* message émis par la RG-SectionHit-MjaNmoins3-03 : 
	* "le trafic moyen journalier annuel de l'année n-3 de la section HIT (colonnes [326-331] du HIT) doit être homogène à un entier".<br/>
	*/
	private static String messageSectionHitMjaNmoins3Numerique03;

	/* 87 - typeComptageNmoins3. *******/
	/**
	* message émis par la RG-SectionHit-TypeComptageNmoins3-01 : 
	* "le type de comptage de l'année n-3 de la section HIT (colonnes [332] du HIT) doit être renseigné".<br/>
	*/
	private static String messageSectionHitTypeComptageNmoins3Renseigne01;
	
	/**
	* message émis par la RG-SectionHit-TypeComptageNmoins3-02 : 
	* "le type de comptage de l'année n-3 de la section HIT (colonnes [332] du HIT) doit comporter exactement 1 chiffre".<br/>
	*/
	private static String messageSectionHitTypeComptageNmoins3Regex02;

	/**
	 * message émis par la RG-SectionHit-TypeComptageNmoins3-03 : 
	 * "le type de comptage de l'année n-3 de la section HIT (colonnes [332] du HIT) doit respecter une nomenclature [1, 2, 3, 4, 5, 6, 7, 8, 9]"
	 */
	private static String messageSectionHitTypeComptageNmoins3Nomenclature03;

	/* 88 - modeCalculNmoins3. *******/
	/**
	* message émis par la RG-SectionHit-ModeCalculNmoins3-01 : 
	* "le mode de calcul des trafics de l'année n-3 de la section HIT (colonne [333] du HIT) doit être renseigné".<br/>
	*/
	private static String messageSectionHitModeCalculNmoins3Renseigne01;
	
	/**
	* message émis par la RG-SectionHit-ModeCalculNmoins3-02 : 
	* "le mode de calcul des trafics de l'année n-3 de la section HIT (colonne [333] du HIT) doit comporter exactement 1 caractère (ou espace)".<br/>
	*/
	private static String messageSectionHitModeCalculNmoins3Regex02;

	/* 89 - pcPLNmoins3. *******/
	/**
	* message émis par la RG-SectionHit-PcPLNmoins3-01 : 
	* "le pourcentage de trafic poids lourds annuel de l'année n-3 de la section HIT (colonnes [334-336] du HIT) doit être renseigné".<br/>
	*/
	private static String messageSectionHitPcPLNmoins3Renseigne01;
	
	/**
	* message émis par la RG-SectionHit-PcPLNmoins3-02 : 
	* "le pourcentage de trafic poids lourds annuel de l'année n-3 de la section HIT (colonnes [334-336] du HIT) doit comporter exactement 3 chiffres".<br/>
	*/
	private static String messageSectionHitPcPLNmoins3Regex02;
	
	/**
	* message émis par la RG-SectionHit-PcPLNmoins3-03 : 
	* "le pourcentage de trafic poids lourds annuel de l'année n-3 de la section HIT (colonnes [334-336] du HIT) doit être homogène à un entier".<br/>
	*/
	private static String messageSectionHitPcPLNmoins3Numerique03;

	/* 90 - evaluationPLNmoins3. *******/
	/**
	* message émis par la RG-SectionHit-EvaluationPLNmoins3-01 : 
	* "l'évaluation des pourcentages de trafic poids lourds de l'année n-3 de la section HIT (colonne [337] du HIT) doit être renseigné".<br/>
	*/
	private static String messageSectionHitEvaluationPLNmoins3Renseigne01;
	
	/**
	* message émis par la RG-SectionHit-EvaluationPLNmoins3-02 : 
	* "l'évaluation des pourcentages de trafic poids lourds de l'année n-3 de la section HIT (colonne [337] du HIT) doit comporter exactement 1 caractère (ou espace)".<br/>
	*/
	private static String messageSectionHitEvaluationPLNmoins3Regex02;

	/* 91 - pcNuitAnnuelNmoins3. *******/
	/**
	* message émis par la RG-SectionHit-PcNuitAnnuelNmoins3-01 : 
	* "le pourcentage de trafic de nuit tous véhicules annuel de l'année n-3 de la section HIT (colonnes [338-340] du HIT) doit être renseigné".<br/>
	*/
	private static String messageSectionHitPcNuitAnnuelNmoins3Renseigne01;
	
	/**
	* message émis par la RG-SectionHit-PcNuitAnnuelNmoins3-02 : 
	* "le pourcentage de trafic de nuit tous véhicules annuel de l'année n-3 de la section HIT (colonnes [338-340] du HIT) doit comporter exactement 3 chiffres".<br/>
	*/
	private static String messageSectionHitPcNuitAnnuelNmoins3Regex02;
	
	/**
	* message émis par la RG-SectionHit-PcNuitAnnuelNmoins3-03 : 
	* "le pourcentage de trafic de nuit tous véhicules annuel de l'année n-3 de la section HIT (colonnes [338-340] du HIT) doit être homogène à un entier".<br/>
	*/
	private static String messageSectionHitPcNuitAnnuelNmoins3Numerique03;

	/* 92 - indiceFiabiliteMjaNmoins3. *******/
	/**
	* message émis par la RG-SectionHit-IndiceFiabiliteMjaNmoins3-01 : 
	* "l'indice de fiabilité de la TMJA de l'année n-3 de la section HIT (colonne [341] du HIT) doit être renseigné".<br/>
	*/
	private static String messageSectionHitIndiceFiabiliteMjaNmoins3Renseigne01;
	
	/**
	* message émis par la RG-SectionHit-IndiceFiabiliteMjaNmoins3-02 : 
	* "l'indice de fiabilité de la TMJA de l'année n-3 de la section HIT (colonne [341] du HIT) doit comporter exactement 1 caractère (ou espace)".<br/>
	*/
	private static String messageSectionHitIndiceFiabiliteMjaNmoins3Regex02;


	/* 93 - anneeNmoins4. *******/
	/**
	* message émis par la RG-SectionHit-AnneeNmoins4-01 : 
	* "l'année n-4 de la section HIT (colonnes [342-343] du HIT) doit être renseignée".<br/>
	*/
	private static String messageSectionHitAnneeNmoins4Renseigne01;
	
	/**
	* message émis par la RG-SectionHit-AnneeNmoins4-02 : 
	* "l'année n-4 de la section HIT (colonnes [342-343] du HIT) doit comporter exactement 2 chiffres".<br/>
	*/
	private static String messageSectionHitAnneeNmoins4Regex02;

	/* 94 - mjaNmoins4. *******/
	/**
	* message émis par la RG-SectionHit-MjaNmoins4-01 : 
	* "le trafic moyen journalier annuel de l'année n-4 de la section HIT (colonnes [344-349] du HIT) doit être renseigné".<br/>
	*/
	private static String messageSectionHitMjaNmoins4Renseigne01;
	
	/**
	* message émis par la RG-SectionHit-MjaNmoins4-02 : 
	* "le trafic moyen journalier annuel de l'année n-4 de la section HIT (colonnes [344-349] du HIT) doit comporter exactement 6 chiffres".<br/>
	*/
	private static String messageSectionHitMjaNmoins4Regex02;
	
	/**
	* message émis par la RG-SectionHit-MjaNmoins4-03 : 
	* "le trafic moyen journalier annuel de l'année n-4 de la section HIT (colonnes [344-349] du HIT) doit être homogène à un entier".<br/>
	*/
	private static String messageSectionHitMjaNmoins4Numerique03;

	/* 95 - typeComptageNmoins4. *******/
	/**
	* message émis par la RG-SectionHit-TypeComptageNmoins4-01 : 
	* "le type de comptage de l'année n-4 de la section HIT (colonnes [350] du HIT) doit être renseigné".<br/>
	*/
	private static String messageSectionHitTypeComptageNmoins4Renseigne01;
	
	/**
	* message émis par la RG-SectionHit-TypeComptageNmoins4-02 : 
	* "le type de comptage de l'année n-4 de la section HIT (colonnes [350] du HIT) doit comporter exactement 1 chiffre".<br/>
	*/
	private static String messageSectionHitTypeComptageNmoins4Regex02;

	/**
	 * message émis par la RG-SectionHit-TypeComptageNmoins4-03 : 
	 * "le type de comptage de l'année n-4 de la section HIT (colonnes [350] du HIT) doit respecter une nomenclature [1, 2, 3, 4, 5, 6, 7, 8, 9]"
	 */
	private static String messageSectionHitTypeComptageNmoins4Nomenclature03;

	/* 96 - modeCalculNmoins4. *******/
	/**
	* message émis par la RG-SectionHit-ModeCalculNmoins4-01 : 
	* "le mode de calcul des trafics de l'année n-4 de la section HIT (colonne [351] du HIT) doit être renseigné".<br/>
	*/
	private static String messageSectionHitModeCalculNmoins4Renseigne01;
	
	/**
	* message émis par la RG-SectionHit-ModeCalculNmoins4-02 : 
	* "le mode de calcul des trafics de l'année n-4 de la section HIT (colonne [351] du HIT) doit comporter exactement 1 caractère (ou espace)".<br/>
	*/
	private static String messageSectionHitModeCalculNmoins4Regex02;

	/* 97 - pcPLNmoins4. *******/
	/**
	* message émis par la RG-SectionHit-PcPLNmoins4-01 : 
	* "le pourcentage de trafic poids lourds annuel de l'année n-4 de la section HIT (colonnes [352-354] du HIT) doit être renseigné".<br/>
	*/
	private static String messageSectionHitPcPLNmoins4Renseigne01;
	
	/**
	* message émis par la RG-SectionHit-PcPLNmoins4-02 : 
	* "le pourcentage de trafic poids lourds annuel de l'année n-4 de la section HIT (colonnes [352-354] du HIT) doit comporter exactement 3 chiffres".<br/>
	*/
	private static String messageSectionHitPcPLNmoins4Regex02;
	
	/**
	* message émis par la RG-SectionHit-PcPLNmoins4-03 : 
	* "le pourcentage de trafic poids lourds annuel de l'année n-4 de la section HIT (colonnes [352-354] du HIT) doit être homogène à un entier".<br/>
	*/
	private static String messageSectionHitPcPLNmoins4Numerique03;

	/* 98 - evaluationPLNmoins4. *******/
	/**
	* message émis par la RG-SectionHit-EvaluationPLNmoins4-01 : 
	* "l'évaluation des pourcentages de trafic poids lourds de l'année n-4 de la section HIT (colonne [355] du HIT) doit être renseigné".<br/>
	*/
	private static String messageSectionHitEvaluationPLNmoins4Renseigne01;
	
	/**
	* message émis par la RG-SectionHit-EvaluationPLNmoins4-02 : 
	* "l'évaluation des pourcentages de trafic poids lourds de l'année n-4 de la section HIT (colonne [355] du HIT) doit comporter exactement 1 caractère (ou espace)".<br/>
	*/
	private static String messageSectionHitEvaluationPLNmoins4Regex02;

	/* 99 - pcNuitAnnuelNmoins4. *******/
	/**
	* message émis par la RG-SectionHit-PcNuitAnnuelNmoins4-01 : 
	* "le pourcentage de trafic de nuit tous véhicules annuel de l'année n-4 de la section HIT (colonnes [356-358] du HIT) doit être renseigné".<br/>
	*/
	private static String messageSectionHitPcNuitAnnuelNmoins4Renseigne01;
	
	/**
	* message émis par la RG-SectionHit-PcNuitAnnuelNmoins4-02 : 
	* "le pourcentage de trafic de nuit tous véhicules annuel de l'année n-4 de la section HIT (colonnes [356-358] du HIT) doit comporter exactement 3 chiffres".<br/>
	*/
	private static String messageSectionHitPcNuitAnnuelNmoins4Regex02;
	
	/**
	* message émis par la RG-SectionHit-PcNuitAnnuelNmoins4-03 : 
	* "le pourcentage de trafic de nuit tous véhicules annuel de l'année n-4 de la section HIT (colonnes [356-358] du HIT) doit être homogène à un entier".<br/>
	*/
	private static String messageSectionHitPcNuitAnnuelNmoins4Numerique03;

	/* 100 - indiceFiabiliteMjaNmoins4. *******/
	/**
	* message émis par la RG-SectionHit-IndiceFiabiliteMjaNmoins4-01 : 
	* "l'indice de fiabilité de la TMJA de l'année n-4 de la section HIT (colonne [359] du HIT) doit être renseigné".<br/>
	*/
	private static String messageSectionHitIndiceFiabiliteMjaNmoins4Renseigne01;
	
	/**
	* message émis par la RG-SectionHit-IndiceFiabiliteMjaNmoins4-02 : 
	* "l'indice de fiabilité de la TMJA de l'année n-4 de la section HIT (colonne [359] du HIT) doit comporter exactement 1 caractère (ou espace)".<br/>
	*/
	private static String messageSectionHitIndiceFiabiliteMjaNmoins4Regex02;


	/* 101 - anneeNmoins5. *******/
	/**
	* message émis par la RG-SectionHit-AnneeNmoins5-01 : 
	* "l'année n-5 de la section HIT (colonnes [360-361] du HIT) doit être renseignée".<br/>
	*/
	private static String messageSectionHitAnneeNmoins5Renseigne01;
	
	/**
	* message émis par la RG-SectionHit-AnneeNmoins5-02 : 
	* "l'année n-5 de la section HIT (colonnes [360-361] du HIT) doit comporter exactement 2 chiffres".<br/>
	*/
	private static String messageSectionHitAnneeNmoins5Regex02;

	/* 102 - mjaNmoins5. *******/
	/**
	* message émis par la RG-SectionHit-MjaNmoins5-01 : 
	* "le trafic moyen journalier annuel de l'année n-5 de la section HIT (colonnes [362-367] du HIT) doit être renseigné".<br/>
	*/
	private static String messageSectionHitMjaNmoins5Renseigne01;
	
	/**
	* message émis par la RG-SectionHit-MjaNmoins5-02 : 
	* "le trafic moyen journalier annuel de l'année n-5 de la section HIT (colonnes [362-367] du HIT) doit comporter exactement 6 chiffres".<br/>
	*/
	private static String messageSectionHitMjaNmoins5Regex02;
	
	/**
	* message émis par la RG-SectionHit-MjaNmoins5-03 : 
	* "le trafic moyen journalier annuel de l'année n-5 de la section HIT (colonnes [362-367] du HIT) doit être homogène à un entier".<br/>
	*/
	private static String messageSectionHitMjaNmoins5Numerique03;

	/* 103 - typeComptageNmoins5. *******/
	/**
	* message émis par la RG-SectionHit-TypeComptageNmoins5-01 : 
	* "le type de comptage de l'année n-5 de la section HIT (colonnes [368] du HIT) doit être renseigné".<br/>
	*/
	private static String messageSectionHitTypeComptageNmoins5Renseigne01;
	
	/**
	* message émis par la RG-SectionHit-TypeComptageNmoins5-02 : 
	* "le type de comptage de l'année n-5 de la section HIT (colonnes [368] du HIT) doit comporter exactement 1 chiffre".<br/>
	*/
	private static String messageSectionHitTypeComptageNmoins5Regex02;

	/**
	 * message émis par la RG-SectionHit-TypeComptageNmoins5-03 : 
	 * "le type de comptage de l'année n-5 de la section HIT (colonnes [368] du HIT) doit respecter une nomenclature [1, 2, 3, 4, 5, 6, 7, 8, 9]"
	 */
	private static String messageSectionHitTypeComptageNmoins5Nomenclature03;

	/* 104 - modeCalculNmoins5. *******/
	/**
	* message émis par la RG-SectionHit-ModeCalculNmoins5-01 : 
	* "le mode de calcul des trafics de l'année n-5 de la section HIT (colonne [369] du HIT) doit être renseigné".<br/>
	*/
	private static String messageSectionHitModeCalculNmoins5Renseigne01;
	
	/**
	* message émis par la RG-SectionHit-ModeCalculNmoins5-02 : 
	* "le mode de calcul des trafics de l'année n-5 de la section HIT (colonne [369] du HIT) doit comporter exactement 1 caractère (ou espace)".<br/>
	*/
	private static String messageSectionHitModeCalculNmoins5Regex02;

	/* 105 - pcPLNmoins5. *******/
	/**
	* message émis par la RG-SectionHit-PcPLNmoins5-01 : 
	* "le pourcentage de trafic poids lourds annuel de l'année n-5 de la section HIT (colonnes [370-372] du HIT) doit être renseigné".<br/>
	*/
	private static String messageSectionHitPcPLNmoins5Renseigne01;
	
	/**
	* message émis par la RG-SectionHit-PcPLNmoins5-02 : 
	* "le pourcentage de trafic poids lourds annuel de l'année n-5 de la section HIT (colonnes [370-372] du HIT) doit comporter exactement 3 chiffres".<br/>
	*/
	private static String messageSectionHitPcPLNmoins5Regex02;
	
	/**
	* message émis par la RG-SectionHit-PcPLNmoins5-03 : 
	* "le pourcentage de trafic poids lourds annuel de l'année n-5 de la section HIT (colonnes [370-372] du HIT) doit être homogène à un entier".<br/>
	*/
	private static String messageSectionHitPcPLNmoins5Numerique03;

	/* 106 - evaluationPLNmoins5. *******/
	/**
	* message émis par la RG-SectionHit-EvaluationPLNmoins5-01 : 
	* "l'évaluation des pourcentages de trafic poids lourds de l'année n-5 de la section HIT (colonne [373] du HIT) doit être renseigné".<br/>
	*/
	private static String messageSectionHitEvaluationPLNmoins5Renseigne01;
	
	/**
	* message émis par la RG-SectionHit-EvaluationPLNmoins5-02 : 
	* "l'évaluation des pourcentages de trafic poids lourds de l'année n-5 de la section HIT (colonne [373] du HIT) doit comporter exactement 1 caractère (ou espace)".<br/>
	*/
	private static String messageSectionHitEvaluationPLNmoins5Regex02;

	/* 107 - pcNuitAnnuelNmoins5. *******/
	/**
	* message émis par la RG-SectionHit-PcNuitAnnuelNmoins5-01 : 
	* "le pourcentage de trafic de nuit tous véhicules annuel de l'année n-5 de la section HIT (colonnes [374-376] du HIT) doit être renseigné".<br/>
	*/
	private static String messageSectionHitPcNuitAnnuelNmoins5Renseigne01;
	
	/**
	* message émis par la RG-SectionHit-PcNuitAnnuelNmoins5-02 : 
	* "le pourcentage de trafic de nuit tous véhicules annuel de l'année n-5 de la section HIT (colonnes [374-376] du HIT) doit comporter exactement 3 chiffres".<br/>
	*/
	private static String messageSectionHitPcNuitAnnuelNmoins5Regex02;
	
	/**
	* message émis par la RG-SectionHit-PcNuitAnnuelNmoins5-03 : 
	* "le pourcentage de trafic de nuit tous véhicules annuel de l'année n-5 de la section HIT (colonnes [374-376] du HIT) doit être homogène à un entier".<br/>
	*/
	private static String messageSectionHitPcNuitAnnuelNmoins5Numerique03;

	/* 108 - indiceFiabiliteMjaNmoins5. *******/
	/**
	* message émis par la RG-SectionHit-IndiceFiabiliteMjaNmoins5-01 : 
	* "l'indice de fiabilité de la TMJA de l'année n-5 de la section HIT (colonne [377] du HIT) doit être renseigné".<br/>
	*/
	private static String messageSectionHitIndiceFiabiliteMjaNmoins5Renseigne01;
	
	/**
	* message émis par la RG-SectionHit-IndiceFiabiliteMjaNmoins5-02 : 
	* "l'indice de fiabilité de la TMJA de l'année n-5 de la section HIT (colonne [377] du HIT) doit comporter exactement 1 caractère (ou espace)".<br/>
	*/
	private static String messageSectionHitIndiceFiabiliteMjaNmoins5Regex02;

	
	/**
	 * LOG : Log : 
	 * Logger pour Log4j (utilisant commons-logging).
	 */
	@SuppressWarnings("unused")
	private static final Log LOG 
		= LogFactory.getLog(SectionHitGestionnairePreferencesControles.class);

	// *************************METHODES************************************/
	
	
	 /**
	 * CONSTRUCTEUR D'ARITE NULLE.<br/>
	 * private pour bloquer l'instanciation<br/>
	 */
	private SectionHitGestionnairePreferencesControles() {
		super();
	} // Fin de CONSTRUCTEUR D'ARITE NULLE.________________________________


	
	/**
	 * <b>sauvegarde sur disque un fichier
	 * <code>ressources_externes/preferences/metier/sections/ 
	 * SectionHit_CONTROLES.properties</code> initial</b> alimenté par des 
	 * propriétés [clé-valeur] <b>écrites en dur</b> 
	 * dans la présente classe.<br/>
	 * <ul>
	 * <li>remplit le java.util.Properties <code>preferences</code> 
	 * avec des [clé-valeur] stockées en dur dans la classe.</li>
	 * <li>crée le fichier properties contenant les préférences 
	 * <code>filePreferencesProperties</code> VIDE 
	 * sur le disque si il n'existe pas.</li>
	 * <li>remplit le fichier <code>filePreferencesProperties</code> 
	 * (SectionHit_CONTROLES.properties) 
	 * avec le contenu de <code>preferences</code> 
	 * ([clé-valeur] stockées en dur dans la classe).</li>
	 * <li>Ecrit en UTF8 le Properties <code>preferences</code> dans 
	 * le File <code>filePreferencesProperties</code> 
	 * modélisant le fichier SectionHit_CONTROLES.properties en positionnant 
	 * le <code>commentaire</code> au dessus.</li>
	 * <li>Utilise <code>preferences.store(writer, commentaire);</code> 
	 * avec un try-with-resource.</li>
	 * <li>ré-écrit (écrase) tout le fichier à chaque appel.</li>
	 * <li>trace EX_TEC_INITIALISATION_07.</li>
	 * </ul>
	 * <p>
	 * <img src="../../../../../../../../../../../javadoc/images/apptechnic/preferences/methode_creerFichierPropertiesInitial_activites.png" 
	 * alt="diagramme d'activités de la méthode creerFichierPropertiesInitial()" />
	 * </p>
	 * 
	 * @throws Exception 
	 */
	private static void creerFichierPropertiesInitial() 
											throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			/* remplit le Properties Java <code>preferences</code> 
			 * avec des [clé-valeur] stockées en dur dans la classe. */
			ajouterPropertiesEnDur();
			
			/* crée le fichier properties contenant les préférences 
			 * filePreferencesProperties VIDE sur le disque 
			 * si il n'existe pas. */
			creerFichierPreferencesPropertiesVide();
			
			/* remplit le fichier filePreferencesProperties avec 
			 * preferences. */
			enregistrerPreferencesDansFichierProperties();
						
		} // Fin du bloc synchronized.__________________
		
	} // Fin de creerFichierPropertiesInitial().___________________________

	

	/**
	 * <b>Ajoute des propriétés initiales stockées en dur</b> 
	 * dans la classe au java.util.Properties <b>preferences</b>.<br/>
	 */
	private static void ajouterPropertiesEnDur() {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			/* 1 - numDepartement. ***********/		
			/* ajoute le messageSectionHitNumDepartementRenseigne01 
			 * par défaut stocké en dur.*/
			preferences.setProperty(
					KEY_MESSAGE_SECTIONHIT_NUMDEPARTEMENT_RENSEIGNE_01
						, MESSAGE_SECTIONHIT_NUMDEPARTEMENT_RENSEIGNE_01_EN_DUR);
			
			/* ajoute le messageSectionHitNumDepartementRegex02 
			 * par défaut stocké en dur.*/
			preferences.setProperty(
					KEY_MESSAGE_SECTIONHIT_NUMDEPARTEMENT_REGEX_02
						, MESSAGE_SECTIONHIT_NUMDEPARTEMENT_REGEX_02_EN_DUR);
						
			/* 2 - numSection. **************/		
			/* ajoute le messageSectionHitNumSectionRenseigne01 
			 * par défaut stocké en dur.*/
			preferences.setProperty(
					KEY_MESSAGE_SECTIONHIT_NUMSECTION_RENSEIGNE_01
						, MESSAGE_SECTIONHIT_NUMSECTION_RENSEIGNE_01_EN_DUR);
			
			/* ajoute le messageSectionHitNumSectionRegex02 
			 * par défaut stocké en dur.*/
			preferences.setProperty(
					KEY_MESSAGE_SECTIONHIT_NUMSECTION_REGEX_02
						, MESSAGE_SECTIONHIT_NUMSECTION_REGEX_02_EN_DUR);
					
		/* 3 - sens. **************/		
		/* ajoute le messageSectionHitSensRenseigne01 
		 * par défaut stocké en dur.*/
		preferences.setProperty(
				KEY_MESSAGE_SECTIONHIT_SENS_RENSEIGNE_01
					, MESSAGE_SECTIONHIT_SENS_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitSensRegex02 
		 * par défaut stocké en dur.*/
		preferences.setProperty(
				KEY_MESSAGE_SECTIONHIT_SENS_REGEX_02
					, MESSAGE_SECTIONHIT_SENS_REGEX_02_EN_DUR);
		
		/* ajoute le messageSectionHitSensNomenclature03 
		 * par défaut stocké en dur.*/
		preferences.setProperty(
				KEY_MESSAGE_SECTIONHIT_SENS_NOMENCLATURE_03
					, MESSAGE_SECTIONHIT_SENS_NOMENCLATURE_03_EN_DUR);
				
		/* 4 - nature. **************/		
		/* ajoute le messageSectionHitNatureRenseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_NATURE_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_NATURE_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitNatureRegex02 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_NATURE_REGEX_02
				, MESSAGE_SECTIONHIT_NATURE_REGEX_02_EN_DUR);
		
		/* ajoute le messageSectionHitNatureNomenclature03 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_NATURE_NOMENCLATURE_03
				, MESSAGE_SECTIONHIT_NATURE_NOMENCLATURE_03_EN_DUR);
				
		/* 5 - classe. **************/		
		/* ajoute le messageSectionHitClasseRenseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_CLASSE_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_CLASSE_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitClasseRegex02 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_CLASSE_REGEX_02
				, MESSAGE_SECTIONHIT_CLASSE_REGEX_02_EN_DUR);
				
		/* 6 - anneeTraitement. *******/		
		/* ajoute le messageSectionHitAnneeTraitementRenseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_ANNEETRAITEMENT_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_ANNEETRAITEMENT_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitAnneeTraitementRegex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_ANNEETRAITEMENT_REGEX_02
				, MESSAGE_SECTIONHIT_ANNEETRAITEMENT_REGEX_02_EN_DUR);
				
		/* 7 - zoneLibre1. *******/		
		/* ajoute le messageSectionHitZoneLibre1Renseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_ZONELIBRE1_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_ZONELIBRE1_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitZoneLibre1Regex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_ZONELIBRE1_REGEX_02
				, MESSAGE_SECTIONHIT_ZONELIBRE1_REGEX_02_EN_DUR);
				
		/* 8 - numRoute. *******/		
		/* ajoute le messageSectionHitNumRouteRenseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_NUMROUTE_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_NUMROUTE_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitNumRouteRegex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_NUMROUTE_REGEX_02
				, MESSAGE_SECTIONHIT_NUMROUTE_REGEX_02_EN_DUR);
				
		/* 9 - indiceNumRoute. *******/		
		/* ajoute le messageSectionHitIndiceNumRouteRenseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_INDICENUMROUTE_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_INDICENUMROUTE_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitIndiceNumRouteRegex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_INDICENUMROUTE_REGEX_02
				, MESSAGE_SECTIONHIT_INDICENUMROUTE_REGEX_02_EN_DUR);
				
		/* 10 - indiceLettreRoute. *******/		
		/* ajoute le messageSectionHitIndiceLettreRouteRenseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_INDICELETTREROUTE_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_INDICELETTREROUTE_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitIndiceLettreRouteRegex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_INDICELETTREROUTE_REGEX_02
				, MESSAGE_SECTIONHIT_INDICELETTREROUTE_REGEX_02_EN_DUR);
				
		/* 11 - categorieAdminRoute. *******/		
		/* ajoute le messageSectionHitCategorieAdminRouteRenseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_CATEGORIEADMINROUTE_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_CATEGORIEADMINROUTE_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitCategorieAdminRouteRegex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_CATEGORIEADMINROUTE_REGEX_02
				, MESSAGE_SECTIONHIT_CATEGORIEADMINROUTE_REGEX_02_EN_DUR);
		
		/* ajoute le messageSectionHitCategorieAdminRouteNomenclature03 
		 * par défaut stocké en dur.*/
		preferences.setProperty(
				KEY_MESSAGE_SECTIONHIT_CATEGORIEADMINROUTE_NOMENCLATURE_03
					, MESSAGE_SECTIONHIT_CATEGORIEADMINROUTE_NOMENCLATURE_03_EN_DUR);
				
		/* 12 - typeComptage. *******/		
		/* ajoute le messageSectionHitTypeComptageRenseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_TYPECOMPTAGE_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_TYPECOMPTAGE_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitTypeComptageRegex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_TYPECOMPTAGE_REGEX_02
				, MESSAGE_SECTIONHIT_TYPECOMPTAGE_REGEX_02_EN_DUR);
		
		/* ajoute le messageSectionHitTypeComptageNomenclature03 
		 * par défaut stocké en dur.*/
		preferences.setProperty(
				KEY_MESSAGE_SECTIONHIT_TYPECOMPTAGE_NOMENCLATURE_03
					, MESSAGE_SECTIONHIT_TYPECOMPTAGE_NOMENCLATURE_03_EN_DUR);
				
		/* 13 - classementRoute. *******/		
		/* ajoute le messageSectionHitClassementRouteRenseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_CLASSEMENTROUTE_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_CLASSEMENTROUTE_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitClassementRouteRegex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_CLASSEMENTROUTE_REGEX_02
				, MESSAGE_SECTIONHIT_CLASSEMENTROUTE_REGEX_02_EN_DUR);
		
		/* ajoute le messageSectionHitClassementRouteNomenclature03 
		 * par défaut stocké en dur.*/
		preferences.setProperty(
				KEY_MESSAGE_SECTIONHIT_CLASSEMENTROUTE_NOMENCLATURE_03
					, MESSAGE_SECTIONHIT_CLASSEMENTROUTE_NOMENCLATURE_03_EN_DUR);
				
		/* 14 - classeLargeurChausseeU. *******/		
		/* ajoute le messageSectionHitClasseLargeurChausseeURenseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_CLASSELARGEURCHAUSSEEU_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_CLASSELARGEURCHAUSSEEU_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitClasseLargeurChausseeURegex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_CLASSELARGEURCHAUSSEEU_REGEX_02
				, MESSAGE_SECTIONHIT_CLASSELARGEURCHAUSSEEU_REGEX_02_EN_DUR);
		
		/* ajoute le messageSectionHitClasseLargeurChausseeUNomenclature03 
		 * par défaut stocké en dur.*/
		preferences.setProperty(
				KEY_MESSAGE_SECTIONHIT_CLASSELARGEURCHAUSSEEU_NOMENCLATURE_03
					, MESSAGE_SECTIONHIT_CLASSELARGEURCHAUSSEEU_NOMENCLATURE_03_EN_DUR);
				
		/* 15 - classeLargeurChausseesS. *******/		
		/* ajoute le messageSectionHitClasseLargeurChausseesSRenseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_CLASSELARGEURCHAUSSEESS_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_CLASSELARGEURCHAUSSEESS_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitClasseLargeurChausseesSRegex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_CLASSELARGEURCHAUSSEESS_REGEX_02
				, MESSAGE_SECTIONHIT_CLASSELARGEURCHAUSSEESS_REGEX_02_EN_DUR);
		
		/* ajoute le messageSectionHitClasseLargeurChausseesSNomenclature03 
		 * par défaut stocké en dur.*/
		preferences.setProperty(
				KEY_MESSAGE_SECTIONHIT_CLASSELARGEURCHAUSSEESS_NOMENCLATURE_03
					, MESSAGE_SECTIONHIT_CLASSELARGEURCHAUSSEESS_NOMENCLATURE_03_EN_DUR);
				
		/* 16 - typeReseau. *******/		
		/* ajoute le messageSectionHitTypeReseauRenseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_TYPERESEAU_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_TYPERESEAU_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitTypeReseauRegex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_TYPERESEAU_REGEX_02
				, MESSAGE_SECTIONHIT_TYPERESEAU_REGEX_02_EN_DUR);
		
		/* ajoute le messageSectionHitTypeReseauNomenclature03 
		 * par défaut stocké en dur.*/
		preferences.setProperty(
				KEY_MESSAGE_SECTIONHIT_TYPERESEAU_NOMENCLATURE_03
					, MESSAGE_SECTIONHIT_TYPERESEAU_NOMENCLATURE_03_EN_DUR);
				
		/* 17 - pRoupK. *******/		
		/* ajoute le messageSectionHitPRoupKRenseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_PROUPK_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_PROUPK_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitPRoupKRegex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_PROUPK_REGEX_02
				, MESSAGE_SECTIONHIT_PROUPK_REGEX_02_EN_DUR);
		
		/* ajoute le messageSectionHitPRoupKNomenclature03 
		 * par défaut stocké en dur.*/
		preferences.setProperty(
				KEY_MESSAGE_SECTIONHIT_PROUPK_NOMENCLATURE_03
					, MESSAGE_SECTIONHIT_PROUPK_NOMENCLATURE_03_EN_DUR);
				
		/* 18 - lieuDitOrigine. *******/		
		/* ajoute le messageSectionHitLieuDitOrigineRenseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_LIEUDITORIGINE_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_LIEUDITORIGINE_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitLieuDitOrigineRegex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_LIEUDITORIGINE_REGEX_02
				, MESSAGE_SECTIONHIT_LIEUDITORIGINE_REGEX_02_EN_DUR);
				
		/* 19 - prOrigine. *******/		
		/* ajoute le messageSectionHitPrOrigineRenseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_PRORIGINE_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_PRORIGINE_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitPrOrigineRegex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_PRORIGINE_REGEX_02
				, MESSAGE_SECTIONHIT_PRORIGINE_REGEX_02_EN_DUR);
		
		/* ajoute le messageSectionHitPrOrigineNumerique03
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_PRORIGINE_NUMERIQUE_03
				, MESSAGE_SECTIONHIT_PRORIGINE_NUMERIQUE_03_EN_DUR);
				
		/* 20 - absOrigine. *******/		
		/* ajoute le messageSectionHitAbsOrigineRenseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_ABSORIGINE_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_ABSORIGINE_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitAbsOrigineRegex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_ABSORIGINE_REGEX_02
				, MESSAGE_SECTIONHIT_ABSORIGINE_REGEX_02_EN_DUR);
		
		/* ajoute le messageSectionHitAbsOrigineNumerique03
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_ABSORIGINE_NUMERIQUE_03
				, MESSAGE_SECTIONHIT_ABSORIGINE_NUMERIQUE_03_EN_DUR);
				
		/* 21 - lieuDitExtremite. *******/		
		/* ajoute le messageSectionHitLieuDitExtremiteRenseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_LIEUDITEXTREMITE_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_LIEUDITEXTREMITE_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitLieuDitExtremiteRegex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_LIEUDITEXTREMITE_REGEX_02
				, MESSAGE_SECTIONHIT_LIEUDITEXTREMITE_REGEX_02_EN_DUR);
				
		/* 22 - prExtremite. *******/		
		/* ajoute le messageSectionHitPrExtremiteRenseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_PREXTREMITE_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_PREXTREMITE_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitPrExtremiteRegex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_PREXTREMITE_REGEX_02
				, MESSAGE_SECTIONHIT_PREXTREMITE_REGEX_02_EN_DUR);
		
		/* ajoute le messageSectionHitPrExtremiteNumerique03
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_PREXTREMITE_NUMERIQUE_03
				, MESSAGE_SECTIONHIT_PREXTREMITE_NUMERIQUE_03_EN_DUR);
				
		/* 23 - absExtremite. *******/		
		/* ajoute le messageSectionHitAbsExtremiteRenseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_ABSEXTREMITE_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_ABSEXTREMITE_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitAbsExtremiteRegex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_ABSEXTREMITE_REGEX_02
				, MESSAGE_SECTIONHIT_ABSEXTREMITE_REGEX_02_EN_DUR);
		
		/* ajoute le messageSectionHitAbsExtremiteNumerique03
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_ABSEXTREMITE_NUMERIQUE_03
				, MESSAGE_SECTIONHIT_ABSEXTREMITE_NUMERIQUE_03_EN_DUR);
				
		/* 24 - lieuDitComptage. *******/		
		/* ajoute le messageSectionHitLieuDitComptageRenseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_LIEUDITCOMPTAGE_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_LIEUDITCOMPTAGE_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitLieuDitComptageRegex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_LIEUDITCOMPTAGE_REGEX_02
				, MESSAGE_SECTIONHIT_LIEUDITCOMPTAGE_REGEX_02_EN_DUR);
				
		/* 25 - prComptage. *******/		
		/* ajoute le messageSectionHitPrComptageRenseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_PRCOMPTAGE_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_PRCOMPTAGE_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitPrComptageRegex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_PRCOMPTAGE_REGEX_02
				, MESSAGE_SECTIONHIT_PRCOMPTAGE_REGEX_02_EN_DUR);
		
		/* ajoute le messageSectionHitPrComptageNumerique03
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_PRCOMPTAGE_NUMERIQUE_03
				, MESSAGE_SECTIONHIT_PRCOMPTAGE_NUMERIQUE_03_EN_DUR);
				
		/* 26 - absComptage. *******/		
		/* ajoute le messageSectionHitAbsComptageRenseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_ABSCOMPTAGE_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_ABSCOMPTAGE_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitAbsComptageRegex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_ABSCOMPTAGE_REGEX_02
				, MESSAGE_SECTIONHIT_ABSCOMPTAGE_REGEX_02_EN_DUR);
		
		/* ajoute le messageSectionHitAbsComptageNumerique03
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_ABSCOMPTAGE_NUMERIQUE_03
				, MESSAGE_SECTIONHIT_ABSCOMPTAGE_NUMERIQUE_03_EN_DUR);
				
		/* 27 - longueurSection. *******/		
		/* ajoute le messageSectionHitLongueurSectionRenseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_LONGUEURSECTION_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_LONGUEURSECTION_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitLongueurSectionRegex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_LONGUEURSECTION_REGEX_02
				, MESSAGE_SECTIONHIT_LONGUEURSECTION_REGEX_02_EN_DUR);
		
		/* ajoute le messageSectionHitLongueurSectionNumerique03
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_LONGUEURSECTION_NUMERIQUE_03
				, MESSAGE_SECTIONHIT_LONGUEURSECTION_NUMERIQUE_03_EN_DUR);
				
		/* 28 - longueurRaseCampagne. *******/		
		/* ajoute le messageSectionHitLongueurRaseCampagneRenseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_LONGUEURRASECAMPAGNE_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_LONGUEURRASECAMPAGNE_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitLongueurRaseCampagneRegex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_LONGUEURRASECAMPAGNE_REGEX_02
				, MESSAGE_SECTIONHIT_LONGUEURRASECAMPAGNE_REGEX_02_EN_DUR);
		
		/* ajoute le messageSectionHitLongueurRaseCampagneNumerique03
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_LONGUEURRASECAMPAGNE_NUMERIQUE_03
				, MESSAGE_SECTIONHIT_LONGUEURRASECAMPAGNE_NUMERIQUE_03_EN_DUR);
				
		/* 29 - numDepartementRattachement. *******/		
		/* ajoute le messageSectionHitNumDepartementRattachementRenseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_NUMDEPARTEMENTRATTACHEMENT_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_NUMDEPARTEMENTRATTACHEMENT_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitNumDepartementRattachementRegex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_NUMDEPARTEMENTRATTACHEMENT_REGEX_02
				, MESSAGE_SECTIONHIT_NUMDEPARTEMENTRATTACHEMENT_REGEX_02_EN_DUR);
				
		/* 30 - numSectionRattachement. *******/		
		/* ajoute le messageSectionHitNumSectionRattachementRenseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_NUMSECTIONRATTACHEMENT_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_NUMSECTIONRATTACHEMENT_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitNumSectionRattachementRegex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_NUMSECTIONRATTACHEMENT_REGEX_02
				, MESSAGE_SECTIONHIT_NUMSECTIONRATTACHEMENT_REGEX_02_EN_DUR);
				
		/* 31 - sensRattachement. *******/		
		/* ajoute le messageSectionHitSensRattachementRenseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_SENSRATTACHEMENT_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_SENSRATTACHEMENT_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitSensRattachementRegex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_SENSRATTACHEMENT_REGEX_02
				, MESSAGE_SECTIONHIT_SENSRATTACHEMENT_REGEX_02_EN_DUR);
		
		/* ajoute le messageSectionHitSensRattachementNomenclature03 
		 * par défaut stocké en dur.*/
		preferences.setProperty(
				KEY_MESSAGE_SECTIONHIT_SENSRATTACHEMENT_NOMENCLATURE_03
					, MESSAGE_SECTIONHIT_SENSRATTACHEMENT_NOMENCLATURE_03_EN_DUR);
				
		/* 32 - numDepartementLimitrophe. *******/		
		/* ajoute le messageSectionHitNumDepartementLimitropheRenseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_NUMDEPARTEMENTLIMITROPHE_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_NUMDEPARTEMENTLIMITROPHE_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitNumDepartementLimitropheRegex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_NUMDEPARTEMENTLIMITROPHE_REGEX_02
				, MESSAGE_SECTIONHIT_NUMDEPARTEMENTLIMITROPHE_REGEX_02_EN_DUR);
				
		/* 33 - numSectionLimitrophe. *******/		
		/* ajoute le messageSectionHitNumSectionLimitropheRenseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_NUMSECTIONLIMITROPHE_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_NUMSECTIONLIMITROPHE_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitNumSectionLimitropheRegex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_NUMSECTIONLIMITROPHE_REGEX_02
				, MESSAGE_SECTIONHIT_NUMSECTIONLIMITROPHE_REGEX_02_EN_DUR);
				
		/* 34 - sensLimitrophe. *******/		
		/* ajoute le messageSectionHitSensLimitropheRenseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_SENSLIMITROPHE_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_SENSLIMITROPHE_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitSensLimitropheRegex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_SENSLIMITROPHE_REGEX_02
				, MESSAGE_SECTIONHIT_SENSLIMITROPHE_REGEX_02_EN_DUR);
		
		/* ajoute le messageSectionHitSensLimitropheNomenclature03 
		 * par défaut stocké en dur.*/
		preferences.setProperty(
				KEY_MESSAGE_SECTIONHIT_SENSLIMITROPHE_NOMENCLATURE_03
					, MESSAGE_SECTIONHIT_SENSLIMITROPHE_NOMENCLATURE_03_EN_DUR);
				
		/* 35 - moisSectionnement. *******/		
		/* ajoute le messageSectionHitMoisSectionnementRenseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_MOISSECTIONNEMENT_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_MOISSECTIONNEMENT_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitMoisSectionnementRegex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_MOISSECTIONNEMENT_REGEX_02
				, MESSAGE_SECTIONHIT_MOISSECTIONNEMENT_REGEX_02_EN_DUR);
				
		/* 36 - anneeSectionnement. *******/		
		/* ajoute le messageSectionHitAnneeSectionnementRenseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_ANNEESECTIONNEMENT_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_ANNEESECTIONNEMENT_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitAnneeSectionnementRegex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_ANNEESECTIONNEMENT_REGEX_02
				, MESSAGE_SECTIONHIT_ANNEESECTIONNEMENT_REGEX_02_EN_DUR);
				
		/* 37 - zoneLibre2. *******/		
		/* ajoute le messageSectionHitZoneLibre2Renseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_ZONELIBRE2_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_ZONELIBRE2_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitZoneLibre2Regex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_ZONELIBRE2_REGEX_02
				, MESSAGE_SECTIONHIT_ZONELIBRE2_REGEX_02_EN_DUR);
				
		/* 38 - mjaN. *******/		
		/* ajoute le messageSectionHitMjaNRenseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_MJAN_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_MJAN_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitMjaNRegex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_MJAN_REGEX_02
				, MESSAGE_SECTIONHIT_MJAN_REGEX_02_EN_DUR);
		
		/* ajoute le messageSectionHitMjaNNumerique03
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_MJAN_NUMERIQUE_03
				, MESSAGE_SECTIONHIT_MJAN_NUMERIQUE_03_EN_DUR);
				
		/* 39 - modeCalculN. *******/		
		/* ajoute le messageSectionHitModeCalculNRenseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_MODECALCULN_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_MODECALCULN_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitModeCalculNRegex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_MODECALCULN_REGEX_02
				, MESSAGE_SECTIONHIT_MODECALCULN_REGEX_02_EN_DUR);
				
		/* 40 - pcPLN. *******/		
		/* ajoute le messageSectionHitPcPLNRenseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_PCPLN_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_PCPLN_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitPcPLNRegex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_PCPLN_REGEX_02
				, MESSAGE_SECTIONHIT_PCPLN_REGEX_02_EN_DUR);
		
		/* ajoute le messageSectionHitPcPLNNumerique03
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_PCPLN_NUMERIQUE_03
				, MESSAGE_SECTIONHIT_PCPLN_NUMERIQUE_03_EN_DUR);
				
		/* 41 - evaluationPLN. *******/		
		/* ajoute le messageSectionHitEvaluationPLNRenseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_EVALUATIONPLN_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_EVALUATIONPLN_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitEvaluationPLNRegex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_EVALUATIONPLN_REGEX_02
				, MESSAGE_SECTIONHIT_EVALUATIONPLN_REGEX_02_EN_DUR);
				
		/* 42 - pcNuitAnnuelN. *******/		
		/* ajoute le messageSectionHitPcNuitAnnuelNRenseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_PCNUITANNUELN_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_PCNUITANNUELN_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitPcNuitAnnuelNRegex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_PCNUITANNUELN_REGEX_02
				, MESSAGE_SECTIONHIT_PCNUITANNUELN_REGEX_02_EN_DUR);
		
		/* ajoute le messageSectionHitPcNuitAnnuelNNumerique03
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_PCNUITANNUELN_NUMERIQUE_03
				, MESSAGE_SECTIONHIT_PCNUITANNUELN_NUMERIQUE_03_EN_DUR);
				
		/* 43 - indiceFiabiliteMjaN. *******/		
		/* ajoute le messageSectionHitIndiceFiabiliteMjaNRenseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_INDICEFIABLITEMJAN_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_INDICEFIABLITEMJAN_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitIndiceFiabiliteMjaNRegex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_INDICEFIABLITEMJAN_REGEX_02
				, MESSAGE_SECTIONHIT_INDICEFIABLITEMJAN_REGEX_02_EN_DUR);
				
		/* 44 - mjmNmois01. *******/		
		/* ajoute le messageSectionHitMjmNmois01Renseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_MJMNMOIS01_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_MJMNMOIS01_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitMjmNmois01Regex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_MJMNMOIS01_REGEX_02
				, MESSAGE_SECTIONHIT_MJMNMOIS01_REGEX_02_EN_DUR);
		
		/* ajoute le messageSectionHitMjmNmois01Numerique03
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_MJMNMOIS01_NUMERIQUE_03
				, MESSAGE_SECTIONHIT_MJMNMOIS01_NUMERIQUE_03_EN_DUR);
						
		/* 45 - pcNuitNmois01. *******/		
		/* ajoute le messageSectionHitPcNuitNmois01Renseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS01_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_PCNUITNMOIS01_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitPcNuitNmois01Regex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS01_REGEX_02
				, MESSAGE_SECTIONHIT_PCNUITNMOIS01_REGEX_02_EN_DUR);
		
		/* ajoute le messageSectionHitPcNuitNmois01Numerique03
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS01_NUMERIQUE_03
				, MESSAGE_SECTIONHIT_PCNUITNMOIS01_NUMERIQUE_03_EN_DUR);
				
		/* 46 - mjmNmois02. *******/		
		/* ajoute le messageSectionHitMjmNmois02Renseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_MJMNMOIS02_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_MJMNMOIS02_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitMjmNmois02Regex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_MJMNMOIS02_REGEX_02
				, MESSAGE_SECTIONHIT_MJMNMOIS02_REGEX_02_EN_DUR);
		
		/* ajoute le messageSectionHitMjmNmois02Numerique03
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_MJMNMOIS02_NUMERIQUE_03
				, MESSAGE_SECTIONHIT_MJMNMOIS02_NUMERIQUE_03_EN_DUR);
						
		/* 47 - pcNuitNmois02. *******/		
		/* ajoute le messageSectionHitPcNuitNmois02Renseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS02_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_PCNUITNMOIS02_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitPcNuitNmois02Regex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS02_REGEX_02
				, MESSAGE_SECTIONHIT_PCNUITNMOIS02_REGEX_02_EN_DUR);
		
		/* ajoute le messageSectionHitPcNuitNmois02Numerique03
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS02_NUMERIQUE_03
				, MESSAGE_SECTIONHIT_PCNUITNMOIS02_NUMERIQUE_03_EN_DUR);
				
		/* 48 - mjmNmois03. *******/		
		/* ajoute le messageSectionHitMjmNmois03Renseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_MJMNMOIS03_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_MJMNMOIS03_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitMjmNmois03Regex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_MJMNMOIS03_REGEX_02
				, MESSAGE_SECTIONHIT_MJMNMOIS03_REGEX_02_EN_DUR);
		
		/* ajoute le messageSectionHitMjmNmois03Numerique03
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_MJMNMOIS03_NUMERIQUE_03
				, MESSAGE_SECTIONHIT_MJMNMOIS03_NUMERIQUE_03_EN_DUR);
						
		/* 49 - pcNuitNmois03. *******/		
		/* ajoute le messageSectionHitPcNuitNmois03Renseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS03_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_PCNUITNMOIS03_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitPcNuitNmois03Regex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS03_REGEX_02
				, MESSAGE_SECTIONHIT_PCNUITNMOIS03_REGEX_02_EN_DUR);
		
		/* ajoute le messageSectionHitPcNuitNmois03Numerique03
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS03_NUMERIQUE_03
				, MESSAGE_SECTIONHIT_PCNUITNMOIS03_NUMERIQUE_03_EN_DUR);
				
		/* 50 - mjmNmois04. *******/		
		/* ajoute le messageSectionHitMjmNmois04Renseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_MJMNMOIS04_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_MJMNMOIS04_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitMjmNmois04Regex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_MJMNMOIS04_REGEX_02
				, MESSAGE_SECTIONHIT_MJMNMOIS04_REGEX_02_EN_DUR);
		
		/* ajoute le messageSectionHitMjmNmois04Numerique03
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_MJMNMOIS04_NUMERIQUE_03
				, MESSAGE_SECTIONHIT_MJMNMOIS04_NUMERIQUE_03_EN_DUR);
						
		/* 51 - pcNuitNmois04. *******/		
		/* ajoute le messageSectionHitPcNuitNmois04Renseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS04_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_PCNUITNMOIS04_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitPcNuitNmois04Regex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS04_REGEX_02
				, MESSAGE_SECTIONHIT_PCNUITNMOIS04_REGEX_02_EN_DUR);
		
		/* ajoute le messageSectionHitPcNuitNmois04Numerique03
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS04_NUMERIQUE_03
				, MESSAGE_SECTIONHIT_PCNUITNMOIS04_NUMERIQUE_03_EN_DUR);
		
				
		/* 52 - mjmNmois05. *******/		
		/* ajoute le messageSectionHitMjmNmois05Renseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_MJMNMOIS05_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_MJMNMOIS05_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitMjmNmois05Regex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_MJMNMOIS05_REGEX_02
				, MESSAGE_SECTIONHIT_MJMNMOIS05_REGEX_02_EN_DUR);
		
		/* ajoute le messageSectionHitMjmNmois05Numerique03
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_MJMNMOIS05_NUMERIQUE_03
				, MESSAGE_SECTIONHIT_MJMNMOIS05_NUMERIQUE_03_EN_DUR);
						
		/* 53 - pcNuitNmois05. *******/		
		/* ajoute le messageSectionHitPcNuitNmois05Renseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS05_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_PCNUITNMOIS05_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitPcNuitNmois05Regex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS05_REGEX_02
				, MESSAGE_SECTIONHIT_PCNUITNMOIS05_REGEX_02_EN_DUR);
		
		/* ajoute le messageSectionHitPcNuitNmois05Numerique03
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS05_NUMERIQUE_03
				, MESSAGE_SECTIONHIT_PCNUITNMOIS05_NUMERIQUE_03_EN_DUR);
		
				
		/* 54 - mjmNmois06. *******/		
		/* ajoute le messageSectionHitMjmNmois06Renseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_MJMNMOIS06_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_MJMNMOIS06_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitMjmNmois06Regex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_MJMNMOIS06_REGEX_02
				, MESSAGE_SECTIONHIT_MJMNMOIS06_REGEX_02_EN_DUR);
		
		/* ajoute le messageSectionHitMjmNmois06Numerique03
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_MJMNMOIS06_NUMERIQUE_03
				, MESSAGE_SECTIONHIT_MJMNMOIS06_NUMERIQUE_03_EN_DUR);
						
		/* 55 - pcNuitNmois06. *******/		
		/* ajoute le messageSectionHitPcNuitNmois06Renseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS06_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_PCNUITNMOIS06_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitPcNuitNmois06Regex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS06_REGEX_02
				, MESSAGE_SECTIONHIT_PCNUITNMOIS06_REGEX_02_EN_DUR);
		
		/* ajoute le messageSectionHitPcNuitNmois06Numerique03
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS06_NUMERIQUE_03
				, MESSAGE_SECTIONHIT_PCNUITNMOIS06_NUMERIQUE_03_EN_DUR);
		
				
		/* 56 - mjmNmois07. *******/		
		/* ajoute le messageSectionHitMjmNmois07Renseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_MJMNMOIS07_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_MJMNMOIS07_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitMjmNmois07Regex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_MJMNMOIS07_REGEX_02
				, MESSAGE_SECTIONHIT_MJMNMOIS07_REGEX_02_EN_DUR);
		
		/* ajoute le messageSectionHitMjmNmois07Numerique03
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_MJMNMOIS07_NUMERIQUE_03
				, MESSAGE_SECTIONHIT_MJMNMOIS07_NUMERIQUE_03_EN_DUR);
						
		/* 57 - pcNuitNmois07. *******/		
		/* ajoute le messageSectionHitPcNuitNmois07Renseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS07_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_PCNUITNMOIS07_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitPcNuitNmois07Regex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS07_REGEX_02
				, MESSAGE_SECTIONHIT_PCNUITNMOIS07_REGEX_02_EN_DUR);
		
		/* ajoute le messageSectionHitPcNuitNmois07Numerique03
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS07_NUMERIQUE_03
				, MESSAGE_SECTIONHIT_PCNUITNMOIS07_NUMERIQUE_03_EN_DUR);
		
				
		/* 58 - mjmNmois08. *******/		
		/* ajoute le messageSectionHitMjmNmois08Renseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_MJMNMOIS08_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_MJMNMOIS08_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitMjmNmois08Regex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_MJMNMOIS08_REGEX_02
				, MESSAGE_SECTIONHIT_MJMNMOIS08_REGEX_02_EN_DUR);
		
		/* ajoute le messageSectionHitMjmNmois08Numerique03
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_MJMNMOIS08_NUMERIQUE_03
				, MESSAGE_SECTIONHIT_MJMNMOIS08_NUMERIQUE_03_EN_DUR);
						
		/* 59 - pcNuitNmois08. *******/		
		/* ajoute le messageSectionHitPcNuitNmois08Renseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS08_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_PCNUITNMOIS08_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitPcNuitNmois08Regex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS08_REGEX_02
				, MESSAGE_SECTIONHIT_PCNUITNMOIS08_REGEX_02_EN_DUR);
		
		/* ajoute le messageSectionHitPcNuitNmois08Numerique03
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS08_NUMERIQUE_03
				, MESSAGE_SECTIONHIT_PCNUITNMOIS08_NUMERIQUE_03_EN_DUR);
		
				
		/* 60 - mjmNmois09. *******/		
		/* ajoute le messageSectionHitMjmNmois09Renseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_MJMNMOIS09_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_MJMNMOIS09_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitMjmNmois09Regex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_MJMNMOIS09_REGEX_02
				, MESSAGE_SECTIONHIT_MJMNMOIS09_REGEX_02_EN_DUR);
		
		/* ajoute le messageSectionHitMjmNmois09Numerique03
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_MJMNMOIS09_NUMERIQUE_03
				, MESSAGE_SECTIONHIT_MJMNMOIS09_NUMERIQUE_03_EN_DUR);
						
		/* 61 - pcNuitNmois09. *******/		
		/* ajoute le messageSectionHitPcNuitNmois09Renseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS09_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_PCNUITNMOIS09_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitPcNuitNmois09Regex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS09_REGEX_02
				, MESSAGE_SECTIONHIT_PCNUITNMOIS09_REGEX_02_EN_DUR);
		
		/* ajoute le messageSectionHitPcNuitNmois09Numerique03
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS09_NUMERIQUE_03
				, MESSAGE_SECTIONHIT_PCNUITNMOIS09_NUMERIQUE_03_EN_DUR);
		
				
		/* 62 - mjmNmois10. *******/		
		/* ajoute le messageSectionHitMjmNmois10Renseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_MJMNMOIS10_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_MJMNMOIS10_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitMjmNmois10Regex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_MJMNMOIS10_REGEX_02
				, MESSAGE_SECTIONHIT_MJMNMOIS10_REGEX_02_EN_DUR);
		
		/* ajoute le messageSectionHitMjmNmois10Numerique03
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_MJMNMOIS10_NUMERIQUE_03
				, MESSAGE_SECTIONHIT_MJMNMOIS10_NUMERIQUE_03_EN_DUR);
						
		/* 63 - pcNuitNmois10. *******/		
		/* ajoute le messageSectionHitPcNuitNmois10Renseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS10_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_PCNUITNMOIS10_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitPcNuitNmois10Regex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS10_REGEX_02
				, MESSAGE_SECTIONHIT_PCNUITNMOIS10_REGEX_02_EN_DUR);
		
		/* ajoute le messageSectionHitPcNuitNmois10Numerique03
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS10_NUMERIQUE_03
				, MESSAGE_SECTIONHIT_PCNUITNMOIS10_NUMERIQUE_03_EN_DUR);
		
				
		/* 64 - mjmNmois11. *******/		
		/* ajoute le messageSectionHitMjmNmois11Renseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_MJMNMOIS11_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_MJMNMOIS11_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitMjmNmois11Regex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_MJMNMOIS11_REGEX_02
				, MESSAGE_SECTIONHIT_MJMNMOIS11_REGEX_02_EN_DUR);
		
		/* ajoute le messageSectionHitMjmNmois11Numerique03
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_MJMNMOIS11_NUMERIQUE_03
				, MESSAGE_SECTIONHIT_MJMNMOIS11_NUMERIQUE_03_EN_DUR);
						
		/* 65 - pcNuitNmois11. *******/		
		/* ajoute le messageSectionHitPcNuitNmois11Renseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS11_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_PCNUITNMOIS11_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitPcNuitNmois11Regex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS11_REGEX_02
				, MESSAGE_SECTIONHIT_PCNUITNMOIS11_REGEX_02_EN_DUR);
		
		/* ajoute le messageSectionHitPcNuitNmois11Numerique03
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS11_NUMERIQUE_03
				, MESSAGE_SECTIONHIT_PCNUITNMOIS11_NUMERIQUE_03_EN_DUR);
		
				
		/* 66 - mjmNmois12. *******/		
		/* ajoute le messageSectionHitMjmNmois12Renseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_MJMNMOIS12_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_MJMNMOIS12_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitMjmNmois12Regex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_MJMNMOIS12_REGEX_02
				, MESSAGE_SECTIONHIT_MJMNMOIS12_REGEX_02_EN_DUR);
		
		/* ajoute le messageSectionHitMjmNmois12Numerique03
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_MJMNMOIS12_NUMERIQUE_03
				, MESSAGE_SECTIONHIT_MJMNMOIS12_NUMERIQUE_03_EN_DUR);
						
		/* 67 - pcNuitNmois12. *******/		
		/* ajoute le messageSectionHitPcNuitNmois12Renseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS12_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_PCNUITNMOIS12_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitPcNuitNmois12Regex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS12_REGEX_02
				, MESSAGE_SECTIONHIT_PCNUITNMOIS12_REGEX_02_EN_DUR);
		
		/* ajoute le messageSectionHitPcNuitNmois12Numerique03
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS12_NUMERIQUE_03
				, MESSAGE_SECTIONHIT_PCNUITNMOIS12_NUMERIQUE_03_EN_DUR);
				
		/* 68 - zoneLibre3. *******/		
		/* ajoute le messageSectionHitZoneLibre3Renseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_ZONELIBRE3_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_ZONELIBRE3_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitZoneLibre3Regex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_ZONELIBRE3_REGEX_02
				, MESSAGE_SECTIONHIT_ZONELIBRE3_REGEX_02_EN_DUR);
				
		/* 69 - anneeNmoins1. *******/		
		/* ajoute le messageSectionHitAnneeNmoins1Renseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_ANNEENMOINS1_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_ANNEENMOINS1_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitAnneeNmoins1Regex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_ANNEENMOINS1_REGEX_02
				, MESSAGE_SECTIONHIT_ANNEENMOINS1_REGEX_02_EN_DUR);	
				
		/* 70 - mjaNmoins1. *******/		
		/* ajoute le messageSectionHitMjaNmoins1Renseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_MJANMOINS1_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_MJANMOINS1_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitMjaNmoins1Regex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_MJANMOINS1_REGEX_02
				, MESSAGE_SECTIONHIT_MJANMOINS1_REGEX_02_EN_DUR);
		
		/* ajoute le messageSectionHitMjaNmoins1Numerique03
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_MJANMOINS1_NUMERIQUE_03
				, MESSAGE_SECTIONHIT_MJANMOINS1_NUMERIQUE_03_EN_DUR);
				
		/* 71 - typeComptageNmoins1. *******/		
		/* ajoute le messageSectionHitTypeComptageNmoins1Renseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS1_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS1_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitTypeComptageNmoins1Regex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS1_REGEX_02
				, MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS1_REGEX_02_EN_DUR);
		
		/* ajoute le messageSectionHitTypeComptageNmoins1Nomenclature03 
		 * par défaut stocké en dur.*/
		preferences.setProperty(
				KEY_MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS1_NOMENCLATURE_03
					, MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS1_NOMENCLATURE_03_EN_DUR);
				
		/* 72 - modeCalculNmoins1. *******/		
		/* ajoute le messageSectionHitModeCalculNmoins1Renseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_MODECALCULNMOINS1_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_MODECALCULNMOINS1_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitModeCalculNmoins1Regex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_MODECALCULNMOINS1_REGEX_02
				, MESSAGE_SECTIONHIT_MODECALCULNMOINS1_REGEX_02_EN_DUR);
				
		/* 73 - pcPLNmoins1. *******/		
		/* ajoute le messageSectionHitPcPLNmoins1Renseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_PCPLNMOINS1_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_PCPLNMOINS1_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitPcPLNmoins1Regex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_PCPLNMOINS1_REGEX_02
				, MESSAGE_SECTIONHIT_PCPLNMOINS1_REGEX_02_EN_DUR);
		
		/* ajoute le messageSectionHitPcPLNmoins1Numerique03
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_PCPLNMOINS1_NUMERIQUE_03
				, MESSAGE_SECTIONHIT_PCPLNMOINS1_NUMERIQUE_03_EN_DUR);
				
		/* 74 - evaluationPLNmoins1. *******/		
		/* ajoute le messageSectionHitEvaluationPLNmoins1Renseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_EVALUATIONPLNMOINS1_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_EVALUATIONPLNMOINS1_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitEvaluationPLNmoins1Regex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_EVALUATIONPLNMOINS1_REGEX_02
				, MESSAGE_SECTIONHIT_EVALUATIONPLNMOINS1_REGEX_02_EN_DUR);
				
		/* 75 - pcNuitAnnuelNmoins1. *******/		
		/* ajoute le messageSectionHitPcNuitAnnuelNmoins1Renseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS1_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS1_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitPcNuitAnnuelNmoins1Regex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS1_REGEX_02
				, MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS1_REGEX_02_EN_DUR);
		
		/* ajoute le messageSectionHitPcNuitAnnuelNmoins1Numerique03
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS1_NUMERIQUE_03
				, MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS1_NUMERIQUE_03_EN_DUR);
				
		/* 76 - indiceFiabiliteMjaNmoins1. *******/		
		/* ajoute le messageSectionHitIndiceFiabiliteMjaNmoins1Renseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_INDICEFIABLITEMJANMOINS1_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_INDICEFIABLITEMJANMOINS1_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitIndiceFiabiliteMjaNmoins1Regex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_INDICEFIABLITEMJANMOINS1_REGEX_02
				, MESSAGE_SECTIONHIT_INDICEFIABLITEMJANMOINS1_REGEX_02_EN_DUR);
				
		/* 77 - anneeNmoins2. *******/		
		/* ajoute le messageSectionHitAnneeNmoins2Renseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_ANNEENMOINS2_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_ANNEENMOINS2_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitAnneeNmoins2Regex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_ANNEENMOINS2_REGEX_02
				, MESSAGE_SECTIONHIT_ANNEENMOINS2_REGEX_02_EN_DUR);	
				
		/* 78 - mjaNmoins2. *******/		
		/* ajoute le messageSectionHitMjaNmoins2Renseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_MJANMOINS2_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_MJANMOINS2_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitMjaNmoins2Regex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_MJANMOINS2_REGEX_02
				, MESSAGE_SECTIONHIT_MJANMOINS2_REGEX_02_EN_DUR);
		
		/* ajoute le messageSectionHitMjaNmoins2Numerique03
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_MJANMOINS2_NUMERIQUE_03
				, MESSAGE_SECTIONHIT_MJANMOINS2_NUMERIQUE_03_EN_DUR);
				
		/* 79 - typeComptageNmoins2. *******/		
		/* ajoute le messageSectionHitTypeComptageNmoins2Renseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS2_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS2_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitTypeComptageNmoins2Regex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS2_REGEX_02
				, MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS2_REGEX_02_EN_DUR);
		
		/* ajoute le messageSectionHitTypeComptageNmoins2Nomenclature03 
		 * par défaut stocké en dur.*/
		preferences.setProperty(
				KEY_MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS2_NOMENCLATURE_03
					, MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS2_NOMENCLATURE_03_EN_DUR);
				
		/* 80 - modeCalculNmoins2. *******/		
		/* ajoute le messageSectionHitModeCalculNmoins2Renseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_MODECALCULNMOINS2_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_MODECALCULNMOINS2_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitModeCalculNmoins2Regex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_MODECALCULNMOINS2_REGEX_02
				, MESSAGE_SECTIONHIT_MODECALCULNMOINS2_REGEX_02_EN_DUR);
				
		/* 81 - pcPLNmoins2. *******/		
		/* ajoute le messageSectionHitPcPLNmoins2Renseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_PCPLNMOINS2_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_PCPLNMOINS2_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitPcPLNmoins2Regex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_PCPLNMOINS2_REGEX_02
				, MESSAGE_SECTIONHIT_PCPLNMOINS2_REGEX_02_EN_DUR);
		
		/* ajoute le messageSectionHitPcPLNmoins2Numerique03
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_PCPLNMOINS2_NUMERIQUE_03
				, MESSAGE_SECTIONHIT_PCPLNMOINS2_NUMERIQUE_03_EN_DUR);
				
		/* 82 - evaluationPLNmoins2. *******/		
		/* ajoute le messageSectionHitEvaluationPLNmoins2Renseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_EVALUATIONPLNMOINS2_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_EVALUATIONPLNMOINS2_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitEvaluationPLNmoins2Regex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_EVALUATIONPLNMOINS2_REGEX_02
				, MESSAGE_SECTIONHIT_EVALUATIONPLNMOINS2_REGEX_02_EN_DUR);
				
		/* 83 - pcNuitAnnuelNmoins2. *******/		
		/* ajoute le messageSectionHitPcNuitAnnuelNmoins2Renseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS2_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS2_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitPcNuitAnnuelNmoins2Regex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS2_REGEX_02
				, MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS2_REGEX_02_EN_DUR);
		
		/* ajoute le messageSectionHitPcNuitAnnuelNmoins2Numerique03
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS2_NUMERIQUE_03
				, MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS2_NUMERIQUE_03_EN_DUR);
				
		/* 84 - indiceFiabiliteMjaNmoins2. *******/		
		/* ajoute le messageSectionHitIndiceFiabiliteMjaNmoins2Renseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_INDICEFIABLITEMJANMOINS2_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_INDICEFIABLITEMJANMOINS2_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitIndiceFiabiliteMjaNmoins2Regex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_INDICEFIABLITEMJANMOINS2_REGEX_02
				, MESSAGE_SECTIONHIT_INDICEFIABLITEMJANMOINS2_REGEX_02_EN_DUR);
		
				
		/* 85 - anneeNmoins3. *******/		
		/* ajoute le messageSectionHitAnneeNmoins3Renseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_ANNEENMOINS3_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_ANNEENMOINS3_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitAnneeNmoins3Regex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_ANNEENMOINS3_REGEX_02
				, MESSAGE_SECTIONHIT_ANNEENMOINS3_REGEX_02_EN_DUR);	
				
		/* 86 - mjaNmoins3. *******/		
		/* ajoute le messageSectionHitMjaNmoins3Renseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_MJANMOINS3_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_MJANMOINS3_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitMjaNmoins3Regex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_MJANMOINS3_REGEX_02
				, MESSAGE_SECTIONHIT_MJANMOINS3_REGEX_02_EN_DUR);
		
		/* ajoute le messageSectionHitMjaNmoins3Numerique03
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_MJANMOINS3_NUMERIQUE_03
				, MESSAGE_SECTIONHIT_MJANMOINS3_NUMERIQUE_03_EN_DUR);
				
		/* 87 - typeComptageNmoins3. *******/		
		/* ajoute le messageSectionHitTypeComptageNmoins3Renseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS3_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS3_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitTypeComptageNmoins3Regex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS3_REGEX_02
				, MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS3_REGEX_02_EN_DUR);
		
		/* ajoute le messageSectionHitTypeComptageNmoins3Nomenclature03 
		 * par défaut stocké en dur.*/
		preferences.setProperty(
				KEY_MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS3_NOMENCLATURE_03
					, MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS3_NOMENCLATURE_03_EN_DUR);
				
		/* 88 - modeCalculNmoins3. *******/		
		/* ajoute le messageSectionHitModeCalculNmoins3Renseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_MODECALCULNMOINS3_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_MODECALCULNMOINS3_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitModeCalculNmoins3Regex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_MODECALCULNMOINS3_REGEX_02
				, MESSAGE_SECTIONHIT_MODECALCULNMOINS3_REGEX_02_EN_DUR);
				
		/* 89 - pcPLNmoins3. *******/		
		/* ajoute le messageSectionHitPcPLNmoins3Renseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_PCPLNMOINS3_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_PCPLNMOINS3_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitPcPLNmoins3Regex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_PCPLNMOINS3_REGEX_02
				, MESSAGE_SECTIONHIT_PCPLNMOINS3_REGEX_02_EN_DUR);
		
		/* ajoute le messageSectionHitPcPLNmoins3Numerique03
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_PCPLNMOINS3_NUMERIQUE_03
				, MESSAGE_SECTIONHIT_PCPLNMOINS3_NUMERIQUE_03_EN_DUR);
				
		/* 90 - evaluationPLNmoins3. *******/		
		/* ajoute le messageSectionHitEvaluationPLNmoins3Renseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_EVALUATIONPLNMOINS3_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_EVALUATIONPLNMOINS3_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitEvaluationPLNmoins3Regex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_EVALUATIONPLNMOINS3_REGEX_02
				, MESSAGE_SECTIONHIT_EVALUATIONPLNMOINS3_REGEX_02_EN_DUR);
				
		/* 91 - pcNuitAnnuelNmoins3. *******/		
		/* ajoute le messageSectionHitPcNuitAnnuelNmoins3Renseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS3_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS3_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitPcNuitAnnuelNmoins3Regex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS3_REGEX_02
				, MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS3_REGEX_02_EN_DUR);
		
		/* ajoute le messageSectionHitPcNuitAnnuelNmoins3Numerique03
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS3_NUMERIQUE_03
				, MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS3_NUMERIQUE_03_EN_DUR);
				
		/* 92 - indiceFiabiliteMjaNmoins3. *******/		
		/* ajoute le messageSectionHitIndiceFiabiliteMjaNmoins3Renseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_INDICEFIABLITEMJANMOINS3_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_INDICEFIABLITEMJANMOINS3_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitIndiceFiabiliteMjaNmoins3Regex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_INDICEFIABLITEMJANMOINS3_REGEX_02
				, MESSAGE_SECTIONHIT_INDICEFIABLITEMJANMOINS3_REGEX_02_EN_DUR);
		
				
		/* 93 - anneeNmoins4. *******/		
		/* ajoute le messageSectionHitAnneeNmoins4Renseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_ANNEENMOINS4_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_ANNEENMOINS4_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitAnneeNmoins4Regex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_ANNEENMOINS4_REGEX_02
				, MESSAGE_SECTIONHIT_ANNEENMOINS4_REGEX_02_EN_DUR);	
				
		/* 94 - mjaNmoins4. *******/		
		/* ajoute le messageSectionHitMjaNmoins4Renseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_MJANMOINS4_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_MJANMOINS4_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitMjaNmoins4Regex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_MJANMOINS4_REGEX_02
				, MESSAGE_SECTIONHIT_MJANMOINS4_REGEX_02_EN_DUR);
		
		/* ajoute le messageSectionHitMjaNmoins4Numerique03
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_MJANMOINS4_NUMERIQUE_03
				, MESSAGE_SECTIONHIT_MJANMOINS4_NUMERIQUE_03_EN_DUR);
				
		/* 95 - typeComptageNmoins4. *******/		
		/* ajoute le messageSectionHitTypeComptageNmoins4Renseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS4_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS4_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitTypeComptageNmoins4Regex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS4_REGEX_02
				, MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS4_REGEX_02_EN_DUR);
		
		/* ajoute le messageSectionHitTypeComptageNmoins4Nomenclature03 
		 * par défaut stocké en dur.*/
		preferences.setProperty(
				KEY_MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS4_NOMENCLATURE_03
					, MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS4_NOMENCLATURE_03_EN_DUR);
				
		/* 96 - modeCalculNmoins4. *******/		
		/* ajoute le messageSectionHitModeCalculNmoins4Renseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_MODECALCULNMOINS4_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_MODECALCULNMOINS4_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitModeCalculNmoins4Regex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_MODECALCULNMOINS4_REGEX_02
				, MESSAGE_SECTIONHIT_MODECALCULNMOINS4_REGEX_02_EN_DUR);
				
		/* 97 - pcPLNmoins4. *******/		
		/* ajoute le messageSectionHitPcPLNmoins4Renseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_PCPLNMOINS4_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_PCPLNMOINS4_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitPcPLNmoins4Regex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_PCPLNMOINS4_REGEX_02
				, MESSAGE_SECTIONHIT_PCPLNMOINS4_REGEX_02_EN_DUR);
		
		/* ajoute le messageSectionHitPcPLNmoins4Numerique03
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_PCPLNMOINS4_NUMERIQUE_03
				, MESSAGE_SECTIONHIT_PCPLNMOINS4_NUMERIQUE_03_EN_DUR);
				
		/* 98 - evaluationPLNmoins4. *******/		
		/* ajoute le messageSectionHitEvaluationPLNmoins4Renseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_EVALUATIONPLNMOINS4_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_EVALUATIONPLNMOINS4_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitEvaluationPLNmoins4Regex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_EVALUATIONPLNMOINS4_REGEX_02
				, MESSAGE_SECTIONHIT_EVALUATIONPLNMOINS4_REGEX_02_EN_DUR);
				
		/* 99 - pcNuitAnnuelNmoins4. *******/		
		/* ajoute le messageSectionHitPcNuitAnnuelNmoins4Renseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS4_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS4_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitPcNuitAnnuelNmoins4Regex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS4_REGEX_02
				, MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS4_REGEX_02_EN_DUR);
		
		/* ajoute le messageSectionHitPcNuitAnnuelNmoins4Numerique03
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS4_NUMERIQUE_03
				, MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS4_NUMERIQUE_03_EN_DUR);
				
		/* 100 - indiceFiabiliteMjaNmoins4. *******/		
		/* ajoute le messageSectionHitIndiceFiabiliteMjaNmoins4Renseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_INDICEFIABLITEMJANMOINS4_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_INDICEFIABLITEMJANMOINS4_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitIndiceFiabiliteMjaNmoins4Regex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_INDICEFIABLITEMJANMOINS4_REGEX_02
				, MESSAGE_SECTIONHIT_INDICEFIABLITEMJANMOINS4_REGEX_02_EN_DUR);
		
				
		/* 101 - anneeNmoins5. *******/		
		/* ajoute le messageSectionHitAnneeNmoins5Renseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_ANNEENMOINS5_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_ANNEENMOINS5_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitAnneeNmoins5Regex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_ANNEENMOINS5_REGEX_02
				, MESSAGE_SECTIONHIT_ANNEENMOINS5_REGEX_02_EN_DUR);	
				
		/* 102 - mjaNmoins5. *******/		
		/* ajoute le messageSectionHitMjaNmoins5Renseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_MJANMOINS5_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_MJANMOINS5_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitMjaNmoins5Regex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_MJANMOINS5_REGEX_02
				, MESSAGE_SECTIONHIT_MJANMOINS5_REGEX_02_EN_DUR);
		
		/* ajoute le messageSectionHitMjaNmoins5Numerique03
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_MJANMOINS5_NUMERIQUE_03
				, MESSAGE_SECTIONHIT_MJANMOINS5_NUMERIQUE_03_EN_DUR);
				
		/* 103 - typeComptageNmoins5. *******/		
		/* ajoute le messageSectionHitTypeComptageNmoins5Renseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS5_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS5_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitTypeComptageNmoins5Regex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS5_REGEX_02
				, MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS5_REGEX_02_EN_DUR);
		
		/* ajoute le messageSectionHitTypeComptageNmoins5Nomenclature03 
		 * par défaut stocké en dur.*/
		preferences.setProperty(
				KEY_MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS5_NOMENCLATURE_03
					, MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS5_NOMENCLATURE_03_EN_DUR);
				
		/* 104 - modeCalculNmoins5. *******/		
		/* ajoute le messageSectionHitModeCalculNmoins5Renseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_MODECALCULNMOINS5_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_MODECALCULNMOINS5_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitModeCalculNmoins5Regex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_MODECALCULNMOINS5_REGEX_02
				, MESSAGE_SECTIONHIT_MODECALCULNMOINS5_REGEX_02_EN_DUR);
				
		/* 105 - pcPLNmoins5. *******/		
		/* ajoute le messageSectionHitPcPLNmoins5Renseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_PCPLNMOINS5_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_PCPLNMOINS5_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitPcPLNmoins5Regex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_PCPLNMOINS5_REGEX_02
				, MESSAGE_SECTIONHIT_PCPLNMOINS5_REGEX_02_EN_DUR);
		
		/* ajoute le messageSectionHitPcPLNmoins5Numerique03
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_PCPLNMOINS5_NUMERIQUE_03
				, MESSAGE_SECTIONHIT_PCPLNMOINS5_NUMERIQUE_03_EN_DUR);
				
		/* 106 - evaluationPLNmoins5. *******/		
		/* ajoute le messageSectionHitEvaluationPLNmoins5Renseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_EVALUATIONPLNMOINS5_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_EVALUATIONPLNMOINS5_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitEvaluationPLNmoins5Regex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_EVALUATIONPLNMOINS5_REGEX_02
				, MESSAGE_SECTIONHIT_EVALUATIONPLNMOINS5_REGEX_02_EN_DUR);
				
		/* 107 - pcNuitAnnuelNmoins5. *******/		
		/* ajoute le messageSectionHitPcNuitAnnuelNmoins5Renseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS5_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS5_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitPcNuitAnnuelNmoins5Regex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS5_REGEX_02
				, MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS5_REGEX_02_EN_DUR);
		
		/* ajoute le messageSectionHitPcNuitAnnuelNmoins5Numerique03
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS5_NUMERIQUE_03
				, MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS5_NUMERIQUE_03_EN_DUR);
				
		/* 108 - indiceFiabiliteMjaNmoins5. *******/		
		/* ajoute le messageSectionHitIndiceFiabiliteMjaNmoins5Renseigne01 
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_INDICEFIABLITEMJANMOINS5_RENSEIGNE_01
				, MESSAGE_SECTIONHIT_INDICEFIABLITEMJANMOINS5_RENSEIGNE_01_EN_DUR);
		
		/* ajoute le messageSectionHitIndiceFiabiliteMjaNmoins5Regex02
		* par défaut stocké en dur.*/
		preferences.setProperty(
			KEY_MESSAGE_SECTIONHIT_INDICEFIABLITEMJANMOINS5_REGEX_02
				, MESSAGE_SECTIONHIT_INDICEFIABLITEMJANMOINS5_REGEX_02_EN_DUR);
		
		} // Fin du bloc synchronized.__________________
		
	} // Fin de ajouterProperties()._______________________________________
	

	
	/**
	 * <b>Instancie tous les attributs</b> relatifs 
	 * au fichier de preferences <b>si ils sont null</b>.<br/>
	 * <ul>
	 * <li>instancie <code>pathAbsoluPreferencesProperties</code> 
	 * si nécessaire.</li>
	 * <li>instancie <code>filePreferencesProperties</code> 
	 * si nécessaire.</li>
	 * <li>instancie <code>commentaire</code> si nécessaire.</li>
	 * </ul>
	 *
	 * @throws Exception
	 */
	private static void instancierAttributsStatiques() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			/* instancie pathAbsoluPreferencesProperties si nécessaire. */
			instancierPathAbsoluPreferencesProperties();
			
			/* instancie filePreferencesProperties si nécessaire. */
			instancierFilePreferencesProperties();
			
			/* instancie commentaire si nécesaire. */
			instancierCommentaire();
						
		} // Fin du bloc synchronized.__________________
		
	} // Fin de instancierAttributsFichierProperties().____________________
	

	
	/**
	 * instancie <code>pathAbsoluPreferencesProperties</code>.<br/>
	 * <ul>
	 * <li>ne fait rien si pathAbsoluPreferencesProperties 
	 * n'est pas null.</li>
	 * <li>obtient le path des ressources externes auprès 
	 * du ConfigurationApplicationManager.</li>
	 * <li>calcule le path du SectionHit_CONTROLES.properties 
	 * via un resolve par rapport au path des ressources externes.</li>
	 * <li>alimente <code>pathAbsoluPreferencesProperties</code></li>
	 * </ul>
	 *
	 * @throws Exception
	 */
	private static void instancierPathAbsoluPreferencesProperties() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			/* ne fait rien si pathAbsoluPreferencesProperties 
			 * n'est pas null. */
			if (pathAbsoluPreferencesProperties == null) {
				
				/* obtient le path du properties dans les 
				 * ressources externes auprès du 
				 * ConfigurationApplicationManager. */
				final Path pathRessourcesExternes 
				= Paths.get(ConfigurationApplicationManager
						.getPathRessourcesExternes());
				
				/* calcule le path du SectionHit_CONTROLES.properties 
				 * via un resolve par rapport au path 
				 * des ressources externes. */
				pathAbsoluPreferencesProperties 
				= pathRessourcesExternes
					.resolve(CHEMIN_RELATIF_PREFERENCES_PROPERTIES_STRING)
						.toAbsolutePath()
							.normalize();
			}

		} // Fin du bloc synchronized.__________________
			
	} // Fin de instancierPathAbsoluPreferencesProperties()._______________
	

	
	/**
	 * instancie <code>filePreferencesProperties</code>.<br/>
	 * <ul>
	 * <li>ne fait rien si filePreferencesProperties n'est pas null.</li>
	 * <li>instancie <code>pathAbsoluPreferencesProperties</code> 
	 * si nécessaire.</li>
	 * <li>alimente <code>filePreferencesProperties</code>.</li>
	 * </ul>
	 *
	 * @throws Exception
	 */
	private static void instancierFilePreferencesProperties() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			/* ne fait rien si filePreferencesProperties 
			 * n'est pas null. */
			if (filePreferencesProperties == null) {
				
				/* instancie pathAbsoluPreferencesProperties 
				 * si nécessaire. */
				instancierPathAbsoluPreferencesProperties();
				
				/* alimente filePreferencesProperties. */
				filePreferencesProperties 
					= pathAbsoluPreferencesProperties.toFile();
				
			}
						
		} // Fin du bloc synchronized.__________________		
		
	} // Fin de instancierFilePreferencesProperties()._____________________
	

	
	/**
	 * instancie <code>commentaire</code>.<br/>
	 * <ul>
	 * <li>ne fait rien si commentaire n'est pas null.</li>
	 * <li>lit dans un template le commentaire à ajouter 
	 * au début du fichier properties contenant les preferences.</li>
	 * <li>alimente <code>commentaire</code>.</li>
	 * </ul>
	 *
	 * @throws Exception
	 */
	private static void instancierCommentaire() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			/* ne fait rien si commentaire n'est pas null. */
			if (commentaire == null) {
				
				/* lit dans un template le commentaire à ajouter au début du 
				 * SectionHit_CONTROLES.properties et le stocke 
				 * dans commentaire.*/
				commentaire 
					= lireTemplateString(CHEMIN_RELATIF_TEMPLATE_COMMENTAIRE);
			}
		} // Fin du bloc synchronized.__________________	
		
	} // Fin de instancierCommentaire().___________________________________
	
	
	
	/**
	 * Crée sur disque dur l'arborescence des répertoires 
	 * parent de pFile si elle n'existe pas déjà.<br/>
	 * <ul>
	 * <li><code>Files.createDirectories(pathParent);</code></li>
	 * </ul>
	 * - ne fait rien si pFile == null.<br/>
	 * - ne fait rien si pFile est une racine (pas de parent).<br/>
	 * </br/>
	 *
	 * @param pFile : File : 
	 * fichier dont on veut créer l'arborescence sur disque dur.<br/>
	 * 
	 * @throws IOException
	 */
	private static void creerRepertoiresArbo(
			final File pFile) throws IOException {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			/* ne fait rien si pFile == null. */
			if (pFile == null) {
				return;
			}
			
			final Path pathFile = pFile.toPath();
			final Path pathParent = pathFile.getParent();
			
			/* ne fait rien si pFile est une racine (pas de parent). */
			if (pathParent != null) {
				Files.createDirectories(pathParent);
			}

		} // Fin du bloc synchronized.__________________
						
	} // Fin de creerRepertoiresArbo(...)._________________________________
	

	
	/**
	 * crée sur disque le fichier properties contenant les preferences
	 * <code>SectionHit_CONTROLES.properties</code> <b>VIDE</b> 
	 * <i>si il n'existe pas déjà</i>.<br/>
	 * <ul>
	 * <li>crée l'arboresence parente du fichier properties 
	 * si elle n'existe pas déjà.</li>
	 * <li>crée le fichier properties VIDE 
	 * (<code>Files.createFile(Path ...)</code>).</li>
	 * </ul>
	 *
	 * @throws Exception
	 */
	private static void creerFichierPreferencesPropertiesVide() 
													throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			/* Crée sur le disque dur l'arborescence et le fichier 
			 * filePreferencesProperties VIDE si nécessaire.*/
			if (!filePreferencesProperties.exists()) {
				
				/* crée l'arboresence parente du fichier properties 
				 * si elle n'existe pas déjà. */
				creerRepertoiresArbo(filePreferencesProperties);
				
				/* crée le fichier properties VIDE. */
				Files.createFile(pathAbsoluPreferencesProperties);
			}
			
		} // Fin du bloc synchronized.__________________
				
	} // Fin de creerFichierPreferencesPropertiesVide().___________________
	
	
	
	/**
	 * <b>lit en UTF-8 le fichier properties contenant les preferences 
	 * <code>ressources_externes/preferences/metier/utilisateurs/
	 * SectionHit_CONTROLES.properties</b></code> 
	 * et alimente le <i>java.util.Properties</i> <b>preferences</b>.<br/>
	 * <ul>
	 * <li>décode le fichier .properties en UTF8 et le charge 
	 * dans le java.util.Properties <code>preferences</code>.</li>
	 * <li><code>preferences.load(BufferedReader);</code></li>
	 * <li>trace EX_TEC_PARAMETRAGE_02.</li>
	 * </ul>
	 * @throws Exception 
	 */
	private static void lireFichierPreferencesProperties() 
												throws Exception {

		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			/* try-with-resource qui se charge du close(). */
			try (Reader reader = Files.newBufferedReader(
					pathAbsoluPreferencesProperties, CHARSET_UTF8)) {
				
				/* décode le fichier .properties en UTF8 
				 * et le charge dans le Properties preferences. */
				preferences.load(reader);
		
			}

		} // Fin du bloc synchronized.__________________
				
	} // Fin de lireFichierPreferences().__________________________________


	
	/**
	 * <b>Enregistre en UTF8</b> le <i>java.util.Properties</i> 
	 * preferences dans le <i>fichier</i> properties 
	 * contenant les preferences
	 * <code><b>ressources_externes/preferences/metier/utilisateurs/
	 * SectionHit_CONTROLES.properties</b></code>.<br/>
	 * <ul>
	 * <li>enregistre le <i>java.util.Properties</i> <b>preferences</b> 
	 * sur disque dur dans le <i>fichier</i> 
	 * .properties correspondant.</li>
	 * <li>ajoute le commentaire au début de preferences.properties.</li>
	 * <li>Prise en compte (stockage) 
	 * d'une modification d'une Property.</li>
	 * <li><code>preferences.store(writer, null);</code></li>
	 * <li>trace EX_FONCT_MEMORISATION_05.</li>
	 * <li>trace EX_TEC_MEMORISATION_06.</li>
	 * </ul>
	 * - ne fait rien si le fichier properties n'existe pas.<br/>
	 * - ne fait rien si preferences est vide.<br/>
	 * <br/>
	 * 
	 * @throws Exception 
	 */
	private static void enregistrerPreferencesDansFichierProperties() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			/* ne fait rien si le fichier properties n'existe pas. */
			if (filePreferencesProperties == null 
					|| !filePreferencesProperties.exists()) {
				return;
			}
			
			/* ne fait rien si preferences est vide. */
			if (preferences.isEmpty()) {
				return;
			}
			
			/* try-with-resource qui se charge du close(). */
			try (Writer writer = Files.newBufferedWriter(
					pathAbsoluPreferencesProperties, CHARSET_UTF8)) {
				
				/* enregistre le Properties preferences sur disque dur 
				 * dans le fichier .properties correspondant. */
				preferences.store(writer, commentaire);
				
			}

		} // Fin du bloc synchronized.__________________
		
	} // Fin de enregistrerFichierPreferences().___________________________
	

	
	/**
	 * <b>Lit un template situé à 
	 * <code>cheminAbsoluMainResources/pCheminRelatifTemplate</code> 
	 * et retourne une String unique 
	 * incorporant les sauts de lignes</b>.
	 * <ul>
	 * <li>lit le fichier template avec le Charset UTF8.</li>
	 * <li>utilise la méthode lireStringsDansFile(
	 * templateFile, CHARSET_UTF8).</li>
	 * <li><b>Ne fait aucune substitution de variables</b>. 
	 * Lit le template et le retourne sous forme 
	 * de String.</li>
	 * <li>incorpore dans la String résultat les 
	 * sauts de ligne de la plateforme.</li>
	 * </ul>
	 * - retourne null si pCheminRelatifTemplate est blank.<br/>
	 * - retourne null si le fichier template n'existe pas.<br/>
	 * <br/>
	 *
	 * @param pCheminRelatifTemplate : String : 
	 * chemin relatif du template à lire par rapport à 
	 * cheminAbsoluMainResources (src/main/resources).<br/>
	 * 
	 * @return String : 
	 * template sous forme de String unique 
	 * incorporant les sauts de lignes.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String lireTemplateString(
			final String pCheminRelatifTemplate) 
									throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			/* retourne null si pCheminRelatifTemplate est blank. */
			if (StringUtils.isBlank(pCheminRelatifTemplate)) {
				return null;
			}
			
			final List<String> templateListe 
				= lireTemplate(pCheminRelatifTemplate);
			
			final String resultat 
				= creerStringAPartirDeListe(templateListe);
			
			return resultat;
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de lireTemplateString(...).___________________________________

	
	
	/**
	 * <b>Lit un template situé à 
	 * <code>cheminAbsoluMainResources/pCheminRelatifTemplate</code> 
	 * et retourne une liste de lignes</b>.
	 * <ul>
	 * <li>lit le fichier template avec le Charset UTF8.</li>
	 * <li>utilise la méthode lireStringsDansFile(
	 * templateFile, CHARSET_UTF8).</li>
	 * <li><b>Ne fait aucune substitution de variables</b>. 
	 * Lit le template et le retourne sous forme 
	 * de List&lt;String&gt;.</li>
	 * </ul>
	 * - retourne null si pCheminRelatifTemplate est blank.<br/>
	 * - retourne null si le fichier template n'existe pas.<br/>
	 * <br/>
	 *
	 * @param pCheminRelatifTemplate : String : 
	 * chemin relatif du template à lire par rapport à 
	 * cheminAbsoluMainResources (src/main/resources).<br/>
	 * 
	 * @return List&lt;String&gt; : 
	 * template sous forme de liste de lignes.<br/>
	 * 
	 * @throws Exception 
	 */
	private static List<String> lireTemplate(
			final String pCheminRelatifTemplate) 
									throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			/* retourne null si pCheminRelatifTemplate est blank. */
			if (StringUtils.isBlank(pCheminRelatifTemplate)) {
				return null;
			}
			
			final String cheminAbsoluTemplate 
				= BundleConfigurationProjetManager.getRacineMainResources() 
					+ SEPARATEUR_FICHIER 
						+ pCheminRelatifTemplate;
			
			final File templateFile = new File(cheminAbsoluTemplate);
			
			/* retourne null si le fichier template n'existe pas. */
			if (!templateFile.exists()) {
				return null;
			}
			
			/* utilise la méthode 
			 * lireStringsDansFile(templateFile, CHARSET_UTF8). */
			final List<String> templateListe 
				= lireStringsDansFile(templateFile, CHARSET_UTF8);
			
			return templateListe;

		} // Fin du bloc synchronized.__________________
		
	} // Fin de lireTemplate(...)._________________________________________
	
	
	
	/**
	 * <b>Lit le contenu d'un fichier texte avec pCharset 
	 * et retourne une Liste de lignes</b>. 
	 * <ul>
	 * <li><b>Lit le contenu</b> d'un fichier texte 
	 * (fichier simple contenant du texte) pFile.</li>
	 * <li>Décode le contenu d'un fichier texte 
	 * (fichier simple contenant du texte) pFile 
	 * avec le Charset pCharset</li>
	 * <li><b>Retourne la liste des lignes</b> 
	 * du fichier simple texte pFile 
	 * lues avec le Charset pCharset.</li>
	 * <ul>
	 * <li>Utilise automatiquement le CHARSET_UTF8 
	 * si pCharset est null.</li>
	 * </ul>
	 * </ul>
	 * - Retourne null si pFile est null.<br/>
	 * - Retourne null si pFile n'existe pas.<br/>
	 * - Retourne null si pFile est un répertoire.<br/>
	 * - Retourne null en cas d'Exception loggée 
	 * (MalformedInputException, ...).<br/>
	 * <br/>
	 *
	 * @param pFile : File : fichier simple textuel à lire.<br/>
	 * @param pCharset : Charset : le Charset à utiliser pour 
	 * lire le fichier pFile.<br/>
	 * 
	 * @return : List&lt;String&gt; : Liste des lignes lues.<br/>
	 * 
	 * @throws Exception en cas d'Exception loggée 
	 * (IOException, MalformedInputException, ...).<br/>
	 */
	private static List<String> lireStringsDansFile(
			final File pFile
				, final Charset pCharset) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			/* Retourne null si pFile est null. */
			if (pFile == null) {
				return null;
			}
			
			/* Retourne null si pFile n'existe pas. */
			if (!pFile.exists()) {
				return null;
			}
			
			/* Retourne null si pFile est un répertoire. */
			if (pFile.isDirectory()) {
				return null;
			}
			
			/* Utilise automatiquement le CHARSET_UTF8 si pCharset est null. */
			Charset charset = null;
			
			if (pCharset == null) {
				charset = CHARSET_UTF8;
			}
			else {
				charset = pCharset;
			}
			
			/* Récupère le Path de pFile. */
			final Path pathFichier = pFile.toPath();
			
			try {
				
				// *****************************************************
				/* Retourne la liste des lignes lues avec le charset. */
				return Files.readAllLines(pathFichier, charset);
				
			} 
			
			catch (MalformedInputException malformedInputException) {
				
				final String message 
				=  "Impossible de lire le contenu du fichier '" 
				+ pFile.getName() 
				+ "' avec le Charset " 
				+ charset.displayName(Locale.getDefault()) 
				+ " à cause d'un caractère qui ne peut être "
				+ "écrit dans ce Charset (MalformedInputException)";
				
				/* LOG de niveau Error. */
				loggerError(CLASSE_SECTIONHIT_GESTIONNAIRE_PREFS_CONTROLES
						, METHODE_LIRE_STRINGS_DANS_FILE 
						+ SEPARATEUR_MOINS_AERE 
						+ message
						, malformedInputException);
				
				/* retourne null en cas d'Exception loggée 
				 * (IOException, MalformedInputException, ...). */
				return null;
		
			}
			
			catch (IOException ioe) {
				
				/* LOG de niveau Error. */
				loggerError(CLASSE_SECTIONHIT_GESTIONNAIRE_PREFS_CONTROLES
						, METHODE_LIRE_STRINGS_DANS_FILE
						, ioe);
				
				final String message 
				= CLASSE_SECTIONHIT_GESTIONNAIRE_PREFS_CONTROLES 
				+ SEPARATEUR_MOINS_AERE 
				+ METHODE_LIRE_STRINGS_DANS_FILE 
				+ SEPARATEUR_MOINS_AERE 
				+ "Impossible de lire le contenu du fichier '" 
				+ pFile.getName() 
				+ "' avec le Charset " 
				+ charset.displayName(Locale.getDefault());
				
				/* jette une Exception en cas d'Exception loggée 
				 * (IOException, MalformedInputException, ...). */
				throw new Exception(message, ioe);
			
			}
			
		} // Fin du bloc synchronized.__________________
			
	} // Fin de lireStringsDansFile(...).__________________________________
	

	
	/**
	 * <b>Crée une String à partir d'une liste de Strings</b>.
	 * <ul>
	 * <li>ajoute un saut de ligne de la plateforme 
	 * NEWLINE à chaque ligne.</li>
	 * </ul>
	 * - retourne null si pList == null.<br/>
	 * <br/>
	 *
	 * @param pList : List&lt;String&gt;.<br/>
	 * 
	 * @return : String.<br/>
	 */
	private static String creerStringAPartirDeListe(
			final List<String> pList) {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			/* retourne null si pList == null. */
			if (pList == null) {
				return null;
			}
			
			final StringBuilder stb = new StringBuilder();
			
			for (final String ligne : pList) {
				
				stb.append(ligne);
				
				/* ajoute un saut de ligne de la plateforme 
				 * NEWLINE à chaque ligne. */
				stb.append(NEWLINE);
			}
			
			return stb.toString();

		} // Fin du bloc synchronized.__________________
		
	} // Fin de creerStringAPartirDeListe(...).____________________________
	
	
	
	/**
	 * method loggerInfo(
	 * String pClasse
	 * , String pMethode
	 * , String pMessage) :<br/>
	 * <ul>
	 * <li>Crée un message de niveau INFO dans le LOG.</li>
	 * </ul>
	 * - Ne fait rien si un des paramètres est null.<br/>
	 * <br/>
	 *
	 * @param pClasse : String : Classe appelante.<br/>
	 * @param pMethode : String : Méthode appelante.<br/>
	 * @param pMessage : String : Message particulier de la méthode.<br/>
	 */
	private static void loggerInfo(
			final String pClasse
				, final String pMethode
					, final String pMessage) {
		
		/* Ne fait rien si un des paramètres est null. */
		if (pClasse == null || pMethode == null || pMessage == null) {
			return;
		}
		
		/* LOG de niveau INFO. */			
		if (LOG.isInfoEnabled()) {
			
			final String message 
			= pClasse 
			+ SEPARATEUR_MOINS_AERE
			+ pMethode
			+ SEPARATEUR_MOINS_AERE
			+ pMessage;
			
			LOG.info(message);
		}
		
	} // Fin de la classe loggerInfo(...)._________________________________
	
	
	
	/**
	 * method loggerInfo(
	 * String pClasse
	 * , String pMethode
	 * , String pMessage
	 * , String pComplement) :<br/>
	 * <ul>
	 * <li>Créée un message de niveau INFO dans le LOG.</li>
	 * </ul>
	 * - Ne fait rien si un des paramètres est null.<br/>
	 * <br/>
	 *
	 * @param pClasse : String : Classe appelante.<br/>
	 * @param pMethode : String : Méthode appelante.<br/>
	 * @param pMessage : String : Message particulier de la méthode.<br/>
	 * @param pComplement : String : Complément au message de la méthode.<br/>
	 */
	private static void loggerInfo(
			final String pClasse
				, final String pMethode
					, final String pMessage
						, final String pComplement) {
		
		/* Ne fait rien si un des paramètres est null. */
		if (pClasse == null || pMethode == null 
				|| pMessage == null || pComplement == null) {
			return;
		}
		
		/* LOG de niveau INFO. */			
		if (LOG.isInfoEnabled()) {
			
			final String message 
			= pClasse 
			+ SEPARATEUR_MOINS_AERE
			+ pMethode
			+ SEPARATEUR_MOINS_AERE
			+ pMessage
			+ pComplement;
			
			LOG.info(message);
		}
		
	} // Fin de loggerInfo(...).___________________________________________
	
	
	
	/**
	 * method loggerError(
	 * String pClasse
	 * , String pMethode
	 * , Exception pException) :<br/>
	 * <ul>
	 * <li>Crée un message de niveau ERROR dans le LOG.</li>
	 * </ul>
	 * - Ne fait rien si un des paramètres est null.<br/>
	 * <br/>
	 *
	 * @param pClasse : String : Classe appelante.<br/>
	 * @param pMethode : String : Méthode appelante.<br/>
	 * @param pException : Exception : Exception transmise 
	 * par la méthode appelante.<br/>
	 */
	private static void loggerError(
			final String pClasse
				, final String pMethode
					, final Exception pException) {
		
		/* Ne fait rien si un des paramètres est null. */
		if (pClasse == null || pMethode == null || pException == null) {
			return;
		}
		
		/* LOG de niveau ERROR. */			
		if (LOG.isErrorEnabled()) {
			
			final String message 
			= pClasse 
			+ SEPARATEUR_MOINS_AERE
			+ pMethode
			+ SEPARATEUR_MOINS_AERE 
			+ pException.getMessage();
			
			LOG.error(message, pException);
			
		}
		
	} // Fin de loggerError(...).__________________________________________


	
	/**
	 * Méthod générique permettant de factoriser 
	 * les Getters des attributs.<br/>
	 * retourne la valeur du String pAttribut 
	 * dans le fichier properties.<br/>
	 * <ul>
	 * <li>alimente le java.util.Properties <code>preferences</code>.</li>
	 * <li><b>alimente l'attribut pAttribut avec sa valeur 
	 * dans le java.util.Properties <code>preferences</code>.</b></li>
	 * <ul>
	 * <li>nettoie la valeur lue dans le properties avec un trim().</li>
	 * <li>affecte la valeur nettoyée lue dans le properties à pAttribut 
	 * si le properties est accessible.</li>
	 * <li>affecte la valeur en dur à pAttribut si problème.</li>
	 * </ul>
	 * <li><b>retourne la valeur de l'attribut 
	 * dans le fichier properties</b>.</li>
	 * </ul>
	 *
	 * @param pAttribut : String : 
	 * un attribut de la classe (SINGLETON) comme 
	 * <code>messageSectionHitNumDepartementRenseigne01</code>
	 * @param pFournirKey : String : 
	 * clé de l'attribut String pAttribut dans le fichier properties.
	 * @param pValeurEnDur : String : 
	 * valeur initiale stockée en dur dans la classe pour pAttribut.
	 * 
	 * @return String : 
	 * l'attribut String passé en paramètre tel qu'il est stocké 
	 * dans le fichier properties.<br/>
	 * 
	 * @throws Exception
	 */
	private static String fournirAttribut(
			String pAttribut
				, final String pFournirKey
					, final String pValeurEnDur) 
									throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			/*  alimente le java.util.Properties preferences. */
			alimenterPreferences();
			
			/* alimente l'attribut pAttribut avec sa valeur 
			 * dans le fichier properties. */
			if (pAttribut == null) {
				
				/* lecture dans le properties. */
				final String valeurStringSale 
					= preferences
						.getProperty(pFournirKey);
				
				if (!StringUtils.isBlank(valeurStringSale)) {
					
					/* nettoie la valeur lue dans le properties 
					 * avec un trim(). */
					pAttribut 
						= valeurStringSale.trim();
					
				}
				else {
					
					/* prend valeur en dur si problème 
					 * et l'affecte à pAttribut. */
					pAttribut 
						= pValeurEnDur.trim();
				}
			}
			
			/* retourne la valeur de l'attribut dans 
			 * le fichier properties. */
			return pAttribut;
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirAttribut(...).______________________________________

	
	
	/**
	 * Méthod générique permettant de factoriser 
	 * les Getters des attributs possédant une valeur numérique à changer.<br/>
	 * retourne la valeur du String pAttribut 
	 * dans le fichier properties.<br/>
	 * Par exemple :<br/>
	 * si la valeur dans pAttribut vaut "la civilite de l'SectionHit 
	 * ne doit pas excéder 15 caractères", 
	 * et  pValeurAInjecter vaut "127", la méthode retourne 
	 * "la civilite de l'SectionHit ne doit pas excéder 127 caractères".<br/>
	 * <ul>
	 * <li>alimente le java.util.Properties <code>preferences</code>.</li>
	 * <li><b>alimente l'attribut pAttribut avec sa valeur 
	 * dans le java.util.Properties <code>preferences</code>.</b></li>
	 * <ul>
	 * <li>nettoie la valeur lue dans le properties avec un trim().</li>
	 * <li>remplace le nombre dans la valeur lue dans le properties 
	 * par la valeur à injecter.</li>
	 * <li>affecte la valeur nettoyée lue dans le properties à pAttribut 
	 * si le properties est accessible.</li>
	 * <li>affecte la valeur en dur à pAttribut si problème.</li>
	 * </ul>
	 * <li><b>retourne la valeur de l'attribut 
	 * dans le fichier properties</b>.</li>
	 * </ul>
	 *
	 * @param pAttribut : String : 
	 * un attribut de la classe (SINGLETON) comme 
	 * <code>messageSectionHitNumDepartementLongueur03</code>
	 * @param pFournirKey : String : 
	 * clé de l'attribut String pAttribut dans le fichier properties.
	 * @param pValeurAInjecter : String : 
	 * valeur numérique à substituer dans pAttribut.
	 * @param pValeurEnDur : String : 
	 * valeur initiale stockée en dur dans la classe pour pAttribut.
	 * 
	 * @return String : 
	 * l'attribut String passé en paramètre tel qu'il est stocké 
	 * dans le fichier properties.<br/>
	 * 
	 * @throws Exception
	 */
	private static String fournirAttributSubstitue(
			String pAttribut
				, final String pFournirKey
					, final String pValeurAInjecter
						, final String pValeurEnDur) 
										throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			/*  alimente le java.util.Properties preferences. */
			alimenterPreferences();
			
			/* alimente l'attribut pAttribut avec sa valeur 
			 * dans le fichier properties. */
			if (pAttribut == null) {
				
				/* lecture dans le properties. */
				final String valeurStringSale 
					= preferences
						.getProperty(pFournirKey);
				
				if (!StringUtils.isBlank(valeurStringSale)) {
					
					/* nettoie la valeur lue dans le properties 
					 * avec un trim(). */
					pAttribut 
						= valeurStringSale.trim();
					
					/* remplace le nombre par la valeur à injecter. */
					pAttribut = remplacerNombreParValeur(
							pAttribut, pValeurAInjecter);
				}
				else {
					
					/* prend valeur en dur si problème 
					 * et l'affecte à pAttribut. */
					pAttribut 
						= pValeurEnDur.trim();
				}
			}
			
			/* retourne la valeur de l'attribut dans 
			 * le fichier properties. */
			return pAttribut;
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirAttributSubstitue(...)._____________________________


	
	/**
	 * remplace le premier nombre rencontré dans une String pString 
	 * par la valeur pValeurAInjecter.<br/>
	 * Par exemple :<br/>
	 * <code>remplacerNombreParValeur("la civilite de l'SectionHit 
	 * ne doit pas excéder 15 caractères", "127")</code> retourne 
	 * "la civilite de l'SectionHit ne doit pas excéder 127 caractères".<br/>
	 * <ul>
	 * <li>utilise une REGEX avec le motif "(\\d+)" 
	 * pour trouver le nombre à substituer.</li>
	 * <li>utilise <code>matcher.replaceFirst(pValeurAInjecter)</code> 
	 * pour substituer la valeur à injecter au nombre trouvé.</li>
	 * </ul>
	 *
	 * @param pString : String : 
	 * chaine de caractères comportant un nombre à substituer.
	 * @param pValeurAInjecter : String : valeur de substitution.
	 * 
	 * @return : String : chaine substituée.<br/>
	 */
	private static String remplacerNombreParValeur(
			final String pString
				, final String pValeurAInjecter) {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			String resultat = null;
			
			final String motif = "(\\d+)";
			
			final Pattern pattern = Pattern.compile(motif);
			
			final Matcher matcher = pattern.matcher(pString);
			
			if (matcher.find()) {
								
				resultat = matcher.replaceFirst(pValeurAInjecter);
				
			}
			
			return resultat;

		} // Fin du bloc synchronized.__________________
		
	} // Fin de remplacerNombreParValeur(...)._____________________________
	

	
	/**
	 * Retourne un boolean à true si pString 
	 * est de la forme "[1 Nombre]" comme 
	 * <i>"15"</i>.<br/>
	 * <ul>
	 * <li>utilise la Regex "^(\\d+)$" qui matche si pString 
	 * est <b>un nombre</b>.</li>
	 * </ul>
	 *
	 * @param pString : String
	 * 
	 * @return : boolean : 
	 * true si la chaine est un nombre.<br/>
	 */
	private static boolean est1Nombre(
			final String pString) {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			boolean resultat = false;
			
			/* motif : chaine de caractères est un nombre. */
			final String motif = "^(\\d+)$";
			
			final Pattern pattern = Pattern.compile(motif);
			
			final Matcher matcher = pattern.matcher(pString);
			
			if (matcher.matches()) {
				resultat = true;
			} 
			
			return resultat;
			
		} // Fin du bloc synchronized.__________________
				
	} // Fin de est1Nombre(...).___________________________________________

	
	
	/**
	 * Retourne un boolean à true si pString 
	 * est de la forme "....[1 Nombre] ..." comme 
	 * <i>"la civilite de l'SectionHit ne doit pas 
	 * excéder 15 caractères"</i>.<br/>
	 * <ul>
	 * <li>utilise la Regex "^(\\D*)(\\d+)(\\D*)$" qui matche si pString 
	 * ne comporte <b>qu'un et un seul nombre</b>.</li>
	 * </ul>
	 *
	 * @param pString : String
	 * 
	 * @return : boolean : 
	 * true si la chaine de caractères ne comporte 
	 * qu'un et un seul nombre.<br/>
	 */
	private static boolean respecteFormat1Nombre(
			final String pString) {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			boolean resultat = false;
			
			/* motif : chaine de caractères ne comporte 
			 * qu'un et un seul nombre*/
			final String motif = "^(\\D*)(\\d+)(\\D*)$";
			
			final Pattern pattern = Pattern.compile(motif);
			
			final Matcher matcher = pattern.matcher(pString);
			
			if (matcher.matches()) {
				resultat = true;
			} 
			
			return resultat;
			
		} // Fin du bloc synchronized.__________________
				
	} // Fin de respecteFormat1Nombre(...).________________________________


	
	/**
	 * Extrait et Retourne un nombre contenu dans pString si pString 
	 * est de la forme "....[1 Nombre] ..." comme 
	 * <i>"la civilite de l'SectionHit ne doit pas 
	 * excéder 15 caractères"</i>.<br/>
	 * <ul>
	 * <li>utilise la Regex "^(\\D*)(\\d+)(\\D*)$" qui matche si pString 
	 * ne comporte <b>qu'un et un seul nombre</b>.</li>
	 * <li><code>extraire1Nombre("ne doit pas excéder 15 caractères")</code> 
	 * retourne 15.</li>
	 * </ul>
	 *
	 * @param pString : String
	 * 
	 * @return : String : le nombre unique contenu dans pString.<br/>
	 */
	private static String extraire1Nombre(
			final String pString) {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			String resultat = null;
			
			/* motif : chaine de caractères ne comporte 
			 * qu'un et un seul nombre*/
			final String motif = "^(\\D*)(\\d+)(\\D*)$";
			
			final Pattern pattern = Pattern.compile(motif);
			
			final Matcher matcher = pattern.matcher(pString);
			
			if (matcher.matches()) {
				resultat = matcher.group(2);				
			}
			
			return resultat;
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de extraire1Nombre(...).______________________________________
		
	
	
	/**
	 * Méthod générique permettant de factoriser 
	 * les Setters des attributs.<br/>
	 * change la valeur du String pAttribut en pValue
	 * et l'écrit sur disque dans le fichier properties.<br/>
	 * <ul>
	 * <li>ne fait rien si le paramètre pValue est null
	 * ou ne modifie pas la valeur existante de pAttribut.</li>
	 * <li>affecte la nouvelle valeur pValue à l'attribut pAttribut.</li>
	 * <li>alimente le java.util.Properties <code>preferences</code>.</li>
	 * <li>modifie le java.util.Properties <code>preferences</code></b> 
	 * avec la nouvelle valeur pValue passée en paramètre</li>
	 * <li>ré-écrit entièrement le fichier properties mis à jour 
	 * avec les nouvelles valeurs dans le java.util.Properties 
	 * <code>preferences</code>.</li>
	 * </ul>
	 *
	 * @param pValue : String : 
	 * nouvelle valeur à passer à pAttribut et à stocker 
	 * dans le fichier properties de preferences.
	 * @param pAttribut : String : 
	 * un attribut de la classe (SINGLETON) comme 
	 * <code>messageRGSectionHitNumDepartement</code> 
	 * @param pFournirKey : String : 
	 * clé de l'attribut String pAttribut dans le fichier properties.
	 * 
	 * @throws Exception
	 */
	private static void setterAttribut(
			final String pValue
				, String pAttribut
					, final String pFournirKey) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			/* ne fait rien si le paramètre pValue est null
			 * ou ne modifie pas la valeur existante de pAttribut. */
			if (pValue != null 
					&& !pValue
						.equals(pAttribut)) {
				
				/* affecte la nouvelle valeur pValue à 
				 * l'attribut pAttribut. */
				pAttribut = pValue;
				
				/* alimente le java.util.Properties preferences. */
				alimenterPreferences();
				
				/* modifie le java.util.Properties preferences 
				 * avec la nouvelle valeur pValue passée en paramètre. */
				creerOuModifierProperty(
						pFournirKey
							, pAttribut);
				
				/* ré-écrit entièrement le fichier properties mis à jour 
				 * avec les nouvelles valeurs dans le 
				 * java.util.Properties preferences. */
				enregistrerPreferencesDansFichierProperties();

			}

		} // Fin du bloc synchronized.__________________
						
	} // Fin de setterAttribut(...)._______________________________________
	

	
	/**
	* Méthod générique permettant de factoriser 
	* les Setters des attributs valeur liés à un unique attribut message.<br/>
	* Par exemple, l'attribut message 
	* <code>messageSectionHitNumDepartementLongueur03</code> 
	* susceptible de contenir 
	* "la civilite de l'SectionHit ne doit pas excéder 15 caractères" 
	* est lié à l'attribut valeur 
	* <code>valeurSectionHitNumDepartementLongueur03</code> 
	* qui doit alors contenir "15".<br/>
	* Setter du <b>SINGLETON de pAttributValeur comme 
	* <code>valeurSectionHitNumDepartementLongueur03</code> 
	* par défaut dans l'application</b>.<br/>
	* pAttributValeur est la valeur d'un attribut message 
	* <i>à une seule valeur</i> lié comme 
	* <code>messageSectionHitNumDepartementLongueur03</code>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* de l'attribut lié au présent.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si pValue n'est pas un nombre.<br/>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à pAttributValeur.<br/>
	* @param pAttributValeur : String : 
	* un attribut de la classe (SINGLETON) lié à 
	* un unique attribut message comme 
	* <code>valeurSectionHitNumDepartementLongueur03</code> 
	* @param pKeyAttributValeur : String : 
	* clé de l'attribut String pAttributValeur dans le fichier properties.
	* @param pAttributMessageLie : String : 
	* un attribut de la classe (SINGLETON) lié à 
	* un unique attribut valeur comme 
	* <code>messageSectionHitNumDepartementLongueur03</code> 
	* @param pKeyAttributMessageLie : String : 
	* clé de l'attribut String pAttributMessageLie dans le fichier properties.
	* 
	 * @throws Exception 
	*/
	private static void setterValeurAttributLieAUnAttribut(
			final String pValue
				, String pAttributValeur
					, final String pKeyAttributValeur
						, String pAttributMessageLie
							, final String pKeyAttributMessageLie) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			/* ne fait rien si pValue n'est pas un nombre. */
			if (!est1Nombre(pValue)) {
				return;
			}
			
			/* ne fait rien si le paramètre pValue est null
			 * ou ne modifie pas la valeur existante de pAttribut. */
			if (pValue != null 
					&& !pValue
						.equals(pAttributValeur)) {
				
				/* affecte la nouvelle valeur pValue à 
				 * l'attribut pAttribut. */
				pAttributValeur = pValue;
				
				/* affecte la nouvelle valeur à l'attribut lié 
				 * au présent pAttribut. */
				pAttributMessageLie 
				= remplacerNombreParValeur(
						pAttributMessageLie
							, pAttributValeur);
				
				/* alimente le java.util.Properties preferences. */
				alimenterPreferences();
				
				/* modifie le java.util.Properties preferences 
				 * avec la nouvelle valeur pValue passée en paramètre. */
				creerOuModifierProperty(
						pKeyAttributValeur
							, pAttributValeur);
				
				/* ré-écrit entièrement le fichier properties mis à jour 
				 * avec les nouvelles valeurs dans le 
				 * java.util.Properties preferences. */
				enregistrerPreferencesDansFichierProperties();
				
				/* modifie le java.util.Properties preferences 
				 * avec la nouvelle valeur de l'attribut lié 
				 * au présent pAttribut. */
				creerOuModifierProperty(
						pKeyAttributMessageLie
							, pAttributMessageLie);
				
				/* ré-écrit entièrement le fichier properties mis à jour 
				 * avec les nouvelles valeurs dans le 
				 * java.util.Properties preferences. */
				enregistrerPreferencesDansFichierProperties();
				
			}
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setterValeurAttributLieAUnAttribut(...).___________________
	

	
	/**
	* Méthod générique permettant de factoriser 
	* les Setters des attributs message liés à un unique attribut valeur.<br/>
	* Par exemple, l'attribut message 
	* <code>messageSectionHitNumDepartementLongueur03</code> 
	* susceptible de contenir 
	* "la civilite de l'SectionHit ne doit pas excéder 15 caractères" 
	* est lié à l'attribut valeur 
	* <code>valeurSectionHitNumDepartementLongueur03</code> 
	* qui doit alors contenir "15".<br/>
	* Setter du <b>SINGLETON de pAttributMessage comme 
	* <code>messageSectionHitNumDepartementLongueur03</code> 
	* par défaut dans l'application</b>.<br/>
	* pAttributMessage est un attribut message 
	* <i>à une seule valeur</i> liée comme 
	* <code>valeurSectionHitNumDepartementLongueur03</code>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>affecte la nouvelle valeur à l'attribut 
	* lié au présent pAttribut.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si la nouvelle valeur pValue 
	* ne respecte pas le bon format.<br/>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à pAttributMessage.<br/>
	*  @param pAttributValeurLiee : String : 
	* un attribut de la classe (SINGLETON) lié à 
	* un unique attribut message comme 
	* <code>valeurSectionHitNumDepartementLongueur03</code> 
	* @param pKeyAttributValeurLiee : String : 
	* clé de l'attribut String pAttributValeurLiee dans le fichier properties.
	* @param pAttributMessage : String : 
	* un attribut de la classe (SINGLETON) lié à 
	* un unique attribut valeur comme 
	* <code>messageSectionHitNumDepartementLongueur03</code> 
	* @param pKeyAttributMessage : String : 
	* clé de l'attribut String pAttributMessageLie dans le fichier properties.
	* 
	* @throws Exception 
	*/
	private static void setMessageAttributLieAUnAttribut(
			final String pValue
				, String pAttributValeurLiee
					, final String pKeyAttributValeurLiee
				, String pAttributMessage
					, final String pKeyAttributMessage) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			/* ne fait rien si la nouvelle valeur pValue 
			 * ne respecte pas le bon format. */
			if (!respecteFormat1Nombre(pValue)) {
				return;
			}
			
			/* ne fait rien si le paramètre pValue est null
			 * ou ne modifie pas la valeur existante de pAttribut. */
			if (pValue != null 
					&& !pValue
						.equals(pAttributMessage)) {
				
				/* affecte la nouvelle valeur pValue à 
				 * l'attribut pAttribut. */
				pAttributMessage = pValue;
				
				/* affecte la nouvelle valeur à l'attribut lié 
				 * au présent pAttribut. */
				pAttributValeurLiee 
				= extraire1Nombre(
						pAttributMessage);
				
				/* alimente le java.util.Properties preferences. */
				alimenterPreferences();
				
				/* modifie le java.util.Properties preferences 
				 * avec la nouvelle valeur pValue passée en paramètre. */
				creerOuModifierProperty(
						pKeyAttributValeurLiee
							, pAttributValeurLiee);
				
				/* ré-écrit entièrement le fichier properties mis à jour 
				 * avec les nouvelles valeurs dans le 
				 * java.util.Properties preferences. */
				enregistrerPreferencesDansFichierProperties();
				
				/* modifie le java.util.Properties preferences 
				 * avec la nouvelle valeur de l'attribut lié 
				 * au présent pAttribut. */
				creerOuModifierProperty(
						pKeyAttributMessage
							, pAttributMessage);
				
				/* ré-écrit entièrement le fichier properties mis à jour 
				 * avec les nouvelles valeurs dans le 
				 * java.util.Properties preferences. */
				enregistrerPreferencesDansFichierProperties();
				
			}
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageAttributLieAUnAttribut(...)._____________________


	
	/**
	 * alimente le java.util.Properties <code>preferences</code>.<br/>
	 * <ul>
	 * <li>instancie tous les attributs statiques si nécessaire.</li>
	 * <li>crée le fichier properties si il n'existe pas 
	 * (la première fois).</li>
	 * <li>lit le contenu du fichier properties si il existe.</li>
	 * <li>alimente le java.util.Properties <code>preferences</code>.</li>
	 * </ul>
	 * <p>
	 * <img src="../../../../../../../../../../../javadoc/images/apptechnic/preferences/methode_alimenterPreferences_activites.png" 
	 * alt="diagramme d'activités de la méthode alimenterPreferences()" />
	 * </p>
	 * 
	 * @throws Exception
	 */
	private static void alimenterPreferences() throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			/* instancie tous les attributs statiques si nécessaire. */
			instancierAttributsStatiques();
			
			/* crée le fichier properties si il n'existe pas 
			 * (la première fois). */
			if (filePreferencesProperties == null 
					|| !filePreferencesProperties.exists()) {
				creerFichierPropertiesInitial();
			} else {
				
				/* lit le contenu du fichier properties si il existe. */
				lireFichierPreferencesProperties();
			}
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de alimenterPreferences().____________________________________
	

	
	/**
	 * <b>Crée ou met à jour une Property</b> dans 
	 * le <i>Properties</i> <b>preferences</b>.<br/>
	 * <ul>
	 * <li>alimente le java.util.Properties <code>preferences</code>.</li>
	 * <li>Crée ou maj dans le java.util.Properties <b>preferences</b> 
	 * <i>sans enregistrer la modification sur le disque dur</i>.</li>
	 * <li><code>preferences.setProperty(pKey, pValue);</code></li>
	 * <li>trace EX_FONCT_PARAMETRAGE_03.</li>
	 * </ul>
	 * - retourne false si pKey == null.<br/>
	 * - retourne false si pValue == null.<br/>
	 * <br/>
	 *
	 * @param pKey : String : Clé.<br/>
	 * @param pValue : String : Valeur.<br/>
	 * 
	 * @return : boolean : true si la property a été créée.<br/>
	 * 
	 * @throws Exception 
	 */
	private static boolean creerOuModifierProperty(
			final String pKey
				, final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			/*  alimente le java.util.Properties preferences. */
			alimenterPreferences();
			
			/* retourne false si pKey == null. */
			if (pKey == null) {
				return false;
			}
			
			/* retourne false si pValue == null. */
			if (pValue == null) {
				return false;
			}
			
			/* crée ou met à jour la Property dans preferences. */
			preferences.setProperty(pKey, pValue);
			
			return true;
			
		} // Fin du bloc synchronized.__________________
				
	} // Fin de creerOuModifierProperty(...).______________________________

	
	
	/**
	 * <b>Retire une Property</b> dans 
	 * le <i>Properties</i> <b>preferences</b>.<br/>
	 * <ul>
	 * <li>alimente le java.util.Properties <code>preferences</code>.</li>
	 * <li>retire dans l'objet Properties <b>preferences</b> 
	 * <i>sans enregistrer la modification sur le disque dur 
	 * (.properties)</i>.</li>
	 * <li><code>preferences.remove(pKey);</code>.</li>
	 * </ul>
	 * - retourne false si pKey == null.<br/>
	 * <br/>
	 *
	 * @param pKey : String : Clé.<br/>
	 * 
	 * @return : boolean : true si la property a été retirée.<br/>
	 * 
	 * @throws Exception 
	 */
	private static boolean retirerProperty(
			final String pKey) 
					throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			/*  alimente le java.util.Properties preferences. */
			alimenterPreferences();
			
			/* retourne false si pKey == null. */
			if (pKey == null) {
				return false;
			}
			
			/* retire la Property de preferences. */
			preferences.remove(pKey);
			
			return true;
			
		} // Fin du bloc synchronized.__________________
				
	} // Fin de retirerProperty(...).______________________________________
	

	
	/**
	 * vide le <i>Properties</i> <b>preferences</b>.<br/>
	 * <ul>
	 * <li>alimente le java.util.Properties <code>preferences</code>.</li>
	 * <li>vide l'objet <i>Properties</i> <b>preferences</b> 
	 * sans vider le <i>fichier</i> .properties correspondant 
	 * sur le disque dur.</li>
	 * <li><code>preferences.remove(cle);</code>.</li>
	 * </ul>
	 * - retourne false si l'ensemble des clés du 
	 * Properties preferences est null.<br/>
	 * <br/>
	 *
	 * @return : boolean : true si preferences a été vidée.<br/>
	 * 
	 * @throws Exception 
	 */
	private static boolean viderPreferences() throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			/*  alimente le java.util.Properties preferences. */
			alimenterPreferences();
				
			final Set<String> clesSet 
				= preferences.stringPropertyNames();
			
			/* retourne false si l'ensemble des clés 
			 * du Properties preferences est null. */
			if (clesSet == null) {
				return false;
			}
			
			/* vidage du Properties preferences. */
			for (final String cle : clesSet) {
				preferences.remove(cle);
			}
			
			return true;
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de viderPreferences().________________________________________



	/**
	 * Getter du java.util.Properties encapsulant les préférences.<br/>
	 * SINGLETON.<br/>
	 * <ul>
	 * <li>alimente le java.util.Properties <code>preferences</code>.</li>
	 * <li>retourne le java.util.Properties <code>preferences</code>.</li>
	 * <li>trace EX_FONCT_PARAMETRAGE_01</li>
	 * </ul>
	 *
	 * @return preferences : Properties.<br/>
	 * 
	 * @throws Exception 
	 */
	public static Properties getPreferences() throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			/*  alimente le java.util.Properties preferences. */
			alimenterPreferences();
			
			return preferences;
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de getPreferences().__________________________________________
	
	
	
	/**
	 * fournit une String pour l'affichage de preferences.properties.<br/>
	 * <ul>
	 * <li>alimente le java.util.Properties <code>preferences</code>.</li>
	 * <li>affiche le contenu de preferences</li>
	 * <li>trace EX_FONCT_PARAMETRAGE_01</li>
	 * <li>trie un Set&lt;String&gt;.</li>
	 * </ul>
	 *
	 * @return : String.<br/>
	 * 
	 * @throws Exception
	 */
	public static String afficherPreferences() throws Exception {

		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			/*  alimente le java.util.Properties preferences. */
			alimenterPreferences();
			
			final StringBuffer stb = new StringBuffer();
			
			/* trie un Set<String>. */
			final TreeSet<String> setTrie 
				= new TreeSet<String>(preferences.stringPropertyNames());
			
			for (final String key : setTrie) {
				stb.append(key);
				stb.append(EGAL);
				stb.append(preferences.getProperty(key));
				stb.append(SAUT_LIGNE_JAVA);
			}
			
			return stb.toString();

		} // Fin du bloc synchronized.__________________
		
	} // Fin de afficherPreferences()._____________________________________


	
	/**
	 * Getter du Path absolu vers le fichier properties 
	 * contenant les preferences 
	 * <code>SectionHit_CONTROLES.properties</code>.<br/>
	 * SINGLETON.<br/>
	 *
	 * @return pathAbsoluPreferencesProperties : Path.<br/>
	 * 
	 * @throws Exception 
	 */
	public static Path getPathAbsoluPreferencesProperties() 
											throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			if (pathAbsoluPreferencesProperties == null) {
				instancierPathAbsoluPreferencesProperties();
			}
			
			return pathAbsoluPreferencesProperties;
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de getPathAbsoluPreferencesProperties().______________________


		
	/**
	 * Getter du Chemin relatif (par rapport à ressources_externes) 
	 * du fichier properties contenant les preferences
	 * <code>SectionHit_CONTROLES.properties</code>.<br/>
	 * "preferences/metier/utilisateurs/SectionHit_CONTROLES.properties"
	 *
	 * @return CHEMIN_RELATIF_PREFERENCES_PROPERTIES_STRING : String.<br/>
	 */
	public static String getCheminRelatifPreferencesPropertiesString() {
		return CHEMIN_RELATIF_PREFERENCES_PROPERTIES_STRING;
	} // Fin de getCheminRelatifPreferencesPropertiesString()._____________



	/**
	 * Getter de la  Modélisation Java du fichier properties 
	 * contenant les preferences 
	 * <code>SectionHit_CONTROLES.properties</code>.<br/>
	 * SINGLETON.<br/>
	 *
	 * @return filePreferencesProperties : File.<br/>
	 * 
	 * @throws Exception 
	 */
	public static File getFilePreferencesProperties() throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			if (filePreferencesProperties == null) {				
				instancierFilePreferencesProperties();
			}
			
			return filePreferencesProperties;
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de getFilePreferencesProperties().____________________________
	
	
	
	/**
	 * Getter du commentaire à ajouter en haut du fichier properties 
	 * contenant les preferences 
	 * <code>SectionHit_CONTROLES.properties</code>.<br/>
	 * SINGLETON.<br/>
	 *
	 * @return commentaire : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getCommentaire() throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			if (commentaire == null) {
				instancierCommentaire();
			}
			
			return commentaire;
			
		} // Fin du bloc synchronized.__________________
				
	} // Fin de getCommentaire().__________________________________________
	
	
	
	/**
	* Setter du commentaire à ajouter en haut du fichier properties 
	* contenant les preferences 
	* <code>SectionHit_CONTROLES.properties</code>.<br/>
	*
	* @param pCommentaire : String : 
	* valeur à passer à commentaire.<br/>
	*/
	public static void setCommentaire(
			final String pCommentaire) {
		commentaire = pCommentaire;
	} // Fin de setCommentaire(...)._______________________________________
	

			
	/**
	 * Getter du Chemin relatif (par rapport à src/main/resources) 
	 * du template contenant le commentaire à ajouter 
	 * au dessus de SectionHit_CONTROLES.properties.<br/>
	 * "commentaires_properties/metier/utilisateurs/SectionHit_RG_properties_commentaires.txt"
	 * <br/>
	 *
	 * @return CHEMIN_RELATIF_TEMPLATE_COMMENTAIRE : String.<br/>
	 */
	public static String getCheminRelatifTemplateCommentaire() {
		return CHEMIN_RELATIF_TEMPLATE_COMMENTAIRE;
	} // Fin de getCheminRelatifTemplateCommentaire()._____________________



	/* 1 - numDepartement. ********************/
	/**
	 * retourne le messageSectionHitNumDepartementRenseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitNumDepartementRenseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitNumDepartementRenseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitNumDepartementRenseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitNumDepartementRenseigne01
					, fournirKeyMessageSectionHitNumDepartementRenseigne01()
					, MESSAGE_SECTIONHIT_NUMDEPARTEMENT_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitNumDepartementRenseigne01()._______
	

	
	/**
	 * Getter de la clé du messageSectionHitNumDepartementRenseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.numdepartement.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_NUMDEPARTEMENT_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitNumDepartementRenseigne01() {
		return KEY_MESSAGE_SECTIONHIT_NUMDEPARTEMENT_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitNumDepartementRenseigne01().____



	/**
	 * Getter du <b>SINGLETON de messageSectionHitNumDepartementRenseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitNumDepartementRenseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitNumDepartementRenseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitNumDepartementRenseigne01() 
													throws Exception {
		return fournirMessageSectionHitNumDepartementRenseigne01();
	} // Fin de getMessageSectionHitNumDepartementRenseigne01().___________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitNumDepartementRenseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitNumDepartementRenseigne01.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitNumDepartementRenseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitNumDepartementRenseigne01
							, fournirKeyMessageSectionHitNumDepartementRenseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitNumDepartementRenseigne01(...).________



	/**
	 * retourne le messageSectionHitNumDepartementRegex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitNumDepartementRegex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitNumDepartementRegex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitNumDepartementRegex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitNumDepartementRegex02
					, fournirKeyMessageSectionHitNumDepartementRegex02()
					, MESSAGE_SECTIONHIT_NUMDEPARTEMENT_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitNumDepartementRegex02().___________
	

	
	/**
	 * Getter de la clé du messageSectionHitNumDepartementRegex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.numdepartement.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_NUMDEPARTEMENT_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitNumDepartementRegex02() {
		return KEY_MESSAGE_SECTIONHIT_NUMDEPARTEMENT_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitNumDepartementRegex02().________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitNumDepartementRegex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitNumDepartementRegex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitNumDepartementRegex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitNumDepartementRegex02() 
													throws Exception {
		return fournirMessageSectionHitNumDepartementRegex02();
	} // Fin de getMessageSectionHitNumDepartementRegex02()._______________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitNumDepartementRegex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitNumDepartementRegex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitNumDepartementRegex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitNumDepartementRegex02
							, fournirKeyMessageSectionHitNumDepartementRegex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitNumDepartementRegex02(...).____________


	
	/* 2 - numSection. ***************************/
	/**
	 * retourne le messageSectionHitNumSectionRenseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitNumSectionRenseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitNumSectionRenseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitNumSectionRenseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitNumSectionRenseigne01
					, fournirKeyMessageSectionHitNumSectionRenseigne01()
					, MESSAGE_SECTIONHIT_NUMSECTION_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitNumSectionRenseigne01()._______
	

	
	/**
	 * Getter de la clé du messageSectionHitNumSectionRenseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.numsection.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_NUMSECTION_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitNumSectionRenseigne01() {
		return KEY_MESSAGE_SECTIONHIT_NUMSECTION_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitNumSectionRenseigne01().____



	/**
	 * Getter du <b>SINGLETON de messageSectionHitNumSectionRenseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitNumSectionRenseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitNumSectionRenseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitNumSectionRenseigne01() 
													throws Exception {
		return fournirMessageSectionHitNumSectionRenseigne01();
	} // Fin de getMessageSectionHitNumSectionRenseigne01().___________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitNumSectionRenseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitNumSectionRenseigne01.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitNumSectionRenseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitNumSectionRenseigne01
							, fournirKeyMessageSectionHitNumSectionRenseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitNumSectionRenseigne01(...).________



	/**
	 * retourne le messageSectionHitNumSectionRegex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitNumSectionRegex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitNumSectionRegex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitNumSectionRegex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitNumSectionRegex02
					, fournirKeyMessageSectionHitNumSectionRegex02()
					, MESSAGE_SECTIONHIT_NUMSECTION_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitNumSectionRegex02().___________
	

	
	/**
	 * Getter de la clé du messageSectionHitNumSectionRegex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.numsection.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_NUMSECTION_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitNumSectionRegex02() {
		return KEY_MESSAGE_SECTIONHIT_NUMSECTION_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitNumSectionRegex02().________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitNumSectionRegex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitNumSectionRegex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitNumSectionRegex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitNumSectionRegex02() 
													throws Exception {
		return fournirMessageSectionHitNumSectionRegex02();
	} // Fin de getMessageSectionHitNumSectionRegex02()._______________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitNumSectionRegex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitNumSectionRegex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitNumSectionRegex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitNumSectionRegex02
							, fournirKeyMessageSectionHitNumSectionRegex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitNumSectionRegex02(...).____________


	
	/* 3 - sens. ***************************/
	/**
	 * retourne le messageSectionHitSensRenseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitSensRenseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitSensRenseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitSensRenseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitSensRenseigne01
					, fournirKeyMessageSectionHitSensRenseigne01()
					, MESSAGE_SECTIONHIT_SENS_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitSensRenseigne01()._________________
	

	
	/**
	 * Getter de la clé du messageSectionHitSensRenseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.sens.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_SENS_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitSensRenseigne01() {
		return KEY_MESSAGE_SECTIONHIT_SENS_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitSensRenseigne01().______________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitSensRenseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitSensRenseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitSensRenseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitSensRenseigne01() 
													throws Exception {
		return fournirMessageSectionHitSensRenseigne01();
	} // Fin de getMessageSectionHitSensRenseigne01().___________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitSensRenseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitSensRenseigne01.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitSensRenseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitSensRenseigne01
							, fournirKeyMessageSectionHitSensRenseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitSensRenseigne01(...).________



	/**
	 * retourne le messageSectionHitSensRegex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitSensRegex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitSensRegex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitSensRegex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitSensRegex02
					, fournirKeyMessageSectionHitSensRegex02()
					, MESSAGE_SECTIONHIT_SENS_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitSensRegex02().___________
	

	
	/**
	 * Getter de la clé du messageSectionHitSensRegex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.sens.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_SENS_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitSensRegex02() {
		return KEY_MESSAGE_SECTIONHIT_SENS_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitSensRegex02().________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitSensRegex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitSensRegex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitSensRegex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitSensRegex02() 
													throws Exception {
		return fournirMessageSectionHitSensRegex02();
	} // Fin de getMessageSectionHitSensRegex02()._______________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitSensRegex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitSensRegex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitSensRegex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitSensRegex02
							, fournirKeyMessageSectionHitSensRegex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitSensRegex02(...).____________



	/**
	 * retourne le messageSectionHitSensNomenclature03 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitSensNomenclature03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitSensNomenclature03 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitSensNomenclature03() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitSensNomenclature03
					, fournirKeyMessageSectionHitSensNomenclature03()
					, MESSAGE_SECTIONHIT_SENS_NOMENCLATURE_03_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitSensNomenclature03().___________
	

	
	/**
	 * Getter de la clé du messageSectionHitSensNomenclature03 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.sens.nomenclature".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_SENS_NOMENCLATURE_03 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitSensNomenclature03() {
		return KEY_MESSAGE_SECTIONHIT_SENS_NOMENCLATURE_03;
	} // Fin de fournirKeyMessageSectionHitSensNomenclature03().________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitSensNomenclature03 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitSensNomenclature03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitSensNomenclature03 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitSensNomenclature03() 
													throws Exception {
		return fournirMessageSectionHitSensNomenclature03();
	} // Fin de getMessageSectionHitSensNomenclature03()._______________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitSensNomenclature03 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitSensNomenclature03.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitSensNomenclature03(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitSensNomenclature03
							, fournirKeyMessageSectionHitSensNomenclature03());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitSensNomenclature03(...).____________


	
	/* 4 - nature. ***************************/
	/**
	 * retourne le messageSectionHitNatureRenseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitNatureRenseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitNatureRenseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitNatureRenseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitNatureRenseigne01
					, fournirKeyMessageSectionHitNatureRenseigne01()
					, MESSAGE_SECTIONHIT_NATURE_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitNatureRenseigne01()._______________
	

	
	/**
	 * Getter de la clé du messageSectionHitNatureRenseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.nature.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_NATURE_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitNatureRenseigne01() {
		return KEY_MESSAGE_SECTIONHIT_NATURE_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitNatureRenseigne01().____________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitNatureRenseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitNatureRenseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitNatureRenseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitNatureRenseigne01() 
													throws Exception {
		return fournirMessageSectionHitNatureRenseigne01();
	} // Fin de getMessageSectionHitNatureRenseigne01().___________________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitNatureRenseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitNatureRenseigne01.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitNatureRenseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitNatureRenseigne01
							, fournirKeyMessageSectionHitNatureRenseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitNatureRenseigne01(...).________________



	/**
	 * retourne le messageSectionHitNatureRegex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitNatureRegex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitNatureRegex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitNatureRegex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitNatureRegex02
					, fournirKeyMessageSectionHitNatureRegex02()
					, MESSAGE_SECTIONHIT_NATURE_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitNatureRegex02().___________________
	

	
	/**
	 * Getter de la clé du messageSectionHitNatureRegex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.nature.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_NATURE_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitNatureRegex02() {
		return KEY_MESSAGE_SECTIONHIT_NATURE_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitNatureRegex02().________________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitNatureRegex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitNatureRegex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitNatureRegex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitNatureRegex02() 
													throws Exception {
		return fournirMessageSectionHitNatureRegex02();
	} // Fin de getMessageSectionHitNatureRegex02()._______________________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitNatureRegex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitNatureRegex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitNatureRegex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitNatureRegex02
							, fournirKeyMessageSectionHitNatureRegex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitNatureRegex02(...).____________________



	/**
	 * retourne le messageSectionHitNatureNomenclature03 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitNatureNomenclature03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitNatureNomenclature03 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitNatureNomenclature03() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitNatureNomenclature03
					, fournirKeyMessageSectionHitNatureNomenclature03()
					, MESSAGE_SECTIONHIT_NATURE_NOMENCLATURE_03_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitNatureNomenclature03().____________
	

	
	/**
	 * Getter de la clé du messageSectionHitNatureNomenclature03 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.nature.nomenclature".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_NATURE_NOMENCLATURE_03 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitNatureNomenclature03() {
		return KEY_MESSAGE_SECTIONHIT_NATURE_NOMENCLATURE_03;
	} // Fin de fournirKeyMessageSectionHitNatureNomenclature03()._________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitNatureNomenclature03 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitNatureNomenclature03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitNatureNomenclature03 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitNatureNomenclature03() 
													throws Exception {
		return fournirMessageSectionHitNatureNomenclature03();
	} // Fin de getMessageSectionHitNatureNomenclature03().________________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitNatureNomenclature03 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitNatureNomenclature03.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitNatureNomenclature03(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitNatureNomenclature03
							, fournirKeyMessageSectionHitNatureNomenclature03());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitNatureNomenclature03(...)._____________


	
	/* 5 - classe. ***************************/
	/**
	 * retourne le messageSectionHitClasseRenseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitClasseRenseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitClasseRenseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitClasseRenseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitClasseRenseigne01
					, fournirKeyMessageSectionHitClasseRenseigne01()
					, MESSAGE_SECTIONHIT_CLASSE_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitClasseRenseigne01()._______________
	

	
	/**
	 * Getter de la clé du messageSectionHitClasseRenseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.classe.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_CLASSE_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitClasseRenseigne01() {
		return KEY_MESSAGE_SECTIONHIT_CLASSE_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitClasseRenseigne01().____________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitClasseRenseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitClasseRenseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitClasseRenseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitClasseRenseigne01() 
													throws Exception {
		return fournirMessageSectionHitClasseRenseigne01();
	} // Fin de getMessageSectionHitClasseRenseigne01().___________________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitClasseRenseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitClasseRenseigne01.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitClasseRenseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitClasseRenseigne01
							, fournirKeyMessageSectionHitClasseRenseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitClasseRenseigne01(...).________________



	/**
	 * retourne le messageSectionHitClasseRegex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitClasseRegex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitClasseRegex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitClasseRegex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitClasseRegex02
					, fournirKeyMessageSectionHitClasseRegex02()
					, MESSAGE_SECTIONHIT_CLASSE_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitClasseRegex02().___________________
	

	
	/**
	 * Getter de la clé du messageSectionHitClasseRegex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.classe.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_CLASSE_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitClasseRegex02() {
		return KEY_MESSAGE_SECTIONHIT_CLASSE_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitClasseRegex02().________________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitClasseRegex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitClasseRegex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitClasseRegex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitClasseRegex02() 
													throws Exception {
		return fournirMessageSectionHitClasseRegex02();
	} // Fin de getMessageSectionHitClasseRegex02()._______________________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitClasseRegex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitClasseRegex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitClasseRegex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitClasseRegex02
							, fournirKeyMessageSectionHitClasseRegex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitClasseRegex02(...).____________________


	
	/* 6 - anneeTraitement. ****************/
	/**
	 * retourne le messageSectionHitAnneeTraitementRenseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitAnneeTraitementRenseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitAnneeTraitementRenseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitAnneeTraitementRenseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitAnneeTraitementRenseigne01
					, fournirKeyMessageSectionHitAnneeTraitementRenseigne01()
					, MESSAGE_SECTIONHIT_ANNEETRAITEMENT_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitAnneeTraitementRenseigne01().______
	

	
	/**
	 * Getter de la clé du messageSectionHitAnneeTraitementRenseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.anneeTraitement.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_ANNEETRAITEMENT_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitAnneeTraitementRenseigne01() {
		return KEY_MESSAGE_SECTIONHIT_ANNEETRAITEMENT_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitAnneeTraitementRenseigne01().___



	/**
	 * Getter du <b>SINGLETON de messageSectionHitAnneeTraitementRenseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitAnneeTraitementRenseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitAnneeTraitementRenseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitAnneeTraitementRenseigne01() 
											throws Exception {
		return fournirMessageSectionHitAnneeTraitementRenseigne01();
	} // Fin de getMessageSectionHitAnneeTraitementRenseigne01().__________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitAnneeTraitementRenseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitAnneeTraitementRenseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitAnneeTraitementRenseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitAnneeTraitementRenseigne01
							, fournirKeyMessageSectionHitAnneeTraitementRenseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitAnneeTraitementRenseigne01(...)._______



	/**
	 * retourne le messageSectionHitAnneeTraitementRegex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitAnneeTraitementRegex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitAnneeTraitementRegex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitAnneeTraitementRegex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitAnneeTraitementRegex02
					, fournirKeyMessageSectionHitAnneeTraitementRegex02()
					, MESSAGE_SECTIONHIT_ANNEETRAITEMENT_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitAnneeTraitementRegex02().__________
	

	
	/**
	 * Getter de la clé du messageSectionHitAnneeTraitementRegex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.anneeTraitement.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_ANNEETRAITEMENT_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitAnneeTraitementRegex02() {
		return KEY_MESSAGE_SECTIONHIT_ANNEETRAITEMENT_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitAnneeTraitementRegex02()._______



	/**
	 * Getter du <b>SINGLETON de messageSectionHitAnneeTraitementRegex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitAnneeTraitementRegex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitAnneeTraitementRegex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitAnneeTraitementRegex02() 
													throws Exception {
		return fournirMessageSectionHitAnneeTraitementRegex02();
	} // Fin de getMessageSectionHitAnneeTraitementRegex02().______________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitAnneeTraitementRegex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitAnneeTraitementRegex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitAnneeTraitementRegex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitAnneeTraitementRegex02
							, fournirKeyMessageSectionHitAnneeTraitementRegex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitAnneeTraitementRegex02(...).___________


	
	/* 7 - zoneLibre1. ****************/
	/**
	 * retourne le messageSectionHitZoneLibre1Renseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitZoneLibre1Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitZoneLibre1Renseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitZoneLibre1Renseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitZoneLibre1Renseigne01
					, fournirKeyMessageSectionHitZoneLibre1Renseigne01()
					, MESSAGE_SECTIONHIT_ZONELIBRE1_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitZoneLibre1Renseigne01().___________
	

	
	/**
	 * Getter de la clé du messageSectionHitZoneLibre1Renseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.zoneLibre1.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_ZONELIBRE1_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitZoneLibre1Renseigne01() {
		return KEY_MESSAGE_SECTIONHIT_ZONELIBRE1_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitZoneLibre1Renseigne01().________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitZoneLibre1Renseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitZoneLibre1Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitZoneLibre1Renseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitZoneLibre1Renseigne01() 
											throws Exception {
		return fournirMessageSectionHitZoneLibre1Renseigne01();
	} // Fin de getMessageSectionHitZoneLibre1Renseigne01()._______________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitZoneLibre1Renseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitZoneLibre1Renseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitZoneLibre1Renseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitZoneLibre1Renseigne01
							, fournirKeyMessageSectionHitZoneLibre1Renseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitZoneLibre1Renseigne01(...).____________



	/**
	 * retourne le messageSectionHitZoneLibre1Regex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitZoneLibre1Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitZoneLibre1Regex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitZoneLibre1Regex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitZoneLibre1Regex02
					, fournirKeyMessageSectionHitZoneLibre1Regex02()
					, MESSAGE_SECTIONHIT_ZONELIBRE1_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitZoneLibre1Regex02()._______________
	

	
	/**
	 * Getter de la clé du messageSectionHitZoneLibre1Regex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.zoneLibre1.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_ZONELIBRE1_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitZoneLibre1Regex02() {
		return KEY_MESSAGE_SECTIONHIT_ZONELIBRE1_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitZoneLibre1Regex02().____________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitZoneLibre1Regex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitZoneLibre1Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitZoneLibre1Regex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitZoneLibre1Regex02() 
													throws Exception {
		return fournirMessageSectionHitZoneLibre1Regex02();
	} // Fin de getMessageSectionHitZoneLibre1Regex02().___________________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitZoneLibre1Regex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitZoneLibre1Regex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitZoneLibre1Regex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitZoneLibre1Regex02
							, fournirKeyMessageSectionHitZoneLibre1Regex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitZoneLibre1Regex02(...).________________


	
	/* 8 - numRoute. ****************/
	/**
	 * retourne le messageSectionHitNumRouteRenseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitNumRouteRenseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitNumRouteRenseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitNumRouteRenseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitNumRouteRenseigne01
					, fournirKeyMessageSectionHitNumRouteRenseigne01()
					, MESSAGE_SECTIONHIT_NUMROUTE_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitNumRouteRenseigne01()._____________
	

	
	/**
	 * Getter de la clé du messageSectionHitNumRouteRenseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.numRoute.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_NUMROUTE_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitNumRouteRenseigne01() {
		return KEY_MESSAGE_SECTIONHIT_NUMROUTE_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitNumRouteRenseigne01().__________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitNumRouteRenseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitNumRouteRenseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitNumRouteRenseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitNumRouteRenseigne01() 
											throws Exception {
		return fournirMessageSectionHitNumRouteRenseigne01();
	} // Fin de getMessageSectionHitNumRouteRenseigne01()._________________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitNumRouteRenseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitNumRouteRenseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitNumRouteRenseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitNumRouteRenseigne01
							, fournirKeyMessageSectionHitNumRouteRenseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitNumRouteRenseigne01(...).______________



	/**
	 * retourne le messageSectionHitNumRouteRegex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitNumRouteRegex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitNumRouteRegex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitNumRouteRegex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitNumRouteRegex02
					, fournirKeyMessageSectionHitNumRouteRegex02()
					, MESSAGE_SECTIONHIT_NUMROUTE_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitNumRouteRegex02()._________________
	

	
	/**
	 * Getter de la clé du messageSectionHitNumRouteRegex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.numRoute.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_NUMROUTE_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitNumRouteRegex02() {
		return KEY_MESSAGE_SECTIONHIT_NUMROUTE_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitNumRouteRegex02().______________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitNumRouteRegex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitNumRouteRegex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitNumRouteRegex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitNumRouteRegex02() 
													throws Exception {
		return fournirMessageSectionHitNumRouteRegex02();
	} // Fin de getMessageSectionHitNumRouteRegex02()._____________________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitNumRouteRegex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitNumRouteRegex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitNumRouteRegex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitNumRouteRegex02
							, fournirKeyMessageSectionHitNumRouteRegex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitNumRouteRegex02(...).__________________


	
	/* 9 - indiceNumRoute. ****************/
	/**
	 * retourne le messageSectionHitIndiceNumRouteRenseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitIndiceNumRouteRenseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitIndiceNumRouteRenseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitIndiceNumRouteRenseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitIndiceNumRouteRenseigne01
					, fournirKeyMessageSectionHitIndiceNumRouteRenseigne01()
					, MESSAGE_SECTIONHIT_INDICENUMROUTE_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitIndiceNumRouteRenseigne01()._______
	

	
	/**
	 * Getter de la clé du messageSectionHitIndiceNumRouteRenseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.indiceNumRoute.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_INDICENUMROUTE_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitIndiceNumRouteRenseigne01() {
		return KEY_MESSAGE_SECTIONHIT_INDICENUMROUTE_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitIndiceNumRouteRenseigne01().____



	/**
	 * Getter du <b>SINGLETON de messageSectionHitIndiceNumRouteRenseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitIndiceNumRouteRenseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitIndiceNumRouteRenseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitIndiceNumRouteRenseigne01() 
											throws Exception {
		return fournirMessageSectionHitIndiceNumRouteRenseigne01();
	} // Fin de getMessageSectionHitIndiceNumRouteRenseigne01().___________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitIndiceNumRouteRenseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitIndiceNumRouteRenseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitIndiceNumRouteRenseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitIndiceNumRouteRenseigne01
							, fournirKeyMessageSectionHitIndiceNumRouteRenseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitIndiceNumRouteRenseigne01(...).________



	/**
	 * retourne le messageSectionHitIndiceNumRouteRegex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitIndiceNumRouteRegex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitIndiceNumRouteRegex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitIndiceNumRouteRegex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitIndiceNumRouteRegex02
					, fournirKeyMessageSectionHitIndiceNumRouteRegex02()
					, MESSAGE_SECTIONHIT_INDICENUMROUTE_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitIndiceNumRouteRegex02().___________
	

	
	/**
	 * Getter de la clé du messageSectionHitIndiceNumRouteRegex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.indiceNumRoute.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_INDICENUMROUTE_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitIndiceNumRouteRegex02() {
		return KEY_MESSAGE_SECTIONHIT_INDICENUMROUTE_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitIndiceNumRouteRegex02().________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitIndiceNumRouteRegex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitIndiceNumRouteRegex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitIndiceNumRouteRegex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitIndiceNumRouteRegex02() 
													throws Exception {
		return fournirMessageSectionHitIndiceNumRouteRegex02();
	} // Fin de getMessageSectionHitIndiceNumRouteRegex02()._______________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitIndiceNumRouteRegex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitIndiceNumRouteRegex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitIndiceNumRouteRegex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitIndiceNumRouteRegex02
							, fournirKeyMessageSectionHitIndiceNumRouteRegex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitIndiceNumRouteRegex02(...).____________


	
	/* 10 - indiceLettreRoute. ****************/
	/**
	 * retourne le messageSectionHitIndiceLettreRouteRenseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitIndiceLettreRouteRenseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitIndiceLettreRouteRenseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitIndiceLettreRouteRenseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitIndiceLettreRouteRenseigne01
					, fournirKeyMessageSectionHitIndiceLettreRouteRenseigne01()
					, MESSAGE_SECTIONHIT_INDICELETTREROUTE_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitIndiceLettreRouteRenseigne01().____
	

	
	/**
	 * Getter de la clé du messageSectionHitIndiceLettreRouteRenseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.indiceLettreRoute.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_INDICELETTREROUTE_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitIndiceLettreRouteRenseigne01() {
		return KEY_MESSAGE_SECTIONHIT_INDICELETTREROUTE_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitIndiceLettreRouteRenseigne01()._



	/**
	 * Getter du <b>SINGLETON de messageSectionHitIndiceLettreRouteRenseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitIndiceLettreRouteRenseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitIndiceLettreRouteRenseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitIndiceLettreRouteRenseigne01() 
											throws Exception {
		return fournirMessageSectionHitIndiceLettreRouteRenseigne01();
	} // Fin de getMessageSectionHitIndiceLettreRouteRenseigne01().________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitIndiceLettreRouteRenseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitIndiceLettreRouteRenseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitIndiceLettreRouteRenseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitIndiceLettreRouteRenseigne01
							, fournirKeyMessageSectionHitIndiceLettreRouteRenseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitIndiceLettreRouteRenseigne01(...)._____



	/**
	 * retourne le messageSectionHitIndiceLettreRouteRegex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitIndiceLettreRouteRegex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitIndiceLettreRouteRegex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitIndiceLettreRouteRegex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitIndiceLettreRouteRegex02
					, fournirKeyMessageSectionHitIndiceLettreRouteRegex02()
					, MESSAGE_SECTIONHIT_INDICELETTREROUTE_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitIndiceLettreRouteRegex02().________
	

	
	/**
	 * Getter de la clé du messageSectionHitIndiceLettreRouteRegex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.indiceLettreRoute.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_INDICELETTREROUTE_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitIndiceLettreRouteRegex02() {
		return KEY_MESSAGE_SECTIONHIT_INDICELETTREROUTE_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitIndiceLettreRouteRegex02()._____



	/**
	 * Getter du <b>SINGLETON de messageSectionHitIndiceLettreRouteRegex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitIndiceLettreRouteRegex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitIndiceLettreRouteRegex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitIndiceLettreRouteRegex02() 
													throws Exception {
		return fournirMessageSectionHitIndiceLettreRouteRegex02();
	} // Fin de getMessageSectionHitIndiceLettreRouteRegex02().____________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitIndiceLettreRouteRegex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitIndiceLettreRouteRegex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitIndiceLettreRouteRegex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitIndiceLettreRouteRegex02
							, fournirKeyMessageSectionHitIndiceLettreRouteRegex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitIndiceLettreRouteRegex02(...)._________


	
	/* 11 - categorieAdminRoute. ****************/
	/**
	 * retourne le messageSectionHitCategorieAdminRouteRenseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitCategorieAdminRouteRenseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitCategorieAdminRouteRenseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitCategorieAdminRouteRenseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitCategorieAdminRouteRenseigne01
					, fournirKeyMessageSectionHitCategorieAdminRouteRenseigne01()
					, MESSAGE_SECTIONHIT_CATEGORIEADMINROUTE_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitCategorieAdminRouteRenseigne01().__
	

	
	/**
	 * Getter de la clé du messageSectionHitCategorieAdminRouteRenseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.categorieAdminRoute.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_CATEGORIEADMINROUTE_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitCategorieAdminRouteRenseigne01() {
		return KEY_MESSAGE_SECTIONHIT_CATEGORIEADMINROUTE_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitCategorieAdminRouteRenseigne01().



	/**
	 * Getter du <b>SINGLETON de messageSectionHitCategorieAdminRouteRenseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitCategorieAdminRouteRenseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitCategorieAdminRouteRenseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitCategorieAdminRouteRenseigne01() 
											throws Exception {
		return fournirMessageSectionHitCategorieAdminRouteRenseigne01();
	} // Fin de getMessageSectionHitCategorieAdminRouteRenseigne01().______
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitCategorieAdminRouteRenseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitCategorieAdminRouteRenseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitCategorieAdminRouteRenseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitCategorieAdminRouteRenseigne01
							, fournirKeyMessageSectionHitCategorieAdminRouteRenseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitCategorieAdminRouteRenseigne01(...).___



	/**
	 * retourne le messageSectionHitCategorieAdminRouteRegex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitCategorieAdminRouteRegex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitCategorieAdminRouteRegex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitCategorieAdminRouteRegex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitCategorieAdminRouteRegex02
					, fournirKeyMessageSectionHitCategorieAdminRouteRegex02()
					, MESSAGE_SECTIONHIT_CATEGORIEADMINROUTE_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitCategorieAdminRouteRegex02().______
	

	
	/**
	 * Getter de la clé du messageSectionHitCategorieAdminRouteRegex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.categorieAdminRoute.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_CATEGORIEADMINROUTE_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitCategorieAdminRouteRegex02() {
		return KEY_MESSAGE_SECTIONHIT_CATEGORIEADMINROUTE_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitCategorieAdminRouteRegex02().___



	/**
	 * Getter du <b>SINGLETON de messageSectionHitCategorieAdminRouteRegex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitCategorieAdminRouteRegex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitCategorieAdminRouteRegex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitCategorieAdminRouteRegex02() 
													throws Exception {
		return fournirMessageSectionHitCategorieAdminRouteRegex02();
	} // Fin de getMessageSectionHitCategorieAdminRouteRegex02().__________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitCategorieAdminRouteRegex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitCategorieAdminRouteRegex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitCategorieAdminRouteRegex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitCategorieAdminRouteRegex02
							, fournirKeyMessageSectionHitCategorieAdminRouteRegex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitCategorieAdminRouteRegex02(...)._______
	


	/**
	 * retourne le messageSectionHitCategorieAdminRouteNomenclature03 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitCategorieAdminRouteNomenclature03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitCategorieAdminRouteNomenclature03 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitCategorieAdminRouteNomenclature03() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitCategorieAdminRouteNomenclature03
					, fournirKeyMessageSectionHitCategorieAdminRouteNomenclature03()
					, MESSAGE_SECTIONHIT_CATEGORIEADMINROUTE_NOMENCLATURE_03_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitCategorieAdminRouteNomenclature03().
	

	
	/**
	 * Getter de la clé du messageSectionHitCategorieAdminRouteNomenclature03 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.categorieAdminRoute.nomenclature".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_CATEGORIEADMINROUTE_NOMENCLATURE_03 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitCategorieAdminRouteNomenclature03() {
		return KEY_MESSAGE_SECTIONHIT_CATEGORIEADMINROUTE_NOMENCLATURE_03;
	} // Fin de fournirKeyMessageSectionHitCategorieAdminRouteNomenclature03().



	/**
	 * Getter du <b>SINGLETON de messageSectionHitCategorieAdminRouteNomenclature03 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitCategorieAdminRouteNomenclature03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitCategorieAdminRouteNomenclature03 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitCategorieAdminRouteNomenclature03() 
													throws Exception {
		return fournirMessageSectionHitCategorieAdminRouteNomenclature03();
	} // Fin de getMessageSectionHitCategorieAdminRouteNomenclature03().___
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitCategorieAdminRouteNomenclature03 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitCategorieAdminRouteNomenclature03.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitCategorieAdminRouteNomenclature03(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitCategorieAdminRouteNomenclature03
							, fournirKeyMessageSectionHitCategorieAdminRouteNomenclature03());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitCategorieAdminRouteNomenclature03(...).


	
	/* 12 - typeComptage. ****************/
	/**
	 * retourne le messageSectionHitTypeComptageRenseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitTypeComptageRenseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitTypeComptageRenseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitTypeComptageRenseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitTypeComptageRenseigne01
					, fournirKeyMessageSectionHitTypeComptageRenseigne01()
					, MESSAGE_SECTIONHIT_TYPECOMPTAGE_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitTypeComptageRenseigne01()._________
	

	
	/**
	 * Getter de la clé du messageSectionHitTypeComptageRenseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.typeComptage.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_TYPECOMPTAGE_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitTypeComptageRenseigne01() {
		return KEY_MESSAGE_SECTIONHIT_TYPECOMPTAGE_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitTypeComptageRenseigne01().______



	/**
	 * Getter du <b>SINGLETON de messageSectionHitTypeComptageRenseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitTypeComptageRenseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitTypeComptageRenseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitTypeComptageRenseigne01() 
											throws Exception {
		return fournirMessageSectionHitTypeComptageRenseigne01();
	} // Fin de getMessageSectionHitTypeComptageRenseigne01()._____________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitTypeComptageRenseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitTypeComptageRenseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitTypeComptageRenseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitTypeComptageRenseigne01
							, fournirKeyMessageSectionHitTypeComptageRenseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitTypeComptageRenseigne01(...).__________



	/**
	 * retourne le messageSectionHitTypeComptageRegex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitTypeComptageRegex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitTypeComptageRegex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitTypeComptageRegex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitTypeComptageRegex02
					, fournirKeyMessageSectionHitTypeComptageRegex02()
					, MESSAGE_SECTIONHIT_TYPECOMPTAGE_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitTypeComptageRegex02()._____________
	

	
	/**
	 * Getter de la clé du messageSectionHitTypeComptageRegex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.typeComptage.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_TYPECOMPTAGE_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitTypeComptageRegex02() {
		return KEY_MESSAGE_SECTIONHIT_TYPECOMPTAGE_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitTypeComptageRegex02().__________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitTypeComptageRegex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitTypeComptageRegex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitTypeComptageRegex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitTypeComptageRegex02() 
													throws Exception {
		return fournirMessageSectionHitTypeComptageRegex02();
	} // Fin de getMessageSectionHitTypeComptageRegex02()._________________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitTypeComptageRegex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitTypeComptageRegex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitTypeComptageRegex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitTypeComptageRegex02
							, fournirKeyMessageSectionHitTypeComptageRegex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitTypeComptageRegex02(...).______________
	


	/**
	 * retourne le messageSectionHitTypeComptageNomenclature03 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitTypeComptageNomenclature03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitTypeComptageNomenclature03 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitTypeComptageNomenclature03() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitTypeComptageNomenclature03
					, fournirKeyMessageSectionHitTypeComptageNomenclature03()
					, MESSAGE_SECTIONHIT_TYPECOMPTAGE_NOMENCLATURE_03_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitTypeComptageNomenclature03().______
	

	
	/**
	 * Getter de la clé du messageSectionHitTypeComptageNomenclature03 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.typeComptage.nomenclature".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_TYPECOMPTAGE_NOMENCLATURE_03 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitTypeComptageNomenclature03() {
		return KEY_MESSAGE_SECTIONHIT_TYPECOMPTAGE_NOMENCLATURE_03;
	} // Fin de fournirKeyMessageSectionHitTypeComptageNomenclature03().________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitTypeComptageNomenclature03 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitTypeComptageNomenclature03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitTypeComptageNomenclature03 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitTypeComptageNomenclature03() 
													throws Exception {
		return fournirMessageSectionHitTypeComptageNomenclature03();
	} // Fin de getMessageSectionHitTypeComptageNomenclature03().__________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitTypeComptageNomenclature03 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitTypeComptageNomenclature03.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitTypeComptageNomenclature03(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitTypeComptageNomenclature03
							, fournirKeyMessageSectionHitTypeComptageNomenclature03());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitTypeComptageNomenclature03(...)._______


	
	/* 13 - classementRoute. ****************/
	/**
	 * retourne le messageSectionHitClassementRouteRenseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitClassementRouteRenseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitClassementRouteRenseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitClassementRouteRenseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitClassementRouteRenseigne01
					, fournirKeyMessageSectionHitClassementRouteRenseigne01()
					, MESSAGE_SECTIONHIT_CLASSEMENTROUTE_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitClassementRouteRenseigne01().______
	

	
	/**
	 * Getter de la clé du messageSectionHitClassementRouteRenseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.classementRoute.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_CLASSEMENTROUTE_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitClassementRouteRenseigne01() {
		return KEY_MESSAGE_SECTIONHIT_CLASSEMENTROUTE_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitClassementRouteRenseigne01().___



	/**
	 * Getter du <b>SINGLETON de messageSectionHitClassementRouteRenseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitClassementRouteRenseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitClassementRouteRenseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitClassementRouteRenseigne01() 
											throws Exception {
		return fournirMessageSectionHitClassementRouteRenseigne01();
	} // Fin de getMessageSectionHitClassementRouteRenseigne01().__________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitClassementRouteRenseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitClassementRouteRenseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitClassementRouteRenseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitClassementRouteRenseigne01
							, fournirKeyMessageSectionHitClassementRouteRenseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitClassementRouteRenseigne01(...)._______



	/**
	 * retourne le messageSectionHitClassementRouteRegex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitClassementRouteRegex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitClassementRouteRegex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitClassementRouteRegex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitClassementRouteRegex02
					, fournirKeyMessageSectionHitClassementRouteRegex02()
					, MESSAGE_SECTIONHIT_CLASSEMENTROUTE_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitClassementRouteRegex02().__________
	

	
	/**
	 * Getter de la clé du messageSectionHitClassementRouteRegex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.classementRoute.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_CLASSEMENTROUTE_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitClassementRouteRegex02() {
		return KEY_MESSAGE_SECTIONHIT_CLASSEMENTROUTE_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitClassementRouteRegex02()._______



	/**
	 * Getter du <b>SINGLETON de messageSectionHitClassementRouteRegex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitClassementRouteRegex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitClassementRouteRegex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitClassementRouteRegex02() 
													throws Exception {
		return fournirMessageSectionHitClassementRouteRegex02();
	} // Fin de getMessageSectionHitClassementRouteRegex02().______________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitClassementRouteRegex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitClassementRouteRegex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitClassementRouteRegex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitClassementRouteRegex02
							, fournirKeyMessageSectionHitClassementRouteRegex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitClassementRouteRegex02(...).___________
	


	/**
	 * retourne le messageSectionHitClassementRouteNomenclature03 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitClassementRouteNomenclature03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitClassementRouteNomenclature03 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitClassementRouteNomenclature03() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitClassementRouteNomenclature03
					, fournirKeyMessageSectionHitClassementRouteNomenclature03()
					, MESSAGE_SECTIONHIT_CLASSEMENTROUTE_NOMENCLATURE_03_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitClassementRouteNomenclature03().___
	

	
	/**
	 * Getter de la clé du messageSectionHitClassementRouteNomenclature03 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.classementRoute.nomenclature".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_CLASSEMENTROUTE_NOMENCLATURE_03 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitClassementRouteNomenclature03() {
		return KEY_MESSAGE_SECTIONHIT_CLASSEMENTROUTE_NOMENCLATURE_03;
	} // Fin de fournirKeyMessageSectionHitClassementRouteNomenclature03().



	/**
	 * Getter du <b>SINGLETON de messageSectionHitClassementRouteNomenclature03 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitClassementRouteNomenclature03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitClassementRouteNomenclature03 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitClassementRouteNomenclature03() 
													throws Exception {
		return fournirMessageSectionHitClassementRouteNomenclature03();
	} // Fin de getMessageSectionHitClassementRouteNomenclature03()._______
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitClassementRouteNomenclature03 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitClassementRouteNomenclature03.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitClassementRouteNomenclature03(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitClassementRouteNomenclature03
							, fournirKeyMessageSectionHitClassementRouteNomenclature03());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitClassementRouteNomenclature03(...).____


	
	/* 14 - classeLargeurChausseeU. ****************/
	/**
	 * retourne le messageSectionHitClasseLargeurChausseeURenseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitClasseLargeurChausseeURenseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitClasseLargeurChausseeURenseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitClasseLargeurChausseeURenseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitClasseLargeurChausseeURenseigne01
					, fournirKeyMessageSectionHitClasseLargeurChausseeURenseigne01()
					, MESSAGE_SECTIONHIT_CLASSELARGEURCHAUSSEEU_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitClasseLargeurChausseeURenseigne01().
	

	
	/**
	 * Getter de la clé du messageSectionHitClasseLargeurChausseeURenseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.classeLargeurChausseeU.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_CLASSELARGEURCHAUSSEEU_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitClasseLargeurChausseeURenseigne01() {
		return KEY_MESSAGE_SECTIONHIT_CLASSELARGEURCHAUSSEEU_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitClasseLargeurChausseeURenseigne01().



	/**
	 * Getter du <b>SINGLETON de messageSectionHitClasseLargeurChausseeURenseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitClasseLargeurChausseeURenseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitClasseLargeurChausseeURenseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitClasseLargeurChausseeURenseigne01() 
											throws Exception {
		return fournirMessageSectionHitClasseLargeurChausseeURenseigne01();
	} // Fin de getMessageSectionHitClasseLargeurChausseeURenseigne01().___
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitClasseLargeurChausseeURenseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitClasseLargeurChausseeURenseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitClasseLargeurChausseeURenseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitClasseLargeurChausseeURenseigne01
							, fournirKeyMessageSectionHitClasseLargeurChausseeURenseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitClasseLargeurChausseeURenseigne01(...).



	/**
	 * retourne le messageSectionHitClasseLargeurChausseeURegex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitClasseLargeurChausseeURegex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitClasseLargeurChausseeURegex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitClasseLargeurChausseeURegex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitClasseLargeurChausseeURegex02
					, fournirKeyMessageSectionHitClasseLargeurChausseeURegex02()
					, MESSAGE_SECTIONHIT_CLASSELARGEURCHAUSSEEU_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitClasseLargeurChausseeURegex02().___
	

	
	/**
	 * Getter de la clé du messageSectionHitClasseLargeurChausseeURegex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.classeLargeurChausseeU.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_CLASSELARGEURCHAUSSEEU_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitClasseLargeurChausseeURegex02() {
		return KEY_MESSAGE_SECTIONHIT_CLASSELARGEURCHAUSSEEU_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitClasseLargeurChausseeURegex02().



	/**
	 * Getter du <b>SINGLETON de messageSectionHitClasseLargeurChausseeURegex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitClasseLargeurChausseeURegex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitClasseLargeurChausseeURegex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitClasseLargeurChausseeURegex02() 
													throws Exception {
		return fournirMessageSectionHitClasseLargeurChausseeURegex02();
	} // Fin de getMessageSectionHitClasseLargeurChausseeURegex02()._______
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitClasseLargeurChausseeURegex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitClasseLargeurChausseeURegex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitClasseLargeurChausseeURegex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitClasseLargeurChausseeURegex02
							, fournirKeyMessageSectionHitClasseLargeurChausseeURegex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitClasseLargeurChausseeURegex02(...).____
	


	/**
	 * retourne le messageSectionHitClasseLargeurChausseeUNomenclature03 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitClasseLargeurChausseeUNomenclature03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitClasseLargeurChausseeUNomenclature03 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitClasseLargeurChausseeUNomenclature03() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitClasseLargeurChausseeUNomenclature03
					, fournirKeyMessageSectionHitClasseLargeurChausseeUNomenclature03()
					, MESSAGE_SECTIONHIT_CLASSELARGEURCHAUSSEEU_NOMENCLATURE_03_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitClasseLargeurChausseeUNomenclature03().
	

	
	/**
	 * Getter de la clé du messageSectionHitClasseLargeurChausseeUNomenclature03 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.classeLargeurChausseeU.nomenclature".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_CLASSELARGEURCHAUSSEEU_NOMENCLATURE_03 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitClasseLargeurChausseeUNomenclature03() {
		return KEY_MESSAGE_SECTIONHIT_CLASSELARGEURCHAUSSEEU_NOMENCLATURE_03;
	} // Fin de fournirKeyMessageSectionHitClasseLargeurChausseeUNomenclature03().



	/**
	 * Getter du <b>SINGLETON de messageSectionHitClasseLargeurChausseeUNomenclature03 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitClasseLargeurChausseeUNomenclature03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitClasseLargeurChausseeUNomenclature03 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitClasseLargeurChausseeUNomenclature03() 
													throws Exception {
		return fournirMessageSectionHitClasseLargeurChausseeUNomenclature03();
	} // Fin de getMessageSectionHitClasseLargeurChausseeUNomenclature03().
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitClasseLargeurChausseeUNomenclature03 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitClasseLargeurChausseeUNomenclature03.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitClasseLargeurChausseeUNomenclature03(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitClasseLargeurChausseeUNomenclature03
							, fournirKeyMessageSectionHitClasseLargeurChausseeUNomenclature03());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitClasseLargeurChausseeUNomenclature03(...).


	
	/* 15 - classeLargeurChausseesS. ****************/
	/**
	 * retourne le messageSectionHitClasseLargeurChausseesSRenseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitClasseLargeurChausseesSRenseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitClasseLargeurChausseesSRenseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitClasseLargeurChausseesSRenseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitClasseLargeurChausseesSRenseigne01
					, fournirKeyMessageSectionHitClasseLargeurChausseesSRenseigne01()
					, MESSAGE_SECTIONHIT_CLASSELARGEURCHAUSSEESS_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitClasseLargeurChausseesSRenseigne01().
	

	
	/**
	 * Getter de la clé du messageSectionHitClasseLargeurChausseesSRenseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.classeLargeurChausseesS.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_CLASSELARGEURCHAUSSEESS_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitClasseLargeurChausseesSRenseigne01() {
		return KEY_MESSAGE_SECTIONHIT_CLASSELARGEURCHAUSSEESS_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitClasseLargeurChausseesSRenseigne01().



	/**
	 * Getter du <b>SINGLETON de messageSectionHitClasseLargeurChausseesSRenseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitClasseLargeurChausseesSRenseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitClasseLargeurChausseesSRenseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitClasseLargeurChausseesSRenseigne01() 
											throws Exception {
		return fournirMessageSectionHitClasseLargeurChausseesSRenseigne01();
	} // Fin de getMessageSectionHitClasseLargeurChausseesSRenseigne01().__
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitClasseLargeurChausseesSRenseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitClasseLargeurChausseesSRenseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitClasseLargeurChausseesSRenseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitClasseLargeurChausseesSRenseigne01
							, fournirKeyMessageSectionHitClasseLargeurChausseesSRenseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitClasseLargeurChausseesSRenseigne01(...).



	/**
	 * retourne le messageSectionHitClasseLargeurChausseesSRegex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitClasseLargeurChausseesSRegex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitClasseLargeurChausseesSRegex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitClasseLargeurChausseesSRegex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitClasseLargeurChausseesSRegex02
					, fournirKeyMessageSectionHitClasseLargeurChausseesSRegex02()
					, MESSAGE_SECTIONHIT_CLASSELARGEURCHAUSSEESS_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitClasseLargeurChausseesSRegex02().__
	

	
	/**
	 * Getter de la clé du messageSectionHitClasseLargeurChausseesSRegex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.classeLargeurChausseesS.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_CLASSELARGEURCHAUSSEESS_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitClasseLargeurChausseesSRegex02() {
		return KEY_MESSAGE_SECTIONHIT_CLASSELARGEURCHAUSSEESS_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitClasseLargeurChausseesSRegex02().



	/**
	 * Getter du <b>SINGLETON de messageSectionHitClasseLargeurChausseesSRegex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitClasseLargeurChausseesSRegex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitClasseLargeurChausseesSRegex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitClasseLargeurChausseesSRegex02() 
													throws Exception {
		return fournirMessageSectionHitClasseLargeurChausseesSRegex02();
	} // Fin de getMessageSectionHitClasseLargeurChausseesSRegex02().______
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitClasseLargeurChausseesSRegex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitClasseLargeurChausseesSRegex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitClasseLargeurChausseesSRegex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitClasseLargeurChausseesSRegex02
							, fournirKeyMessageSectionHitClasseLargeurChausseesSRegex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitClasseLargeurChausseesSRegex02(...).___
	


	/**
	 * retourne le messageSectionHitClasseLargeurChausseesSNomenclature03 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitClasseLargeurChausseesSNomenclature03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitClasseLargeurChausseesSNomenclature03 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitClasseLargeurChausseesSNomenclature03() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitClasseLargeurChausseesSNomenclature03
					, fournirKeyMessageSectionHitClasseLargeurChausseesSNomenclature03()
					, MESSAGE_SECTIONHIT_CLASSELARGEURCHAUSSEESS_NOMENCLATURE_03_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitClasseLargeurChausseesSNomenclature03().
	

	
	/**
	 * Getter de la clé du messageSectionHitClasseLargeurChausseesSNomenclature03 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.classeLargeurChausseesS.nomenclature".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_CLASSELARGEURCHAUSSEESS_NOMENCLATURE_03 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitClasseLargeurChausseesSNomenclature03() {
		return KEY_MESSAGE_SECTIONHIT_CLASSELARGEURCHAUSSEESS_NOMENCLATURE_03;
	} // Fin de fournirKeyMessageSectionHitClasseLargeurChausseesSNomenclature03().



	/**
	 * Getter du <b>SINGLETON de messageSectionHitClasseLargeurChausseesSNomenclature03 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitClasseLargeurChausseesSNomenclature03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitClasseLargeurChausseesSNomenclature03 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitClasseLargeurChausseesSNomenclature03() 
													throws Exception {
		return fournirMessageSectionHitClasseLargeurChausseesSNomenclature03();
	} // Fin de getMessageSectionHitClasseLargeurChausseesSNomenclature03().
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitClasseLargeurChausseesSNomenclature03 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitClasseLargeurChausseesSNomenclature03.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitClasseLargeurChausseesSNomenclature03(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitClasseLargeurChausseesSNomenclature03
							, fournirKeyMessageSectionHitClasseLargeurChausseesSNomenclature03());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitClasseLargeurChausseesSNomenclature03(...).


	
	/* 16 - typeReseau. ****************/
	/**
	 * retourne le messageSectionHitTypeReseauRenseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitTypeReseauRenseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitTypeReseauRenseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitTypeReseauRenseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitTypeReseauRenseigne01
					, fournirKeyMessageSectionHitTypeReseauRenseigne01()
					, MESSAGE_SECTIONHIT_TYPERESEAU_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitTypeReseauRenseigne01().___________
	

	
	/**
	 * Getter de la clé du messageSectionHitTypeReseauRenseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.typeReseau.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_TYPERESEAU_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitTypeReseauRenseigne01() {
		return KEY_MESSAGE_SECTIONHIT_TYPERESEAU_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitTypeReseauRenseigne01().________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitTypeReseauRenseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitTypeReseauRenseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitTypeReseauRenseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitTypeReseauRenseigne01() 
											throws Exception {
		return fournirMessageSectionHitTypeReseauRenseigne01();
	} // Fin de getMessageSectionHitTypeReseauRenseigne01()._______________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitTypeReseauRenseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitTypeReseauRenseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitTypeReseauRenseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitTypeReseauRenseigne01
							, fournirKeyMessageSectionHitTypeReseauRenseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitTypeReseauRenseigne01(...).____________



	/**
	 * retourne le messageSectionHitTypeReseauRegex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitTypeReseauRegex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitTypeReseauRegex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitTypeReseauRegex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitTypeReseauRegex02
					, fournirKeyMessageSectionHitTypeReseauRegex02()
					, MESSAGE_SECTIONHIT_TYPERESEAU_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitTypeReseauRegex02()._______________
	

	
	/**
	 * Getter de la clé du messageSectionHitTypeReseauRegex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.typeReseau.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_TYPERESEAU_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitTypeReseauRegex02() {
		return KEY_MESSAGE_SECTIONHIT_TYPERESEAU_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitTypeReseauRegex02().____________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitTypeReseauRegex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitTypeReseauRegex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitTypeReseauRegex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitTypeReseauRegex02() 
													throws Exception {
		return fournirMessageSectionHitTypeReseauRegex02();
	} // Fin de getMessageSectionHitTypeReseauRegex02().___________________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitTypeReseauRegex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitTypeReseauRegex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitTypeReseauRegex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitTypeReseauRegex02
							, fournirKeyMessageSectionHitTypeReseauRegex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitTypeReseauRegex02(...).________________
	


	/**
	 * retourne le messageSectionHitTypeReseauNomenclature03 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitTypeReseauNomenclature03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitTypeReseauNomenclature03 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitTypeReseauNomenclature03() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitTypeReseauNomenclature03
					, fournirKeyMessageSectionHitTypeReseauNomenclature03()
					, MESSAGE_SECTIONHIT_TYPERESEAU_NOMENCLATURE_03_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitTypeReseauNomenclature03().________
	

	
	/**
	 * Getter de la clé du messageSectionHitTypeReseauNomenclature03 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.typeReseau.nomenclature".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_TYPERESEAU_NOMENCLATURE_03 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitTypeReseauNomenclature03() {
		return KEY_MESSAGE_SECTIONHIT_TYPERESEAU_NOMENCLATURE_03;
	} // Fin de fournirKeyMessageSectionHitTypeReseauNomenclature03()._____



	/**
	 * Getter du <b>SINGLETON de messageSectionHitTypeReseauNomenclature03 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitTypeReseauNomenclature03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitTypeReseauNomenclature03 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitTypeReseauNomenclature03() 
													throws Exception {
		return fournirMessageSectionHitTypeReseauNomenclature03();
	} // Fin de getMessageSectionHitTypeReseauNomenclature03().____________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitTypeReseauNomenclature03 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitTypeReseauNomenclature03.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitTypeReseauNomenclature03(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitTypeReseauNomenclature03
							, fournirKeyMessageSectionHitTypeReseauNomenclature03());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitTypeReseauNomenclature03(...)._________


	
	/* 17 - pRoupK. ****************/
	/**
	 * retourne le messageSectionHitPRoupKRenseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitPRoupKRenseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitPRoupKRenseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitPRoupKRenseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitPRoupKRenseigne01
					, fournirKeyMessageSectionHitPRoupKRenseigne01()
					, MESSAGE_SECTIONHIT_PROUPK_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitPRoupKRenseigne01()._______________
	

	
	/**
	 * Getter de la clé du messageSectionHitPRoupKRenseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.pRoupK.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_PROUPK_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitPRoupKRenseigne01() {
		return KEY_MESSAGE_SECTIONHIT_PROUPK_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitPRoupKRenseigne01().____________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitPRoupKRenseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitPRoupKRenseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitPRoupKRenseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitPRoupKRenseigne01() 
											throws Exception {
		return fournirMessageSectionHitPRoupKRenseigne01();
	} // Fin de getMessageSectionHitPRoupKRenseigne01().___________________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitPRoupKRenseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitPRoupKRenseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitPRoupKRenseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitPRoupKRenseigne01
							, fournirKeyMessageSectionHitPRoupKRenseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitPRoupKRenseigne01(...).________________



	/**
	 * retourne le messageSectionHitPRoupKRegex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitPRoupKRegex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitPRoupKRegex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitPRoupKRegex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitPRoupKRegex02
					, fournirKeyMessageSectionHitPRoupKRegex02()
					, MESSAGE_SECTIONHIT_PROUPK_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitPRoupKRegex02().___________________
	

	
	/**
	 * Getter de la clé du messageSectionHitPRoupKRegex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.pRoupK.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_PROUPK_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitPRoupKRegex02() {
		return KEY_MESSAGE_SECTIONHIT_PROUPK_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitPRoupKRegex02().________________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitPRoupKRegex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitPRoupKRegex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitPRoupKRegex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitPRoupKRegex02() 
													throws Exception {
		return fournirMessageSectionHitPRoupKRegex02();
	} // Fin de getMessageSectionHitPRoupKRegex02()._______________________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitPRoupKRegex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitPRoupKRegex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitPRoupKRegex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitPRoupKRegex02
							, fournirKeyMessageSectionHitPRoupKRegex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitPRoupKRegex02(...).____________________
	


	/**
	 * retourne le messageSectionHitPRoupKNomenclature03 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitPRoupKNomenclature03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitPRoupKNomenclature03 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitPRoupKNomenclature03() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitPRoupKNomenclature03
					, fournirKeyMessageSectionHitPRoupKNomenclature03()
					, MESSAGE_SECTIONHIT_PROUPK_NOMENCLATURE_03_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitPRoupKNomenclature03().____________
	

	
	/**
	 * Getter de la clé du messageSectionHitPRoupKNomenclature03 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.pRoupK.nomenclature".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_PROUPK_NOMENCLATURE_03 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitPRoupKNomenclature03() {
		return KEY_MESSAGE_SECTIONHIT_PROUPK_NOMENCLATURE_03;
	} // Fin de fournirKeyMessageSectionHitPRoupKNomenclature03()._________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitPRoupKNomenclature03 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitPRoupKNomenclature03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitPRoupKNomenclature03 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitPRoupKNomenclature03() 
													throws Exception {
		return fournirMessageSectionHitPRoupKNomenclature03();
	} // Fin de getMessageSectionHitPRoupKNomenclature03().________________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitPRoupKNomenclature03 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitPRoupKNomenclature03.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitPRoupKNomenclature03(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitPRoupKNomenclature03
							, fournirKeyMessageSectionHitPRoupKNomenclature03());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitPRoupKNomenclature03(...)._____________


	
	/* 18 - lieuDitOrigine. ****************/
	/**
	 * retourne le messageSectionHitLieuDitOrigineRenseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitLieuDitOrigineRenseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitLieuDitOrigineRenseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitLieuDitOrigineRenseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitLieuDitOrigineRenseigne01
					, fournirKeyMessageSectionHitLieuDitOrigineRenseigne01()
					, MESSAGE_SECTIONHIT_LIEUDITORIGINE_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitLieuDitOrigineRenseigne01()._______
	

	
	/**
	 * Getter de la clé du messageSectionHitLieuDitOrigineRenseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.lieuDitOrigine.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_LIEUDITORIGINE_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitLieuDitOrigineRenseigne01() {
		return KEY_MESSAGE_SECTIONHIT_LIEUDITORIGINE_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitLieuDitOrigineRenseigne01().____



	/**
	 * Getter du <b>SINGLETON de messageSectionHitLieuDitOrigineRenseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitLieuDitOrigineRenseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitLieuDitOrigineRenseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitLieuDitOrigineRenseigne01() 
											throws Exception {
		return fournirMessageSectionHitLieuDitOrigineRenseigne01();
	} // Fin de getMessageSectionHitLieuDitOrigineRenseigne01().___________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitLieuDitOrigineRenseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitLieuDitOrigineRenseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitLieuDitOrigineRenseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitLieuDitOrigineRenseigne01
							, fournirKeyMessageSectionHitLieuDitOrigineRenseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitLieuDitOrigineRenseigne01(...).________



	/**
	 * retourne le messageSectionHitLieuDitOrigineRegex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitLieuDitOrigineRegex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitLieuDitOrigineRegex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitLieuDitOrigineRegex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitLieuDitOrigineRegex02
					, fournirKeyMessageSectionHitLieuDitOrigineRegex02()
					, MESSAGE_SECTIONHIT_LIEUDITORIGINE_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitLieuDitOrigineRegex02().___________
	

	
	/**
	 * Getter de la clé du messageSectionHitLieuDitOrigineRegex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.lieuDitOrigine.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_LIEUDITORIGINE_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitLieuDitOrigineRegex02() {
		return KEY_MESSAGE_SECTIONHIT_LIEUDITORIGINE_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitLieuDitOrigineRegex02().________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitLieuDitOrigineRegex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitLieuDitOrigineRegex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitLieuDitOrigineRegex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitLieuDitOrigineRegex02() 
													throws Exception {
		return fournirMessageSectionHitLieuDitOrigineRegex02();
	} // Fin de getMessageSectionHitLieuDitOrigineRegex02()._______________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitLieuDitOrigineRegex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitLieuDitOrigineRegex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitLieuDitOrigineRegex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitLieuDitOrigineRegex02
							, fournirKeyMessageSectionHitLieuDitOrigineRegex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitLieuDitOrigineRegex02(...).____________


	
	/* 19 - prOrigine. ****************/
	/**
	 * retourne le messageSectionHitPrOrigineRenseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitPrOrigineRenseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitPrOrigineRenseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitPrOrigineRenseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitPrOrigineRenseigne01
					, fournirKeyMessageSectionHitPrOrigineRenseigne01()
					, MESSAGE_SECTIONHIT_PRORIGINE_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitPrOrigineRenseigne01().____________
	

	
	/**
	 * Getter de la clé du messageSectionHitPrOrigineRenseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.prOrigine.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_PRORIGINE_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitPrOrigineRenseigne01() {
		return KEY_MESSAGE_SECTIONHIT_PRORIGINE_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitPrOrigineRenseigne01()._________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitPrOrigineRenseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitPrOrigineRenseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitPrOrigineRenseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitPrOrigineRenseigne01() 
											throws Exception {
		return fournirMessageSectionHitPrOrigineRenseigne01();
	} // Fin de getMessageSectionHitPrOrigineRenseigne01().________________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitPrOrigineRenseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitPrOrigineRenseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitPrOrigineRenseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitPrOrigineRenseigne01
							, fournirKeyMessageSectionHitPrOrigineRenseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitPrOrigineRenseigne01(...)._____________



	/**
	 * retourne le messageSectionHitPrOrigineRegex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitPrOrigineRegex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitPrOrigineRegex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitPrOrigineRegex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitPrOrigineRegex02
					, fournirKeyMessageSectionHitPrOrigineRegex02()
					, MESSAGE_SECTIONHIT_PRORIGINE_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitPrOrigineRegex02().________________
	

	
	/**
	 * Getter de la clé du messageSectionHitPrOrigineRegex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.prOrigine.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_PRORIGINE_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitPrOrigineRegex02() {
		return KEY_MESSAGE_SECTIONHIT_PRORIGINE_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitPrOrigineRegex02()._____________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitPrOrigineRegex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitPrOrigineRegex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitPrOrigineRegex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitPrOrigineRegex02() 
													throws Exception {
		return fournirMessageSectionHitPrOrigineRegex02();
	} // Fin de getMessageSectionHitPrOrigineRegex02().____________________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitPrOrigineRegex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitPrOrigineRegex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitPrOrigineRegex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitPrOrigineRegex02
							, fournirKeyMessageSectionHitPrOrigineRegex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitPrOrigineRegex02(...)._________________



	/**
	 * retourne le messageSectionHitPrOrigineNumerique03 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitPrOrigineNumerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitPrOrigineNumerique03 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitPrOrigineNumerique03() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitPrOrigineNumerique03
					, fournirKeyMessageSectionHitPrOrigineNumerique03()
					, MESSAGE_SECTIONHIT_PRORIGINE_NUMERIQUE_03_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitPrOrigineNumerique03().____________
	

	
	/**
	 * Getter de la clé du messageSectionHitPrOrigineNumerique03 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.prOrigine.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_PRORIGINE_NUMERIQUE_03 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitPrOrigineNumerique03() {
		return KEY_MESSAGE_SECTIONHIT_PRORIGINE_NUMERIQUE_03;
	} // Fin de fournirKeyMessageSectionHitPrOrigineNumerique03()._________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitPrOrigineNumerique03 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitPrOrigineNumerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitPrOrigineNumerique03 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitPrOrigineNumerique03() 
													throws Exception {
		return fournirMessageSectionHitPrOrigineNumerique03();
	} // Fin de getMessageSectionHitPrOrigineNumerique03().________________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitPrOrigineNumerique03 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitPrOrigineNumerique03.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitPrOrigineNumerique03(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitPrOrigineNumerique03
							, fournirKeyMessageSectionHitPrOrigineNumerique03());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitPrOrigineNumerique03(...)._____________	


	
	/* 20 - absOrigine. ****************/
	/**
	 * retourne le messageSectionHitAbsOrigineRenseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitAbsOrigineRenseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitAbsOrigineRenseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitAbsOrigineRenseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitAbsOrigineRenseigne01
					, fournirKeyMessageSectionHitAbsOrigineRenseigne01()
					, MESSAGE_SECTIONHIT_ABSORIGINE_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitAbsOrigineRenseigne01().___________
	

	
	/**
	 * Getter de la clé du messageSectionHitAbsOrigineRenseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.absOrigine.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_ABSORIGINE_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitAbsOrigineRenseigne01() {
		return KEY_MESSAGE_SECTIONHIT_ABSORIGINE_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitAbsOrigineRenseigne01().________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitAbsOrigineRenseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitAbsOrigineRenseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitAbsOrigineRenseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitAbsOrigineRenseigne01() 
											throws Exception {
		return fournirMessageSectionHitAbsOrigineRenseigne01();
	} // Fin de getMessageSectionHitAbsOrigineRenseigne01()._______________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitAbsOrigineRenseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitAbsOrigineRenseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitAbsOrigineRenseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitAbsOrigineRenseigne01
							, fournirKeyMessageSectionHitAbsOrigineRenseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitAbsOrigineRenseigne01(...).____________



	/**
	 * retourne le messageSectionHitAbsOrigineRegex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitAbsOrigineRegex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitAbsOrigineRegex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitAbsOrigineRegex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitAbsOrigineRegex02
					, fournirKeyMessageSectionHitAbsOrigineRegex02()
					, MESSAGE_SECTIONHIT_ABSORIGINE_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitAbsOrigineRegex02()._______________
	

	
	/**
	 * Getter de la clé du messageSectionHitAbsOrigineRegex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.absOrigine.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_ABSORIGINE_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitAbsOrigineRegex02() {
		return KEY_MESSAGE_SECTIONHIT_ABSORIGINE_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitAbsOrigineRegex02().____________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitAbsOrigineRegex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitAbsOrigineRegex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitAbsOrigineRegex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitAbsOrigineRegex02() 
													throws Exception {
		return fournirMessageSectionHitAbsOrigineRegex02();
	} // Fin de getMessageSectionHitAbsOrigineRegex02().___________________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitAbsOrigineRegex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitAbsOrigineRegex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitAbsOrigineRegex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitAbsOrigineRegex02
							, fournirKeyMessageSectionHitAbsOrigineRegex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitAbsOrigineRegex02(...).________________



	/**
	 * retourne le messageSectionHitAbsOrigineNumerique03 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitAbsOrigineNumerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitAbsOrigineNumerique03 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitAbsOrigineNumerique03() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitAbsOrigineNumerique03
					, fournirKeyMessageSectionHitAbsOrigineNumerique03()
					, MESSAGE_SECTIONHIT_ABSORIGINE_NUMERIQUE_03_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitAbsOrigineNumerique03().___________
	

	
	/**
	 * Getter de la clé du messageSectionHitAbsOrigineNumerique03 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.prOrigine.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_ABSORIGINE_NUMERIQUE_03 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitAbsOrigineNumerique03() {
		return KEY_MESSAGE_SECTIONHIT_ABSORIGINE_NUMERIQUE_03;
	} // Fin de fournirKeyMessageSectionHitAbsOrigineNumerique03().________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitAbsOrigineNumerique03 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitAbsOrigineNumerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitAbsOrigineNumerique03 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitAbsOrigineNumerique03() 
													throws Exception {
		return fournirMessageSectionHitAbsOrigineNumerique03();
	} // Fin de getMessageSectionHitAbsOrigineNumerique03()._______________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitAbsOrigineNumerique03 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitAbsOrigineNumerique03.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitAbsOrigineNumerique03(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitAbsOrigineNumerique03
							, fournirKeyMessageSectionHitAbsOrigineNumerique03());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitAbsOrigineNumerique03(...).____________	


	
	/* 21 - lieuDitExtremite. ****************/
	/**
	 * retourne le messageSectionHitLieuDitExtremiteRenseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitLieuDitExtremiteRenseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitLieuDitExtremiteRenseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitLieuDitExtremiteRenseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitLieuDitExtremiteRenseigne01
					, fournirKeyMessageSectionHitLieuDitExtremiteRenseigne01()
					, MESSAGE_SECTIONHIT_LIEUDITEXTREMITE_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitLieuDitExtremiteRenseigne01()._____
	

	
	/**
	 * Getter de la clé du messageSectionHitLieuDitExtremiteRenseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.lieuDitExtremite.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_LIEUDITEXTREMITE_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitLieuDitExtremiteRenseigne01() {
		return KEY_MESSAGE_SECTIONHIT_LIEUDITEXTREMITE_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitLieuDitExtremiteRenseigne01().__



	/**
	 * Getter du <b>SINGLETON de messageSectionHitLieuDitExtremiteRenseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitLieuDitExtremiteRenseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitLieuDitExtremiteRenseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitLieuDitExtremiteRenseigne01() 
											throws Exception {
		return fournirMessageSectionHitLieuDitExtremiteRenseigne01();
	} // Fin de getMessageSectionHitLieuDitExtremiteRenseigne01()._________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitLieuDitExtremiteRenseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitLieuDitExtremiteRenseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitLieuDitExtremiteRenseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitLieuDitExtremiteRenseigne01
							, fournirKeyMessageSectionHitLieuDitExtremiteRenseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitLieuDitExtremiteRenseigne01(...).______



	/**
	 * retourne le messageSectionHitLieuDitExtremiteRegex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitLieuDitExtremiteRegex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitLieuDitExtremiteRegex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitLieuDitExtremiteRegex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitLieuDitExtremiteRegex02
					, fournirKeyMessageSectionHitLieuDitExtremiteRegex02()
					, MESSAGE_SECTIONHIT_LIEUDITEXTREMITE_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitLieuDitExtremiteRegex02()._________
	

	
	/**
	 * Getter de la clé du messageSectionHitLieuDitExtremiteRegex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.lieuDitExtremite.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_LIEUDITEXTREMITE_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitLieuDitExtremiteRegex02() {
		return KEY_MESSAGE_SECTIONHIT_LIEUDITEXTREMITE_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitLieuDitExtremiteRegex02().______



	/**
	 * Getter du <b>SINGLETON de messageSectionHitLieuDitExtremiteRegex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitLieuDitExtremiteRegex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitLieuDitExtremiteRegex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitLieuDitExtremiteRegex02() 
													throws Exception {
		return fournirMessageSectionHitLieuDitExtremiteRegex02();
	} // Fin de getMessageSectionHitLieuDitExtremiteRegex02()._____________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitLieuDitExtremiteRegex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitLieuDitExtremiteRegex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitLieuDitExtremiteRegex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitLieuDitExtremiteRegex02
							, fournirKeyMessageSectionHitLieuDitExtremiteRegex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitLieuDitExtremiteRegex02(...).__________


	
	/* 22 - prExtremite. ****************/
	/**
	 * retourne le messageSectionHitPrExtremiteRenseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitPrExtremiteRenseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitPrExtremiteRenseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitPrExtremiteRenseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitPrExtremiteRenseigne01
					, fournirKeyMessageSectionHitPrExtremiteRenseigne01()
					, MESSAGE_SECTIONHIT_PREXTREMITE_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitPrExtremiteRenseigne01().__________
	

	
	/**
	 * Getter de la clé du messageSectionHitPrExtremiteRenseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.prExtremite.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_PREXTREMITE_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitPrExtremiteRenseigne01() {
		return KEY_MESSAGE_SECTIONHIT_PREXTREMITE_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitPrExtremiteRenseigne01()._______



	/**
	 * Getter du <b>SINGLETON de messageSectionHitPrExtremiteRenseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitPrExtremiteRenseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitPrExtremiteRenseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitPrExtremiteRenseigne01() 
											throws Exception {
		return fournirMessageSectionHitPrExtremiteRenseigne01();
	} // Fin de getMessageSectionHitPrExtremiteRenseigne01().______________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitPrExtremiteRenseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitPrExtremiteRenseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitPrExtremiteRenseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitPrExtremiteRenseigne01
							, fournirKeyMessageSectionHitPrExtremiteRenseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitPrExtremiteRenseigne01(...).___________



	/**
	 * retourne le messageSectionHitPrExtremiteRegex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitPrExtremiteRegex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitPrExtremiteRegex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitPrExtremiteRegex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitPrExtremiteRegex02
					, fournirKeyMessageSectionHitPrExtremiteRegex02()
					, MESSAGE_SECTIONHIT_PREXTREMITE_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitPrExtremiteRegex02().______________
	

	
	/**
	 * Getter de la clé du messageSectionHitPrExtremiteRegex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.prExtremite.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_PREXTREMITE_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitPrExtremiteRegex02() {
		return KEY_MESSAGE_SECTIONHIT_PREXTREMITE_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitPrExtremiteRegex02().___________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitPrExtremiteRegex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitPrExtremiteRegex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitPrExtremiteRegex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitPrExtremiteRegex02() 
													throws Exception {
		return fournirMessageSectionHitPrExtremiteRegex02();
	} // Fin de getMessageSectionHitPrExtremiteRegex02().__________________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitPrExtremiteRegex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitPrExtremiteRegex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitPrExtremiteRegex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitPrExtremiteRegex02
							, fournirKeyMessageSectionHitPrExtremiteRegex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitPrExtremiteRegex02(...)._______________



	/**
	 * retourne le messageSectionHitPrExtremiteNumerique03 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitPrExtremiteNumerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitPrExtremiteNumerique03 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitPrExtremiteNumerique03() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitPrExtremiteNumerique03
					, fournirKeyMessageSectionHitPrExtremiteNumerique03()
					, MESSAGE_SECTIONHIT_PREXTREMITE_NUMERIQUE_03_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitPrExtremiteNumerique03().__________
	

	
	/**
	 * Getter de la clé du messageSectionHitPrExtremiteNumerique03 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.prExtremite.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_PREXTREMITE_NUMERIQUE_03 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitPrExtremiteNumerique03() {
		return KEY_MESSAGE_SECTIONHIT_PREXTREMITE_NUMERIQUE_03;
	} // Fin de fournirKeyMessageSectionHitPrExtremiteNumerique03()._______



	/**
	 * Getter du <b>SINGLETON de messageSectionHitPrExtremiteNumerique03 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitPrExtremiteNumerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitPrExtremiteNumerique03 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitPrExtremiteNumerique03() 
													throws Exception {
		return fournirMessageSectionHitPrExtremiteNumerique03();
	} // Fin de getMessageSectionHitPrExtremiteNumerique03().______________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitPrExtremiteNumerique03 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitPrExtremiteNumerique03.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitPrExtremiteNumerique03(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitPrExtremiteNumerique03
							, fournirKeyMessageSectionHitPrExtremiteNumerique03());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitPrExtremiteNumerique03(...).___________	


	
	/* 23 - absExtremite. ****************/
	/**
	 * retourne le messageSectionHitAbsExtremiteRenseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitAbsExtremiteRenseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitAbsExtremiteRenseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitAbsExtremiteRenseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitAbsExtremiteRenseigne01
					, fournirKeyMessageSectionHitAbsExtremiteRenseigne01()
					, MESSAGE_SECTIONHIT_ABSEXTREMITE_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitAbsExtremiteRenseigne01()._________
	

	
	/**
	 * Getter de la clé du messageSectionHitAbsExtremiteRenseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.absExtremite.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_ABSEXTREMITE_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitAbsExtremiteRenseigne01() {
		return KEY_MESSAGE_SECTIONHIT_ABSEXTREMITE_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitAbsExtremiteRenseigne01().______



	/**
	 * Getter du <b>SINGLETON de messageSectionHitAbsExtremiteRenseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitAbsExtremiteRenseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitAbsExtremiteRenseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitAbsExtremiteRenseigne01() 
											throws Exception {
		return fournirMessageSectionHitAbsExtremiteRenseigne01();
	} // Fin de getMessageSectionHitAbsExtremiteRenseigne01()._____________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitAbsExtremiteRenseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitAbsExtremiteRenseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitAbsExtremiteRenseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitAbsExtremiteRenseigne01
							, fournirKeyMessageSectionHitAbsExtremiteRenseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitAbsExtremiteRenseigne01(...).__________



	/**
	 * retourne le messageSectionHitAbsExtremiteRegex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitAbsExtremiteRegex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitAbsExtremiteRegex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitAbsExtremiteRegex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitAbsExtremiteRegex02
					, fournirKeyMessageSectionHitAbsExtremiteRegex02()
					, MESSAGE_SECTIONHIT_ABSEXTREMITE_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitAbsExtremiteRegex02()._____________
	

	
	/**
	 * Getter de la clé du messageSectionHitAbsExtremiteRegex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.absExtremite.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_ABSEXTREMITE_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitAbsExtremiteRegex02() {
		return KEY_MESSAGE_SECTIONHIT_ABSEXTREMITE_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitAbsExtremiteRegex02().__________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitAbsExtremiteRegex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitAbsExtremiteRegex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitAbsExtremiteRegex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitAbsExtremiteRegex02() 
													throws Exception {
		return fournirMessageSectionHitAbsExtremiteRegex02();
	} // Fin de getMessageSectionHitAbsExtremiteRegex02()._________________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitAbsExtremiteRegex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitAbsExtremiteRegex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitAbsExtremiteRegex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitAbsExtremiteRegex02
							, fournirKeyMessageSectionHitAbsExtremiteRegex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitAbsExtremiteRegex02(...).______________



	/**
	 * retourne le messageSectionHitAbsExtremiteNumerique03 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitAbsExtremiteNumerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitAbsExtremiteNumerique03 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitAbsExtremiteNumerique03() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitAbsExtremiteNumerique03
					, fournirKeyMessageSectionHitAbsExtremiteNumerique03()
					, MESSAGE_SECTIONHIT_ABSEXTREMITE_NUMERIQUE_03_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitAbsExtremiteNumerique03()._________
	

	
	/**
	 * Getter de la clé du messageSectionHitAbsExtremiteNumerique03 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.prExtremite.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_ABSEXTREMITE_NUMERIQUE_03 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitAbsExtremiteNumerique03() {
		return KEY_MESSAGE_SECTIONHIT_ABSEXTREMITE_NUMERIQUE_03;
	} // Fin de fournirKeyMessageSectionHitAbsExtremiteNumerique03().________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitAbsExtremiteNumerique03 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitAbsExtremiteNumerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitAbsExtremiteNumerique03 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitAbsExtremiteNumerique03() 
													throws Exception {
		return fournirMessageSectionHitAbsExtremiteNumerique03();
	} // Fin de getMessageSectionHitAbsExtremiteNumerique03()._____________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitAbsExtremiteNumerique03 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitAbsExtremiteNumerique03.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitAbsExtremiteNumerique03(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitAbsExtremiteNumerique03
							, fournirKeyMessageSectionHitAbsExtremiteNumerique03());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitAbsExtremiteNumerique03(...).__________	


	
	/* 24 - lieuDitComptage. ****************/
	/**
	 * retourne le messageSectionHitLieuDitComptageRenseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitLieuDitComptageRenseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitLieuDitComptageRenseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitLieuDitComptageRenseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitLieuDitComptageRenseigne01
					, fournirKeyMessageSectionHitLieuDitComptageRenseigne01()
					, MESSAGE_SECTIONHIT_LIEUDITCOMPTAGE_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitLieuDitComptageRenseigne01().______
	

	
	/**
	 * Getter de la clé du messageSectionHitLieuDitComptageRenseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.lieuDitComptage.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_LIEUDITCOMPTAGE_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitLieuDitComptageRenseigne01() {
		return KEY_MESSAGE_SECTIONHIT_LIEUDITCOMPTAGE_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitLieuDitComptageRenseigne01().___



	/**
	 * Getter du <b>SINGLETON de messageSectionHitLieuDitComptageRenseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitLieuDitComptageRenseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitLieuDitComptageRenseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitLieuDitComptageRenseigne01() 
											throws Exception {
		return fournirMessageSectionHitLieuDitComptageRenseigne01();
	} // Fin de getMessageSectionHitLieuDitComptageRenseigne01().__________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitLieuDitComptageRenseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitLieuDitComptageRenseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitLieuDitComptageRenseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitLieuDitComptageRenseigne01
							, fournirKeyMessageSectionHitLieuDitComptageRenseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitLieuDitComptageRenseigne01(...)._______



	/**
	 * retourne le messageSectionHitLieuDitComptageRegex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitLieuDitComptageRegex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitLieuDitComptageRegex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitLieuDitComptageRegex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitLieuDitComptageRegex02
					, fournirKeyMessageSectionHitLieuDitComptageRegex02()
					, MESSAGE_SECTIONHIT_LIEUDITCOMPTAGE_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitLieuDitComptageRegex02().__________
	

	
	/**
	 * Getter de la clé du messageSectionHitLieuDitComptageRegex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.lieuDitComptage.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_LIEUDITCOMPTAGE_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitLieuDitComptageRegex02() {
		return KEY_MESSAGE_SECTIONHIT_LIEUDITCOMPTAGE_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitLieuDitComptageRegex02()._______



	/**
	 * Getter du <b>SINGLETON de messageSectionHitLieuDitComptageRegex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitLieuDitComptageRegex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitLieuDitComptageRegex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitLieuDitComptageRegex02() 
													throws Exception {
		return fournirMessageSectionHitLieuDitComptageRegex02();
	} // Fin de getMessageSectionHitLieuDitComptageRegex02().______________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitLieuDitComptageRegex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitLieuDitComptageRegex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitLieuDitComptageRegex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitLieuDitComptageRegex02
							, fournirKeyMessageSectionHitLieuDitComptageRegex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitLieuDitComptageRegex02(...).___________


	
	/* 25 - prComptage. ****************/
	/**
	 * retourne le messageSectionHitPrComptageRenseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitPrComptageRenseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitPrComptageRenseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitPrComptageRenseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitPrComptageRenseigne01
					, fournirKeyMessageSectionHitPrComptageRenseigne01()
					, MESSAGE_SECTIONHIT_PRCOMPTAGE_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitPrComptageRenseigne01().___________
	

	
	/**
	 * Getter de la clé du messageSectionHitPrComptageRenseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.prComptage.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_PRCOMPTAGE_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitPrComptageRenseigne01() {
		return KEY_MESSAGE_SECTIONHIT_PRCOMPTAGE_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitPrComptageRenseigne01().________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitPrComptageRenseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitPrComptageRenseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitPrComptageRenseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitPrComptageRenseigne01() 
											throws Exception {
		return fournirMessageSectionHitPrComptageRenseigne01();
	} // Fin de getMessageSectionHitPrComptageRenseigne01()._______________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitPrComptageRenseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitPrComptageRenseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitPrComptageRenseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitPrComptageRenseigne01
							, fournirKeyMessageSectionHitPrComptageRenseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitPrComptageRenseigne01(...).____________



	/**
	 * retourne le messageSectionHitPrComptageRegex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitPrComptageRegex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitPrComptageRegex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitPrComptageRegex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitPrComptageRegex02
					, fournirKeyMessageSectionHitPrComptageRegex02()
					, MESSAGE_SECTIONHIT_PRCOMPTAGE_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitPrComptageRegex02()._______________
	

	
	/**
	 * Getter de la clé du messageSectionHitPrComptageRegex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.prComptage.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_PRCOMPTAGE_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitPrComptageRegex02() {
		return KEY_MESSAGE_SECTIONHIT_PRCOMPTAGE_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitPrComptageRegex02().____________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitPrComptageRegex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitPrComptageRegex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitPrComptageRegex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitPrComptageRegex02() 
													throws Exception {
		return fournirMessageSectionHitPrComptageRegex02();
	} // Fin de getMessageSectionHitPrComptageRegex02().___________________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitPrComptageRegex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitPrComptageRegex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitPrComptageRegex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitPrComptageRegex02
							, fournirKeyMessageSectionHitPrComptageRegex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitPrComptageRegex02(...).________________



	/**
	 * retourne le messageSectionHitPrComptageNumerique03 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitPrComptageNumerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitPrComptageNumerique03 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitPrComptageNumerique03() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitPrComptageNumerique03
					, fournirKeyMessageSectionHitPrComptageNumerique03()
					, MESSAGE_SECTIONHIT_PRCOMPTAGE_NUMERIQUE_03_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitPrComptageNumerique03().___________
	

	
	/**
	 * Getter de la clé du messageSectionHitPrComptageNumerique03 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.prComptage.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_PRCOMPTAGE_NUMERIQUE_03 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitPrComptageNumerique03() {
		return KEY_MESSAGE_SECTIONHIT_PRCOMPTAGE_NUMERIQUE_03;
	} // Fin de fournirKeyMessageSectionHitPrComptageNumerique03().________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitPrComptageNumerique03 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitPrComptageNumerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitPrComptageNumerique03 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitPrComptageNumerique03() 
													throws Exception {
		return fournirMessageSectionHitPrComptageNumerique03();
	} // Fin de getMessageSectionHitPrComptageNumerique03()._______________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitPrComptageNumerique03 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitPrComptageNumerique03.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitPrComptageNumerique03(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitPrComptageNumerique03
							, fournirKeyMessageSectionHitPrComptageNumerique03());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitPrComptageNumerique03(...).____________	


	
	/* 26 - absComptage. ****************/
	/**
	 * retourne le messageSectionHitAbsComptageRenseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitAbsComptageRenseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitAbsComptageRenseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitAbsComptageRenseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitAbsComptageRenseigne01
					, fournirKeyMessageSectionHitAbsComptageRenseigne01()
					, MESSAGE_SECTIONHIT_ABSCOMPTAGE_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitAbsComptageRenseigne01().__________
	

	
	/**
	 * Getter de la clé du messageSectionHitAbsComptageRenseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.absComptage.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_ABSCOMPTAGE_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitAbsComptageRenseigne01() {
		return KEY_MESSAGE_SECTIONHIT_ABSCOMPTAGE_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitAbsComptageRenseigne01()._______



	/**
	 * Getter du <b>SINGLETON de messageSectionHitAbsComptageRenseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitAbsComptageRenseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitAbsComptageRenseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitAbsComptageRenseigne01() 
											throws Exception {
		return fournirMessageSectionHitAbsComptageRenseigne01();
	} // Fin de getMessageSectionHitAbsComptageRenseigne01().______________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitAbsComptageRenseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitAbsComptageRenseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitAbsComptageRenseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitAbsComptageRenseigne01
							, fournirKeyMessageSectionHitAbsComptageRenseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitAbsComptageRenseigne01(...).___________



	/**
	 * retourne le messageSectionHitAbsComptageRegex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitAbsComptageRegex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitAbsComptageRegex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitAbsComptageRegex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitAbsComptageRegex02
					, fournirKeyMessageSectionHitAbsComptageRegex02()
					, MESSAGE_SECTIONHIT_ABSCOMPTAGE_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitAbsComptageRegex02().______________
	

	
	/**
	 * Getter de la clé du messageSectionHitAbsComptageRegex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.absComptage.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_ABSCOMPTAGE_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitAbsComptageRegex02() {
		return KEY_MESSAGE_SECTIONHIT_ABSCOMPTAGE_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitAbsComptageRegex02().___________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitAbsComptageRegex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitAbsComptageRegex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitAbsComptageRegex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitAbsComptageRegex02() 
													throws Exception {
		return fournirMessageSectionHitAbsComptageRegex02();
	} // Fin de getMessageSectionHitAbsComptageRegex02().__________________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitAbsComptageRegex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitAbsComptageRegex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitAbsComptageRegex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitAbsComptageRegex02
							, fournirKeyMessageSectionHitAbsComptageRegex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitAbsComptageRegex02(...)._______________



	/**
	 * retourne le messageSectionHitAbsComptageNumerique03 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitAbsComptageNumerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitAbsComptageNumerique03 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitAbsComptageNumerique03() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitAbsComptageNumerique03
					, fournirKeyMessageSectionHitAbsComptageNumerique03()
					, MESSAGE_SECTIONHIT_ABSCOMPTAGE_NUMERIQUE_03_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitAbsComptageNumerique03().__________
	

	
	/**
	 * Getter de la clé du messageSectionHitAbsComptageNumerique03 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.prComptage.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_ABSCOMPTAGE_NUMERIQUE_03 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitAbsComptageNumerique03() {
		return KEY_MESSAGE_SECTIONHIT_ABSCOMPTAGE_NUMERIQUE_03;
	} // Fin de fournirKeyMessageSectionHitAbsComptageNumerique03()._______



	/**
	 * Getter du <b>SINGLETON de messageSectionHitAbsComptageNumerique03 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitAbsComptageNumerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitAbsComptageNumerique03 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitAbsComptageNumerique03() 
													throws Exception {
		return fournirMessageSectionHitAbsComptageNumerique03();
	} // Fin de getMessageSectionHitAbsComptageNumerique03().______________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitAbsComptageNumerique03 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitAbsComptageNumerique03.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitAbsComptageNumerique03(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitAbsComptageNumerique03
							, fournirKeyMessageSectionHitAbsComptageNumerique03());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitAbsComptageNumerique03(...).___________	


	
	/* 27 - longueurSection. ****************/
	/**
	 * retourne le messageSectionHitLongueurSectionRenseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitLongueurSectionRenseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitLongueurSectionRenseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitLongueurSectionRenseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitLongueurSectionRenseigne01
					, fournirKeyMessageSectionHitLongueurSectionRenseigne01()
					, MESSAGE_SECTIONHIT_LONGUEURSECTION_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitLongueurSectionRenseigne01().______
	

	
	/**
	 * Getter de la clé du messageSectionHitLongueurSectionRenseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.longueurSection.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_LONGUEURSECTION_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitLongueurSectionRenseigne01() {
		return KEY_MESSAGE_SECTIONHIT_LONGUEURSECTION_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitLongueurSectionRenseigne01().___



	/**
	 * Getter du <b>SINGLETON de messageSectionHitLongueurSectionRenseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitLongueurSectionRenseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitLongueurSectionRenseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitLongueurSectionRenseigne01() 
											throws Exception {
		return fournirMessageSectionHitLongueurSectionRenseigne01();
	} // Fin de getMessageSectionHitLongueurSectionRenseigne01().__________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitLongueurSectionRenseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitLongueurSectionRenseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitLongueurSectionRenseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitLongueurSectionRenseigne01
							, fournirKeyMessageSectionHitLongueurSectionRenseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitLongueurSectionRenseigne01(...)._______



	/**
	 * retourne le messageSectionHitLongueurSectionRegex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitLongueurSectionRegex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitLongueurSectionRegex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitLongueurSectionRegex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitLongueurSectionRegex02
					, fournirKeyMessageSectionHitLongueurSectionRegex02()
					, MESSAGE_SECTIONHIT_LONGUEURSECTION_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitLongueurSectionRegex02().__________
	

	
	/**
	 * Getter de la clé du messageSectionHitLongueurSectionRegex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.longueurSection.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_LONGUEURSECTION_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitLongueurSectionRegex02() {
		return KEY_MESSAGE_SECTIONHIT_LONGUEURSECTION_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitLongueurSectionRegex02()._______



	/**
	 * Getter du <b>SINGLETON de messageSectionHitLongueurSectionRegex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitLongueurSectionRegex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitLongueurSectionRegex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitLongueurSectionRegex02() 
													throws Exception {
		return fournirMessageSectionHitLongueurSectionRegex02();
	} // Fin de getMessageSectionHitLongueurSectionRegex02().______________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitLongueurSectionRegex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitLongueurSectionRegex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitLongueurSectionRegex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitLongueurSectionRegex02
							, fournirKeyMessageSectionHitLongueurSectionRegex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitLongueurSectionRegex02(...).___________



	/**
	 * retourne le messageSectionHitLongueurSectionNumerique03 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitLongueurSectionNumerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitLongueurSectionNumerique03 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitLongueurSectionNumerique03() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitLongueurSectionNumerique03
					, fournirKeyMessageSectionHitLongueurSectionNumerique03()
					, MESSAGE_SECTIONHIT_LONGUEURSECTION_NUMERIQUE_03_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitLongueurSectionNumerique03().______
	

	
	/**
	 * Getter de la clé du messageSectionHitLongueurSectionNumerique03 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.prOrigine.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_LONGUEURSECTION_NUMERIQUE_03 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitLongueurSectionNumerique03() {
		return KEY_MESSAGE_SECTIONHIT_LONGUEURSECTION_NUMERIQUE_03;
	} // Fin de fournirKeyMessageSectionHitLongueurSectionNumerique03().___



	/**
	 * Getter du <b>SINGLETON de messageSectionHitLongueurSectionNumerique03 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitLongueurSectionNumerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitLongueurSectionNumerique03 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitLongueurSectionNumerique03() 
													throws Exception {
		return fournirMessageSectionHitLongueurSectionNumerique03();
	} // Fin de getMessageSectionHitLongueurSectionNumerique03().__________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitLongueurSectionNumerique03 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitLongueurSectionNumerique03.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitLongueurSectionNumerique03(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitLongueurSectionNumerique03
							, fournirKeyMessageSectionHitLongueurSectionNumerique03());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitLongueurSectionNumerique03(...)._______


	
	/* 28 - longueurRaseCampagne. ****************/
	/**
	 * retourne le messageSectionHitLongueurRaseCampagneRenseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitLongueurRaseCampagneRenseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitLongueurRaseCampagneRenseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitLongueurRaseCampagneRenseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitLongueurRaseCampagneRenseigne01
					, fournirKeyMessageSectionHitLongueurRaseCampagneRenseigne01()
					, MESSAGE_SECTIONHIT_LONGUEURRASECAMPAGNE_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitLongueurRaseCampagneRenseigne01()._
	

	
	/**
	 * Getter de la clé du messageSectionHitLongueurRaseCampagneRenseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.longueurRaseCampagne.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_LONGUEURRASECAMPAGNE_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitLongueurRaseCampagneRenseigne01() {
		return KEY_MESSAGE_SECTIONHIT_LONGUEURRASECAMPAGNE_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitLongueurRaseCampagneRenseigne01().



	/**
	 * Getter du <b>SINGLETON de messageSectionHitLongueurRaseCampagneRenseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitLongueurRaseCampagneRenseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitLongueurRaseCampagneRenseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitLongueurRaseCampagneRenseigne01() 
											throws Exception {
		return fournirMessageSectionHitLongueurRaseCampagneRenseigne01();
	} // Fin de getMessageSectionHitLongueurRaseCampagneRenseigne01()._____
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitLongueurRaseCampagneRenseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitLongueurRaseCampagneRenseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitLongueurRaseCampagneRenseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitLongueurRaseCampagneRenseigne01
							, fournirKeyMessageSectionHitLongueurRaseCampagneRenseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitLongueurRaseCampagneRenseigne01(...).__



	/**
	 * retourne le messageSectionHitLongueurRaseCampagneRegex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitLongueurRaseCampagneRegex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitLongueurRaseCampagneRegex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitLongueurRaseCampagneRegex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitLongueurRaseCampagneRegex02
					, fournirKeyMessageSectionHitLongueurRaseCampagneRegex02()
					, MESSAGE_SECTIONHIT_LONGUEURRASECAMPAGNE_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitLongueurRaseCampagneRegex02()._____
	

	
	/**
	 * Getter de la clé du messageSectionHitLongueurRaseCampagneRegex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.longueurRaseCampagne.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_LONGUEURRASECAMPAGNE_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitLongueurRaseCampagneRegex02() {
		return KEY_MESSAGE_SECTIONHIT_LONGUEURRASECAMPAGNE_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitLongueurRaseCampagneRegex02().__



	/**
	 * Getter du <b>SINGLETON de messageSectionHitLongueurRaseCampagneRegex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitLongueurRaseCampagneRegex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitLongueurRaseCampagneRegex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitLongueurRaseCampagneRegex02() 
													throws Exception {
		return fournirMessageSectionHitLongueurRaseCampagneRegex02();
	} // Fin de getMessageSectionHitLongueurRaseCampagneRegex02()._________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitLongueurRaseCampagneRegex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitLongueurRaseCampagneRegex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitLongueurRaseCampagneRegex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitLongueurRaseCampagneRegex02
							, fournirKeyMessageSectionHitLongueurRaseCampagneRegex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitLongueurRaseCampagneRegex02(...).______



	/**
	 * retourne le messageSectionHitLongueurRaseCampagneNumerique03 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitLongueurRaseCampagneNumerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitLongueurRaseCampagneNumerique03 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitLongueurRaseCampagneNumerique03() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitLongueurRaseCampagneNumerique03
					, fournirKeyMessageSectionHitLongueurRaseCampagneNumerique03()
					, MESSAGE_SECTIONHIT_LONGUEURRASECAMPAGNE_NUMERIQUE_03_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitLongueurRaseCampagneNumerique03()._
	

	
	/**
	 * Getter de la clé du messageSectionHitLongueurRaseCampagneNumerique03 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.prOrigine.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_LONGUEURRASECAMPAGNE_NUMERIQUE_03 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitLongueurRaseCampagneNumerique03() {
		return KEY_MESSAGE_SECTIONHIT_LONGUEURRASECAMPAGNE_NUMERIQUE_03;
	} // Fin de fournirKeyMessageSectionHitLongueurRaseCampagneNumerique03().



	/**
	 * Getter du <b>SINGLETON de messageSectionHitLongueurRaseCampagneNumerique03 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitLongueurRaseCampagneNumerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitLongueurRaseCampagneNumerique03 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitLongueurRaseCampagneNumerique03() 
													throws Exception {
		return fournirMessageSectionHitLongueurRaseCampagneNumerique03();
	} // Fin de getMessageSectionHitLongueurRaseCampagneNumerique03()._____
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitLongueurRaseCampagneNumerique03 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitLongueurRaseCampagneNumerique03.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitLongueurRaseCampagneNumerique03(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitLongueurRaseCampagneNumerique03
							, fournirKeyMessageSectionHitLongueurRaseCampagneNumerique03());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitLongueurRaseCampagneNumerique03(...).__	


	
	/* 29 - numDepartementRattachement. ****************/
	/**
	 * retourne le messageSectionHitNumDepartementRattachementRenseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitNumDepartementRattachementRenseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitNumDepartementRattachementRenseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitNumDepartementRattachementRenseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitNumDepartementRattachementRenseigne01
					, fournirKeyMessageSectionHitNumDepartementRattachementRenseigne01()
					, MESSAGE_SECTIONHIT_NUMDEPARTEMENTRATTACHEMENT_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitNumDepartementRattachementRenseigne01().
	

	
	/**
	 * Getter de la clé du messageSectionHitNumDepartementRattachementRenseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.numDepartementRattachement.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_NUMDEPARTEMENTRATTACHEMENT_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitNumDepartementRattachementRenseigne01() {
		return KEY_MESSAGE_SECTIONHIT_NUMDEPARTEMENTRATTACHEMENT_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitNumDepartementRattachementRenseigne01().



	/**
	 * Getter du <b>SINGLETON de messageSectionHitNumDepartementRattachementRenseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitNumDepartementRattachementRenseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitNumDepartementRattachementRenseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitNumDepartementRattachementRenseigne01() 
											throws Exception {
		return fournirMessageSectionHitNumDepartementRattachementRenseigne01();
	} // Fin de getMessageSectionHitNumDepartementRattachementRenseigne01().
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitNumDepartementRattachementRenseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitNumDepartementRattachementRenseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitNumDepartementRattachementRenseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitNumDepartementRattachementRenseigne01
							, fournirKeyMessageSectionHitNumDepartementRattachementRenseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitNumDepartementRattachementRenseigne01(...).



	/**
	 * retourne le messageSectionHitNumDepartementRattachementRegex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitNumDepartementRattachementRegex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitNumDepartementRattachementRegex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitNumDepartementRattachementRegex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitNumDepartementRattachementRegex02
					, fournirKeyMessageSectionHitNumDepartementRattachementRegex02()
					, MESSAGE_SECTIONHIT_NUMDEPARTEMENTRATTACHEMENT_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitNumDepartementRattachementRegex02().
	

	
	/**
	 * Getter de la clé du messageSectionHitNumDepartementRattachementRegex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.numDepartementRattachement.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_NUMDEPARTEMENTRATTACHEMENT_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitNumDepartementRattachementRegex02() {
		return KEY_MESSAGE_SECTIONHIT_NUMDEPARTEMENTRATTACHEMENT_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitNumDepartementRattachementRegex02().



	/**
	 * Getter du <b>SINGLETON de messageSectionHitNumDepartementRattachementRegex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitNumDepartementRattachementRegex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitNumDepartementRattachementRegex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitNumDepartementRattachementRegex02() 
													throws Exception {
		return fournirMessageSectionHitNumDepartementRattachementRegex02();
	} // Fin de getMessageSectionHitNumDepartementRattachementRegex02().
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitNumDepartementRattachementRegex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitNumDepartementRattachementRegex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitNumDepartementRattachementRegex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitNumDepartementRattachementRegex02
							, fournirKeyMessageSectionHitNumDepartementRattachementRegex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitNumDepartementRattachementRegex02(...).


	
	/* 30 - numSectionRattachement. ****************/
	/**
	 * retourne le messageSectionHitNumSectionRattachementRenseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitNumSectionRattachementRenseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitNumSectionRattachementRenseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitNumSectionRattachementRenseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitNumSectionRattachementRenseigne01
					, fournirKeyMessageSectionHitNumSectionRattachementRenseigne01()
					, MESSAGE_SECTIONHIT_NUMSECTIONRATTACHEMENT_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitNumSectionRattachementRenseigne01().
	

	
	/**
	 * Getter de la clé du messageSectionHitNumSectionRattachementRenseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.numSectionRattachement.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_NUMSECTIONRATTACHEMENT_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitNumSectionRattachementRenseigne01() {
		return KEY_MESSAGE_SECTIONHIT_NUMSECTIONRATTACHEMENT_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitNumSectionRattachementRenseigne01().



	/**
	 * Getter du <b>SINGLETON de messageSectionHitNumSectionRattachementRenseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitNumSectionRattachementRenseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitNumSectionRattachementRenseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitNumSectionRattachementRenseigne01() 
											throws Exception {
		return fournirMessageSectionHitNumSectionRattachementRenseigne01();
	} // Fin de getMessageSectionHitNumSectionRattachementRenseigne01().___
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitNumSectionRattachementRenseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitNumSectionRattachementRenseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitNumSectionRattachementRenseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitNumSectionRattachementRenseigne01
							, fournirKeyMessageSectionHitNumSectionRattachementRenseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitNumSectionRattachementRenseigne01(...).



	/**
	 * retourne le messageSectionHitNumSectionRattachementRegex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitNumSectionRattachementRegex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitNumSectionRattachementRegex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitNumSectionRattachementRegex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitNumSectionRattachementRegex02
					, fournirKeyMessageSectionHitNumSectionRattachementRegex02()
					, MESSAGE_SECTIONHIT_NUMSECTIONRATTACHEMENT_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitNumSectionRattachementRegex02().___
	

	
	/**
	 * Getter de la clé du messageSectionHitNumSectionRattachementRegex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.numSectionRattachement.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_NUMSECTIONRATTACHEMENT_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitNumSectionRattachementRegex02() {
		return KEY_MESSAGE_SECTIONHIT_NUMSECTIONRATTACHEMENT_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitNumSectionRattachementRegex02().



	/**
	 * Getter du <b>SINGLETON de messageSectionHitNumSectionRattachementRegex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitNumSectionRattachementRegex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitNumSectionRattachementRegex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitNumSectionRattachementRegex02() 
													throws Exception {
		return fournirMessageSectionHitNumSectionRattachementRegex02();
	} // Fin de getMessageSectionHitNumSectionRattachementRegex02()._______
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitNumSectionRattachementRegex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitNumSectionRattachementRegex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitNumSectionRattachementRegex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitNumSectionRattachementRegex02
							, fournirKeyMessageSectionHitNumSectionRattachementRegex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitNumSectionRattachementRegex02(...).____


	
	/* 31 - sensRattachement. ****************/
	/**
	 * retourne le messageSectionHitSensRattachementRenseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitSensRattachementRenseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitSensRattachementRenseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitSensRattachementRenseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitSensRattachementRenseigne01
					, fournirKeyMessageSectionHitSensRattachementRenseigne01()
					, MESSAGE_SECTIONHIT_SENSRATTACHEMENT_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitSensRattachementRenseigne01()._____
	

	
	/**
	 * Getter de la clé du messageSectionHitSensRattachementRenseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.sensRattachement.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_SENSRATTACHEMENT_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitSensRattachementRenseigne01() {
		return KEY_MESSAGE_SECTIONHIT_SENSRATTACHEMENT_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitSensRattachementRenseigne01().__



	/**
	 * Getter du <b>SINGLETON de messageSectionHitSensRattachementRenseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitSensRattachementRenseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitSensRattachementRenseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitSensRattachementRenseigne01() 
											throws Exception {
		return fournirMessageSectionHitSensRattachementRenseigne01();
	} // Fin de getMessageSectionHitSensRattachementRenseigne01()._________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitSensRattachementRenseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitSensRattachementRenseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitSensRattachementRenseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitSensRattachementRenseigne01
							, fournirKeyMessageSectionHitSensRattachementRenseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitSensRattachementRenseigne01(...).______



	/**
	 * retourne le messageSectionHitSensRattachementRegex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitSensRattachementRegex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitSensRattachementRegex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitSensRattachementRegex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitSensRattachementRegex02
					, fournirKeyMessageSectionHitSensRattachementRegex02()
					, MESSAGE_SECTIONHIT_SENSRATTACHEMENT_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitSensRattachementRegex02()._________
	

	
	/**
	 * Getter de la clé du messageSectionHitSensRattachementRegex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.sensRattachement.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_SENSRATTACHEMENT_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitSensRattachementRegex02() {
		return KEY_MESSAGE_SECTIONHIT_SENSRATTACHEMENT_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitSensRattachementRegex02().______



	/**
	 * Getter du <b>SINGLETON de messageSectionHitSensRattachementRegex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitSensRattachementRegex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitSensRattachementRegex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitSensRattachementRegex02() 
													throws Exception {
		return fournirMessageSectionHitSensRattachementRegex02();
	} // Fin de getMessageSectionHitSensRattachementRegex02()._____________


	
	/**
	* Setter du <b>SINGLETON de messageSectionHitSensRattachementRegex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitSensRattachementRegex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitSensRattachementRegex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitSensRattachementRegex02
							, fournirKeyMessageSectionHitSensRattachementRegex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitSensRattachementRegex02(...).__________
	


	/**
	 * retourne le messageSectionHitSensRattachementNomenclature03 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitSensRattachementNomenclature03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitSensRattachementNomenclature03 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitSensRattachementNomenclature03() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitSensRattachementNomenclature03
					, fournirKeyMessageSectionHitSensRattachementNomenclature03()
					, MESSAGE_SECTIONHIT_SENSRATTACHEMENT_NOMENCLATURE_03_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitSensRattachementNomenclature03().__
	

	
	/**
	 * Getter de la clé du messageSectionHitSensRattachementNomenclature03 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.sensRattachement.nomenclature".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_SENSRATTACHEMENT_NOMENCLATURE_03 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitSensRattachementNomenclature03() {
		return KEY_MESSAGE_SECTIONHIT_SENSRATTACHEMENT_NOMENCLATURE_03;
	} // Fin de fournirKeyMessageSectionHitSensRattachementNomenclature03().



	/**
	 * Getter du <b>SINGLETON de messageSectionHitSensRattachementNomenclature03 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitSensRattachementNomenclature03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitSensRattachementNomenclature03 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitSensRattachementNomenclature03() 
													throws Exception {
		return fournirMessageSectionHitSensRattachementNomenclature03();
	} // Fin de getMessageSectionHitSensRattachementNomenclature03().______
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitSensRattachementNomenclature03 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitSensRattachementNomenclature03.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitSensRattachementNomenclature03(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitSensRattachementNomenclature03
							, fournirKeyMessageSectionHitSensRattachementNomenclature03());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitSensRattachementNomenclature03(...).___


	
	/* 32 - numDepartementLimitrophe. ****************/
	/**
	 * retourne le messageSectionHitNumDepartementLimitropheRenseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitNumDepartementLimitropheRenseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitNumDepartementLimitropheRenseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitNumDepartementLimitropheRenseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitNumDepartementLimitropheRenseigne01
					, fournirKeyMessageSectionHitNumDepartementLimitropheRenseigne01()
					, MESSAGE_SECTIONHIT_NUMDEPARTEMENTLIMITROPHE_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitNumDepartementLimitropheRenseigne01().
	

	
	/**
	 * Getter de la clé du messageSectionHitNumDepartementLimitropheRenseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.numDepartementLimitrophe.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_NUMDEPARTEMENTLIMITROPHE_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitNumDepartementLimitropheRenseigne01() {
		return KEY_MESSAGE_SECTIONHIT_NUMDEPARTEMENTLIMITROPHE_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitNumDepartementLimitropheRenseigne01().



	/**
	 * Getter du <b>SINGLETON de messageSectionHitNumDepartementLimitropheRenseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitNumDepartementLimitropheRenseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitNumDepartementLimitropheRenseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitNumDepartementLimitropheRenseigne01() 
											throws Exception {
		return fournirMessageSectionHitNumDepartementLimitropheRenseigne01();
	} // Fin de getMessageSectionHitNumDepartementLimitropheRenseigne01().
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitNumDepartementLimitropheRenseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitNumDepartementLimitropheRenseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitNumDepartementLimitropheRenseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitNumDepartementLimitropheRenseigne01
							, fournirKeyMessageSectionHitNumDepartementLimitropheRenseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitNumDepartementLimitropheRenseigne01(...).



	/**
	 * retourne le messageSectionHitNumDepartementLimitropheRegex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitNumDepartementLimitropheRegex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitNumDepartementLimitropheRegex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitNumDepartementLimitropheRegex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitNumDepartementLimitropheRegex02
					, fournirKeyMessageSectionHitNumDepartementLimitropheRegex02()
					, MESSAGE_SECTIONHIT_NUMDEPARTEMENTLIMITROPHE_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitNumDepartementLimitropheRegex02().
	

	
	/**
	 * Getter de la clé du messageSectionHitNumDepartementLimitropheRegex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.numDepartementLimitrophe.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_NUMDEPARTEMENTLIMITROPHE_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitNumDepartementLimitropheRegex02() {
		return KEY_MESSAGE_SECTIONHIT_NUMDEPARTEMENTLIMITROPHE_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitNumDepartementLimitropheRegex02().



	/**
	 * Getter du <b>SINGLETON de messageSectionHitNumDepartementLimitropheRegex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitNumDepartementLimitropheRegex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitNumDepartementLimitropheRegex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitNumDepartementLimitropheRegex02() 
													throws Exception {
		return fournirMessageSectionHitNumDepartementLimitropheRegex02();
	} // Fin de getMessageSectionHitNumDepartementLimitropheRegex02().
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitNumDepartementLimitropheRegex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitNumDepartementLimitropheRegex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitNumDepartementLimitropheRegex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitNumDepartementLimitropheRegex02
							, fournirKeyMessageSectionHitNumDepartementLimitropheRegex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitNumDepartementLimitropheRegex02(...).


	
	/* 33 - numSectionLimitrophe. ****************/
	/**
	 * retourne le messageSectionHitNumSectionLimitropheRenseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitNumSectionLimitropheRenseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitNumSectionLimitropheRenseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitNumSectionLimitropheRenseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitNumSectionLimitropheRenseigne01
					, fournirKeyMessageSectionHitNumSectionLimitropheRenseigne01()
					, MESSAGE_SECTIONHIT_NUMSECTIONLIMITROPHE_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitNumSectionLimitropheRenseigne01().
	

	
	/**
	 * Getter de la clé du messageSectionHitNumSectionLimitropheRenseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.numSectionLimitrophe.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_NUMSECTIONLIMITROPHE_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitNumSectionLimitropheRenseigne01() {
		return KEY_MESSAGE_SECTIONHIT_NUMSECTIONLIMITROPHE_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitNumSectionLimitropheRenseigne01().



	/**
	 * Getter du <b>SINGLETON de messageSectionHitNumSectionLimitropheRenseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitNumSectionLimitropheRenseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitNumSectionLimitropheRenseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitNumSectionLimitropheRenseigne01() 
											throws Exception {
		return fournirMessageSectionHitNumSectionLimitropheRenseigne01();
	} // Fin de getMessageSectionHitNumSectionLimitropheRenseigne01()._____
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitNumSectionLimitropheRenseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitNumSectionLimitropheRenseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitNumSectionLimitropheRenseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitNumSectionLimitropheRenseigne01
							, fournirKeyMessageSectionHitNumSectionLimitropheRenseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitNumSectionLimitropheRenseigne01(...).__



	/**
	 * retourne le messageSectionHitNumSectionLimitropheRegex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitNumSectionLimitropheRegex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitNumSectionLimitropheRegex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitNumSectionLimitropheRegex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitNumSectionLimitropheRegex02
					, fournirKeyMessageSectionHitNumSectionLimitropheRegex02()
					, MESSAGE_SECTIONHIT_NUMSECTIONLIMITROPHE_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitNumSectionLimitropheRegex02()._____
	

	
	/**
	 * Getter de la clé du messageSectionHitNumSectionLimitropheRegex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.numSectionLimitrophe.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_NUMSECTIONLIMITROPHE_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitNumSectionLimitropheRegex02() {
		return KEY_MESSAGE_SECTIONHIT_NUMSECTIONLIMITROPHE_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitNumSectionLimitropheRegex02().__



	/**
	 * Getter du <b>SINGLETON de messageSectionHitNumSectionLimitropheRegex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitNumSectionLimitropheRegex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitNumSectionLimitropheRegex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitNumSectionLimitropheRegex02() 
													throws Exception {
		return fournirMessageSectionHitNumSectionLimitropheRegex02();
	} // Fin de getMessageSectionHitNumSectionLimitropheRegex02()._________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitNumSectionLimitropheRegex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitNumSectionLimitropheRegex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitNumSectionLimitropheRegex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitNumSectionLimitropheRegex02
							, fournirKeyMessageSectionHitNumSectionLimitropheRegex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitNumSectionLimitropheRegex02(...).______


	
	/* 34 - sensLimitrophe. ****************/
	/**
	 * retourne le messageSectionHitSensLimitropheRenseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitSensLimitropheRenseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitSensLimitropheRenseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitSensLimitropheRenseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitSensLimitropheRenseigne01
					, fournirKeyMessageSectionHitSensLimitropheRenseigne01()
					, MESSAGE_SECTIONHIT_SENSLIMITROPHE_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitSensLimitropheRenseigne01()._______
	

	
	/**
	 * Getter de la clé du messageSectionHitSensLimitropheRenseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.sensLimitrophe.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_SENSLIMITROPHE_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitSensLimitropheRenseigne01() {
		return KEY_MESSAGE_SECTIONHIT_SENSLIMITROPHE_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitSensLimitropheRenseigne01().____



	/**
	 * Getter du <b>SINGLETON de messageSectionHitSensLimitropheRenseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitSensLimitropheRenseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitSensLimitropheRenseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitSensLimitropheRenseigne01() 
											throws Exception {
		return fournirMessageSectionHitSensLimitropheRenseigne01();
	} // Fin de getMessageSectionHitSensLimitropheRenseigne01().___________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitSensLimitropheRenseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitSensLimitropheRenseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitSensLimitropheRenseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitSensLimitropheRenseigne01
							, fournirKeyMessageSectionHitSensLimitropheRenseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitSensLimitropheRenseigne01(...).________



	/**
	 * retourne le messageSectionHitSensLimitropheRegex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitSensLimitropheRegex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitSensLimitropheRegex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitSensLimitropheRegex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitSensLimitropheRegex02
					, fournirKeyMessageSectionHitSensLimitropheRegex02()
					, MESSAGE_SECTIONHIT_SENSLIMITROPHE_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitSensLimitropheRegex02().___________
	

	
	/**
	 * Getter de la clé du messageSectionHitSensLimitropheRegex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.sensLimitrophe.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_SENSLIMITROPHE_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitSensLimitropheRegex02() {
		return KEY_MESSAGE_SECTIONHIT_SENSLIMITROPHE_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitSensLimitropheRegex02().________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitSensLimitropheRegex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitSensLimitropheRegex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitSensLimitropheRegex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitSensLimitropheRegex02() 
													throws Exception {
		return fournirMessageSectionHitSensLimitropheRegex02();
	} // Fin de getMessageSectionHitSensLimitropheRegex02()._______________


	
	/**
	* Setter du <b>SINGLETON de messageSectionHitSensLimitropheRegex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitSensLimitropheRegex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitSensLimitropheRegex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitSensLimitropheRegex02
							, fournirKeyMessageSectionHitSensLimitropheRegex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitSensLimitropheRegex02(...).____________
	


	/**
	 * retourne le messageSectionHitSensLimitropheNomenclature03 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitSensLimitropheNomenclature03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitSensLimitropheNomenclature03 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitSensLimitropheNomenclature03() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitSensLimitropheNomenclature03
					, fournirKeyMessageSectionHitSensLimitropheNomenclature03()
					, MESSAGE_SECTIONHIT_SENSLIMITROPHE_NOMENCLATURE_03_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitSensLimitropheNomenclature03().____
	

	
	/**
	 * Getter de la clé du messageSectionHitSensLimitropheNomenclature03 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.sensLimitrophe.nomenclature".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_SENSLIMITROPHE_NOMENCLATURE_03 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitSensLimitropheNomenclature03() {
		return KEY_MESSAGE_SECTIONHIT_SENSLIMITROPHE_NOMENCLATURE_03;
	} // Fin de fournirKeyMessageSectionHitSensLimitropheNomenclature03().__



	/**
	 * Getter du <b>SINGLETON de messageSectionHitSensLimitropheNomenclature03 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitSensLimitropheNomenclature03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitSensLimitropheNomenclature03 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitSensLimitropheNomenclature03() 
													throws Exception {
		return fournirMessageSectionHitSensLimitropheNomenclature03();
	} // Fin de getMessageSectionHitSensLimitropheNomenclature03().________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitSensLimitropheNomenclature03 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitSensLimitropheNomenclature03.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitSensLimitropheNomenclature03(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitSensLimitropheNomenclature03
							, fournirKeyMessageSectionHitSensLimitropheNomenclature03());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitSensLimitropheNomenclature03(...)._____


	
	/* 35 - moisSectionnement. ****************/
	/**
	 * retourne le messageSectionHitMoisSectionnementRenseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitMoisSectionnementRenseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitMoisSectionnementRenseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitMoisSectionnementRenseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitMoisSectionnementRenseigne01
					, fournirKeyMessageSectionHitMoisSectionnementRenseigne01()
					, MESSAGE_SECTIONHIT_MOISSECTIONNEMENT_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitMoisSectionnementRenseigne01().____
	

	
	/**
	 * Getter de la clé du messageSectionHitMoisSectionnementRenseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.moisSectionnement.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_MOISSECTIONNEMENT_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitMoisSectionnementRenseigne01() {
		return KEY_MESSAGE_SECTIONHIT_MOISSECTIONNEMENT_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitMoisSectionnementRenseigne01()._



	/**
	 * Getter du <b>SINGLETON de messageSectionHitMoisSectionnementRenseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitMoisSectionnementRenseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitMoisSectionnementRenseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitMoisSectionnementRenseigne01() 
											throws Exception {
		return fournirMessageSectionHitMoisSectionnementRenseigne01();
	} // Fin de getMessageSectionHitMoisSectionnementRenseigne01().________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitMoisSectionnementRenseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitMoisSectionnementRenseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitMoisSectionnementRenseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitMoisSectionnementRenseigne01
							, fournirKeyMessageSectionHitMoisSectionnementRenseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitMoisSectionnementRenseigne01(...)._____



	/**
	 * retourne le messageSectionHitMoisSectionnementRegex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitMoisSectionnementRegex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitMoisSectionnementRegex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitMoisSectionnementRegex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitMoisSectionnementRegex02
					, fournirKeyMessageSectionHitMoisSectionnementRegex02()
					, MESSAGE_SECTIONHIT_MOISSECTIONNEMENT_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitMoisSectionnementRegex02().________
	

	
	/**
	 * Getter de la clé du messageSectionHitMoisSectionnementRegex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.moisSectionnement.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_MOISSECTIONNEMENT_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitMoisSectionnementRegex02() {
		return KEY_MESSAGE_SECTIONHIT_MOISSECTIONNEMENT_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitMoisSectionnementRegex02()._____



	/**
	 * Getter du <b>SINGLETON de messageSectionHitMoisSectionnementRegex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitMoisSectionnementRegex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitMoisSectionnementRegex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitMoisSectionnementRegex02() 
													throws Exception {
		return fournirMessageSectionHitMoisSectionnementRegex02();
	} // Fin de getMessageSectionHitMoisSectionnementRegex02().____________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitMoisSectionnementRegex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitMoisSectionnementRegex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitMoisSectionnementRegex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitMoisSectionnementRegex02
							, fournirKeyMessageSectionHitMoisSectionnementRegex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitMoisSectionnementRegex02(...)._________


	
	/* 36 - anneeSectionnement. ****************/
	/**
	 * retourne le messageSectionHitAnneeSectionnementRenseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitAnneeSectionnementRenseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitAnneeSectionnementRenseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitAnneeSectionnementRenseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitAnneeSectionnementRenseigne01
					, fournirKeyMessageSectionHitAnneeSectionnementRenseigne01()
					, MESSAGE_SECTIONHIT_ANNEESECTIONNEMENT_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitAnneeSectionnementRenseigne01().___
	

	
	/**
	 * Getter de la clé du messageSectionHitAnneeSectionnementRenseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.anneeSectionnement.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_ANNEESECTIONNEMENT_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitAnneeSectionnementRenseigne01() {
		return KEY_MESSAGE_SECTIONHIT_ANNEESECTIONNEMENT_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitAnneeSectionnementRenseigne01().



	/**
	 * Getter du <b>SINGLETON de messageSectionHitAnneeSectionnementRenseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitAnneeSectionnementRenseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitAnneeSectionnementRenseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitAnneeSectionnementRenseigne01() 
											throws Exception {
		return fournirMessageSectionHitAnneeSectionnementRenseigne01();
	} // Fin de getMessageSectionHitAnneeSectionnementRenseigne01()._______
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitAnneeSectionnementRenseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitAnneeSectionnementRenseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitAnneeSectionnementRenseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitAnneeSectionnementRenseigne01
							, fournirKeyMessageSectionHitAnneeSectionnementRenseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitAnneeSectionnementRenseigne01(...).____



	/**
	 * retourne le messageSectionHitAnneeSectionnementRegex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitAnneeSectionnementRegex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitAnneeSectionnementRegex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitAnneeSectionnementRegex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitAnneeSectionnementRegex02
					, fournirKeyMessageSectionHitAnneeSectionnementRegex02()
					, MESSAGE_SECTIONHIT_ANNEESECTIONNEMENT_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitAnneeSectionnementRegex02()._______
	

	
	/**
	 * Getter de la clé du messageSectionHitAnneeSectionnementRegex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.anneeSectionnement.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_ANNEESECTIONNEMENT_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitAnneeSectionnementRegex02() {
		return KEY_MESSAGE_SECTIONHIT_ANNEESECTIONNEMENT_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitAnneeSectionnementRegex02().____



	/**
	 * Getter du <b>SINGLETON de messageSectionHitAnneeSectionnementRegex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitAnneeSectionnementRegex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitAnneeSectionnementRegex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitAnneeSectionnementRegex02() 
													throws Exception {
		return fournirMessageSectionHitAnneeSectionnementRegex02();
	} // Fin de getMessageSectionHitAnneeSectionnementRegex02().___________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitAnneeSectionnementRegex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitAnneeSectionnementRegex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitAnneeSectionnementRegex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitAnneeSectionnementRegex02
							, fournirKeyMessageSectionHitAnneeSectionnementRegex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitAnneeSectionnementRegex02(...).________


	
	/* 37 - zoneLibre2. ****************/
	/**
	 * retourne le messageSectionHitZoneLibre2Renseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitZoneLibre2Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitZoneLibre2Renseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitZoneLibre2Renseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitZoneLibre2Renseigne01
					, fournirKeyMessageSectionHitZoneLibre2Renseigne01()
					, MESSAGE_SECTIONHIT_ZONELIBRE2_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitZoneLibre2Renseigne01().___________
	

	
	/**
	 * Getter de la clé du messageSectionHitZoneLibre2Renseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.zoneLibre2.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_ZONELIBRE2_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitZoneLibre2Renseigne01() {
		return KEY_MESSAGE_SECTIONHIT_ZONELIBRE2_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitZoneLibre2Renseigne01().________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitZoneLibre2Renseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitZoneLibre2Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitZoneLibre2Renseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitZoneLibre2Renseigne01() 
											throws Exception {
		return fournirMessageSectionHitZoneLibre2Renseigne01();
	} // Fin de getMessageSectionHitZoneLibre2Renseigne01()._______________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitZoneLibre2Renseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitZoneLibre2Renseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitZoneLibre2Renseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitZoneLibre2Renseigne01
							, fournirKeyMessageSectionHitZoneLibre2Renseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitZoneLibre2Renseigne01(...).____________



	/**
	 * retourne le messageSectionHitZoneLibre2Regex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitZoneLibre2Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitZoneLibre2Regex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitZoneLibre2Regex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitZoneLibre2Regex02
					, fournirKeyMessageSectionHitZoneLibre2Regex02()
					, MESSAGE_SECTIONHIT_ZONELIBRE2_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitZoneLibre2Regex02()._______________
	

	
	/**
	 * Getter de la clé du messageSectionHitZoneLibre2Regex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.zoneLibre2.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_ZONELIBRE2_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitZoneLibre2Regex02() {
		return KEY_MESSAGE_SECTIONHIT_ZONELIBRE2_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitZoneLibre2Regex02().____________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitZoneLibre2Regex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitZoneLibre2Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitZoneLibre2Regex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitZoneLibre2Regex02() 
													throws Exception {
		return fournirMessageSectionHitZoneLibre2Regex02();
	} // Fin de getMessageSectionHitZoneLibre2Regex02().___________________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitZoneLibre2Regex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitZoneLibre2Regex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitZoneLibre2Regex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitZoneLibre2Regex02
							, fournirKeyMessageSectionHitZoneLibre2Regex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitZoneLibre2Regex02(...).________________


	
	/* 38 - mjaN. ****************/
	/**
	 * retourne le messageSectionHitMjaNRenseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitMjaNRenseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitMjaNRenseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitMjaNRenseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitMjaNRenseigne01
					, fournirKeyMessageSectionHitMjaNRenseigne01()
					, MESSAGE_SECTIONHIT_MJAN_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitMjaNRenseigne01()._________________
	

	
	/**
	 * Getter de la clé du messageSectionHitMjaNRenseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.mjaN.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_MJAN_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitMjaNRenseigne01() {
		return KEY_MESSAGE_SECTIONHIT_MJAN_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitMjaNRenseigne01().______________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitMjaNRenseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitMjaNRenseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitMjaNRenseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitMjaNRenseigne01() 
											throws Exception {
		return fournirMessageSectionHitMjaNRenseigne01();
	} // Fin de getMessageSectionHitMjaNRenseigne01()._____________________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitMjaNRenseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitMjaNRenseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitMjaNRenseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitMjaNRenseigne01
							, fournirKeyMessageSectionHitMjaNRenseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitMjaNRenseigne01(...).__________________



	/**
	 * retourne le messageSectionHitMjaNRegex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitMjaNRegex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitMjaNRegex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitMjaNRegex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitMjaNRegex02
					, fournirKeyMessageSectionHitMjaNRegex02()
					, MESSAGE_SECTIONHIT_MJAN_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitMjaNRegex02()._____________________
	

	
	/**
	 * Getter de la clé du messageSectionHitMjaNRegex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.mjaN.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_MJAN_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitMjaNRegex02() {
		return KEY_MESSAGE_SECTIONHIT_MJAN_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitMjaNRegex02().__________________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitMjaNRegex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitMjaNRegex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitMjaNRegex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitMjaNRegex02() 
													throws Exception {
		return fournirMessageSectionHitMjaNRegex02();
	} // Fin de getMessageSectionHitMjaNRegex02()._________________________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitMjaNRegex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitMjaNRegex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitMjaNRegex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitMjaNRegex02
							, fournirKeyMessageSectionHitMjaNRegex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitMjaNRegex02(...).______________________



	/**
	 * retourne le messageSectionHitMjaNNumerique03 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitMjaNNumerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitMjaNNumerique03 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitMjaNNumerique03() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitMjaNNumerique03
					, fournirKeyMessageSectionHitMjaNNumerique03()
					, MESSAGE_SECTIONHIT_MJAN_NUMERIQUE_03_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitMjaNNumerique03()._________________
	

	
	/**
	 * Getter de la clé du messageSectionHitMjaNNumerique03 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.prOrigine.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_MJAN_NUMERIQUE_03 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitMjaNNumerique03() {
		return KEY_MESSAGE_SECTIONHIT_MJAN_NUMERIQUE_03;
	} // Fin de fournirKeyMessageSectionHitMjaNNumerique03().______________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitMjaNNumerique03 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitMjaNNumerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitMjaNNumerique03 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitMjaNNumerique03() 
													throws Exception {
		return fournirMessageSectionHitMjaNNumerique03();
	} // Fin de getMessageSectionHitMjaNNumerique03()._____________________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitMjaNNumerique03 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitMjaNNumerique03.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitMjaNNumerique03(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitMjaNNumerique03
							, fournirKeyMessageSectionHitMjaNNumerique03());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitMjaNNumerique03(...).__________________


	
	/* 39 - modeCalculN. ****************/
	/**
	 * retourne le messageSectionHitModeCalculNRenseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitModeCalculNRenseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitModeCalculNRenseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitModeCalculNRenseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitModeCalculNRenseigne01
					, fournirKeyMessageSectionHitModeCalculNRenseigne01()
					, MESSAGE_SECTIONHIT_MODECALCULN_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitModeCalculNRenseigne01().__________
	

	
	/**
	 * Getter de la clé du messageSectionHitModeCalculNRenseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.modeCalculN.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_MODECALCULN_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitModeCalculNRenseigne01() {
		return KEY_MESSAGE_SECTIONHIT_MODECALCULN_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitModeCalculNRenseigne01()._______



	/**
	 * Getter du <b>SINGLETON de messageSectionHitModeCalculNRenseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitModeCalculNRenseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitModeCalculNRenseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitModeCalculNRenseigne01() 
											throws Exception {
		return fournirMessageSectionHitModeCalculNRenseigne01();
	} // Fin de getMessageSectionHitModeCalculNRenseigne01().______________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitModeCalculNRenseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitModeCalculNRenseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitModeCalculNRenseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitModeCalculNRenseigne01
							, fournirKeyMessageSectionHitModeCalculNRenseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitModeCalculNRenseigne01(...).___________



	/**
	 * retourne le messageSectionHitModeCalculNRegex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitModeCalculNRegex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitModeCalculNRegex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitModeCalculNRegex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitModeCalculNRegex02
					, fournirKeyMessageSectionHitModeCalculNRegex02()
					, MESSAGE_SECTIONHIT_MODECALCULN_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitModeCalculNRegex02().______________
	

	
	/**
	 * Getter de la clé du messageSectionHitModeCalculNRegex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.modeCalculN.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_MODECALCULN_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitModeCalculNRegex02() {
		return KEY_MESSAGE_SECTIONHIT_MODECALCULN_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitModeCalculNRegex02().___________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitModeCalculNRegex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitModeCalculNRegex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitModeCalculNRegex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitModeCalculNRegex02() 
													throws Exception {
		return fournirMessageSectionHitModeCalculNRegex02();
	} // Fin de getMessageSectionHitModeCalculNRegex02().__________________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitModeCalculNRegex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitModeCalculNRegex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitModeCalculNRegex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitModeCalculNRegex02
							, fournirKeyMessageSectionHitModeCalculNRegex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitModeCalculNRegex02(...)._______________


	
	/* 40 - pcPLN. ****************/
	/**
	 * retourne le messageSectionHitPcPLNRenseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitPcPLNRenseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitPcPLNRenseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitPcPLNRenseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitPcPLNRenseigne01
					, fournirKeyMessageSectionHitPcPLNRenseigne01()
					, MESSAGE_SECTIONHIT_PCPLN_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitPcPLNRenseigne01().________________
	

	
	/**
	 * Getter de la clé du messageSectionHitPcPLNRenseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.pcPLN.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_PCPLN_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitPcPLNRenseigne01() {
		return KEY_MESSAGE_SECTIONHIT_PCPLN_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitPcPLNRenseigne01()._____________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitPcPLNRenseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitPcPLNRenseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitPcPLNRenseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitPcPLNRenseigne01() 
											throws Exception {
		return fournirMessageSectionHitPcPLNRenseigne01();
	} // Fin de getMessageSectionHitPcPLNRenseigne01().____________________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitPcPLNRenseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitPcPLNRenseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitPcPLNRenseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitPcPLNRenseigne01
							, fournirKeyMessageSectionHitPcPLNRenseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitPcPLNRenseigne01(...)._________________



	/**
	 * retourne le messageSectionHitPcPLNRegex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitPcPLNRegex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitPcPLNRegex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitPcPLNRegex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitPcPLNRegex02
					, fournirKeyMessageSectionHitPcPLNRegex02()
					, MESSAGE_SECTIONHIT_PCPLN_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitPcPLNRegex02().____________________
	

	
	/**
	 * Getter de la clé du messageSectionHitPcPLNRegex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.pcPLN.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_PCPLN_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitPcPLNRegex02() {
		return KEY_MESSAGE_SECTIONHIT_PCPLN_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitPcPLNRegex02()._________________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitPcPLNRegex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitPcPLNRegex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitPcPLNRegex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitPcPLNRegex02() 
													throws Exception {
		return fournirMessageSectionHitPcPLNRegex02();
	} // Fin de getMessageSectionHitPcPLNRegex02().________________________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitPcPLNRegex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitPcPLNRegex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitPcPLNRegex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitPcPLNRegex02
							, fournirKeyMessageSectionHitPcPLNRegex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitPcPLNRegex02(...)._____________________



	/**
	 * retourne le messageSectionHitPcPLNNumerique03 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitPcPLNNumerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitPcPLNNumerique03 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitPcPLNNumerique03() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitPcPLNNumerique03
					, fournirKeyMessageSectionHitPcPLNNumerique03()
					, MESSAGE_SECTIONHIT_PCPLN_NUMERIQUE_03_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitPcPLNNumerique03().________________
	

	
	/**
	 * Getter de la clé du messageSectionHitPcPLNNumerique03 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.prOrigine.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_PCPLN_NUMERIQUE_03 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitPcPLNNumerique03() {
		return KEY_MESSAGE_SECTIONHIT_PCPLN_NUMERIQUE_03;
	} // Fin de fournirKeyMessageSectionHitPcPLNNumerique03()._____________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitPcPLNNumerique03 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitPcPLNNumerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitPcPLNNumerique03 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitPcPLNNumerique03() 
													throws Exception {
		return fournirMessageSectionHitPcPLNNumerique03();
	} // Fin de getMessageSectionHitPcPLNNumerique03().____________________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitPcPLNNumerique03 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitPcPLNNumerique03.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitPcPLNNumerique03(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitPcPLNNumerique03
							, fournirKeyMessageSectionHitPcPLNNumerique03());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitPcPLNNumerique03(...)._________________	


	
	/* 41 - evaluationPLN. ****************/
	/**
	 * retourne le messageSectionHitEvaluationPLNRenseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitEvaluationPLNRenseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitEvaluationPLNRenseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitEvaluationPLNRenseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitEvaluationPLNRenseigne01
					, fournirKeyMessageSectionHitEvaluationPLNRenseigne01()
					, MESSAGE_SECTIONHIT_EVALUATIONPLN_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitEvaluationPLNRenseigne01().________
	

	
	/**
	 * Getter de la clé du messageSectionHitEvaluationPLNRenseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.evaluationPLN.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_EVALUATIONPLN_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitEvaluationPLNRenseigne01() {
		return KEY_MESSAGE_SECTIONHIT_EVALUATIONPLN_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitEvaluationPLNRenseigne01()._____



	/**
	 * Getter du <b>SINGLETON de messageSectionHitEvaluationPLNRenseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitEvaluationPLNRenseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitEvaluationPLNRenseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitEvaluationPLNRenseigne01() 
											throws Exception {
		return fournirMessageSectionHitEvaluationPLNRenseigne01();
	} // Fin de getMessageSectionHitEvaluationPLNRenseigne01().____________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitEvaluationPLNRenseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitEvaluationPLNRenseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitEvaluationPLNRenseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitEvaluationPLNRenseigne01
							, fournirKeyMessageSectionHitEvaluationPLNRenseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitEvaluationPLNRenseigne01(...)._________



	/**
	 * retourne le messageSectionHitEvaluationPLNRegex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitEvaluationPLNRegex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitEvaluationPLNRegex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitEvaluationPLNRegex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitEvaluationPLNRegex02
					, fournirKeyMessageSectionHitEvaluationPLNRegex02()
					, MESSAGE_SECTIONHIT_EVALUATIONPLN_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitEvaluationPLNRegex02().____________
	

	
	/**
	 * Getter de la clé du messageSectionHitEvaluationPLNRegex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.evaluationPLN.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_EVALUATIONPLN_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitEvaluationPLNRegex02() {
		return KEY_MESSAGE_SECTIONHIT_EVALUATIONPLN_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitEvaluationPLNRegex02()._________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitEvaluationPLNRegex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitEvaluationPLNRegex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitEvaluationPLNRegex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitEvaluationPLNRegex02() 
													throws Exception {
		return fournirMessageSectionHitEvaluationPLNRegex02();
	} // Fin de getMessageSectionHitEvaluationPLNRegex02().________________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitEvaluationPLNRegex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitEvaluationPLNRegex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitEvaluationPLNRegex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitEvaluationPLNRegex02
							, fournirKeyMessageSectionHitEvaluationPLNRegex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitEvaluationPLNRegex02(...)._____________


	
	/* 42 - pcNuitAnnuelN. ****************/
	/**
	 * retourne le messageSectionHitPcNuitAnnuelNRenseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitAnnuelNRenseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitPcNuitAnnuelNRenseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitPcNuitAnnuelNRenseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitPcNuitAnnuelNRenseigne01
					, fournirKeyMessageSectionHitPcNuitAnnuelNRenseigne01()
					, MESSAGE_SECTIONHIT_PCNUITANNUELN_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitPcNuitAnnuelNRenseigne01().________
	

	
	/**
	 * Getter de la clé du messageSectionHitPcNuitAnnuelNRenseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.pcNuitAnnuelN.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_PCNUITANNUELN_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitPcNuitAnnuelNRenseigne01() {
		return KEY_MESSAGE_SECTIONHIT_PCNUITANNUELN_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitPcNuitAnnuelNRenseigne01()._____



	/**
	 * Getter du <b>SINGLETON de messageSectionHitPcNuitAnnuelNRenseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitAnnuelNRenseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitPcNuitAnnuelNRenseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitPcNuitAnnuelNRenseigne01() 
											throws Exception {
		return fournirMessageSectionHitPcNuitAnnuelNRenseigne01();
	} // Fin de getMessageSectionHitPcNuitAnnuelNRenseigne01().____________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitPcNuitAnnuelNRenseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitPcNuitAnnuelNRenseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitPcNuitAnnuelNRenseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitPcNuitAnnuelNRenseigne01
							, fournirKeyMessageSectionHitPcNuitAnnuelNRenseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitPcNuitAnnuelNRenseigne01(...)._________



	/**
	 * retourne le messageSectionHitPcNuitAnnuelNRegex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitAnnuelNRegex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitPcNuitAnnuelNRegex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitPcNuitAnnuelNRegex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitPcNuitAnnuelNRegex02
					, fournirKeyMessageSectionHitPcNuitAnnuelNRegex02()
					, MESSAGE_SECTIONHIT_PCNUITANNUELN_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitPcNuitAnnuelNRegex02().____________
	

	
	/**
	 * Getter de la clé du messageSectionHitPcNuitAnnuelNRegex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.pcNuitAnnuelN.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_PCNUITANNUELN_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitPcNuitAnnuelNRegex02() {
		return KEY_MESSAGE_SECTIONHIT_PCNUITANNUELN_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitPcNuitAnnuelNRegex02()._________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitPcNuitAnnuelNRegex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitAnnuelNRegex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitPcNuitAnnuelNRegex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitPcNuitAnnuelNRegex02() 
													throws Exception {
		return fournirMessageSectionHitPcNuitAnnuelNRegex02();
	} // Fin de getMessageSectionHitPcNuitAnnuelNRegex02().________________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitPcNuitAnnuelNRegex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitPcNuitAnnuelNRegex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitPcNuitAnnuelNRegex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitPcNuitAnnuelNRegex02
							, fournirKeyMessageSectionHitPcNuitAnnuelNRegex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitPcNuitAnnuelNRegex02(...)._____________



	/**
	 * retourne le messageSectionHitPcNuitAnnuelNNumerique03 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitAnnuelNNumerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitPcNuitAnnuelNNumerique03 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitPcNuitAnnuelNNumerique03() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitPcNuitAnnuelNNumerique03
					, fournirKeyMessageSectionHitPcNuitAnnuelNNumerique03()
					, MESSAGE_SECTIONHIT_PCNUITANNUELN_NUMERIQUE_03_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitPcNuitAnnuelNNumerique03().________
	

	
	/**
	 * Getter de la clé du messageSectionHitPcNuitAnnuelNNumerique03 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.prOrigine.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_PCNUITANNUELN_NUMERIQUE_03 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitPcNuitAnnuelNNumerique03() {
		return KEY_MESSAGE_SECTIONHIT_PCNUITANNUELN_NUMERIQUE_03;
	} // Fin de fournirKeyMessageSectionHitPcNuitAnnuelNNumerique03()._____
	


	/**
	 * Getter du <b>SINGLETON de messageSectionHitPcNuitAnnuelNNumerique03 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitAnnuelNNumerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitPcNuitAnnuelNNumerique03 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitPcNuitAnnuelNNumerique03() 
													throws Exception {
		return fournirMessageSectionHitPcNuitAnnuelNNumerique03();
	} // Fin de getMessageSectionHitPcNuitAnnuelNNumerique03().____________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitPcNuitAnnuelNNumerique03 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitPcNuitAnnuelNNumerique03.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitPcNuitAnnuelNNumerique03(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitPcNuitAnnuelNNumerique03
							, fournirKeyMessageSectionHitPcNuitAnnuelNNumerique03());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitPcNuitAnnuelNNumerique03(...)._________


	
	/* 43 - indiceFiabiliteMjaN. ****************/
	/**
	 * retourne le messageSectionHitIndiceFiabiliteMjaNRenseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitIndiceFiabiliteMjaNRenseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitIndiceFiabiliteMjaNRenseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitIndiceFiabiliteMjaNRenseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitIndiceFiabiliteMjaNRenseigne01
					, fournirKeyMessageSectionHitIndiceFiabiliteMjaNRenseigne01()
					, MESSAGE_SECTIONHIT_INDICEFIABLITEMJAN_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitIndiceFiabiliteMjaNRenseigne01().__
	

	
	/**
	 * Getter de la clé du messageSectionHitIndiceFiabiliteMjaNRenseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.indiceFiabiliteMjaN.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_INDICEFIABLITEMJAN_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitIndiceFiabiliteMjaNRenseigne01() {
		return KEY_MESSAGE_SECTIONHIT_INDICEFIABLITEMJAN_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitIndiceFiabiliteMjaNRenseigne01().



	/**
	 * Getter du <b>SINGLETON de messageSectionHitIndiceFiabiliteMjaNRenseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitIndiceFiabiliteMjaNRenseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitIndiceFiabiliteMjaNRenseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitIndiceFiabiliteMjaNRenseigne01() 
											throws Exception {
		return fournirMessageSectionHitIndiceFiabiliteMjaNRenseigne01();
	} // Fin de getMessageSectionHitIndiceFiabiliteMjaNRenseigne01().______
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitIndiceFiabiliteMjaNRenseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitIndiceFiabiliteMjaNRenseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitIndiceFiabiliteMjaNRenseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitIndiceFiabiliteMjaNRenseigne01
							, fournirKeyMessageSectionHitIndiceFiabiliteMjaNRenseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitIndiceFiabiliteMjaNRenseigne01(...).___



	/**
	 * retourne le messageSectionHitIndiceFiabiliteMjaNRegex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitIndiceFiabiliteMjaNRegex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitIndiceFiabiliteMjaNRegex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitIndiceFiabiliteMjaNRegex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitIndiceFiabiliteMjaNRegex02
					, fournirKeyMessageSectionHitIndiceFiabiliteMjaNRegex02()
					, MESSAGE_SECTIONHIT_INDICEFIABLITEMJAN_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitIndiceFiabiliteMjaNRegex02().______
	

	
	/**
	 * Getter de la clé du messageSectionHitIndiceFiabiliteMjaNRegex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.indiceFiabiliteMjaN.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_INDICEFIABLITEMJAN_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitIndiceFiabiliteMjaNRegex02() {
		return KEY_MESSAGE_SECTIONHIT_INDICEFIABLITEMJAN_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitIndiceFiabiliteMjaNRegex02().___



	/**
	 * Getter du <b>SINGLETON de messageSectionHitIndiceFiabiliteMjaNRegex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitIndiceFiabiliteMjaNRegex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitIndiceFiabiliteMjaNRegex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitIndiceFiabiliteMjaNRegex02() 
													throws Exception {
		return fournirMessageSectionHitIndiceFiabiliteMjaNRegex02();
	} // Fin de getMessageSectionHitIndiceFiabiliteMjaNRegex02().__________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitIndiceFiabiliteMjaNRegex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitIndiceFiabiliteMjaNRegex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitIndiceFiabiliteMjaNRegex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitIndiceFiabiliteMjaNRegex02
							, fournirKeyMessageSectionHitIndiceFiabiliteMjaNRegex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitIndiceFiabiliteMjaNRegex02(...)._______


	
	/* 44 - mjmNmois01. ****************/
	/**
	 * retourne le messageSectionHitMjmNmois01Renseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitMjmNmois01Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitMjmNmois01Renseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitMjmNmois01Renseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitMjmNmois01Renseigne01
					, fournirKeyMessageSectionHitMjmNmois01Renseigne01()
					, MESSAGE_SECTIONHIT_MJMNMOIS01_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitMjmNmois01Renseigne01().___________
	

	
	/**
	 * Getter de la clé du messageSectionHitMjmNmois01Renseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.mjmNmois01.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_MJMNMOIS01_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitMjmNmois01Renseigne01() {
		return KEY_MESSAGE_SECTIONHIT_MJMNMOIS01_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitMjmNmois01Renseigne01().________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitMjmNmois01Renseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitMjmNmois01Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitMjmNmois01Renseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitMjmNmois01Renseigne01() 
											throws Exception {
		return fournirMessageSectionHitMjmNmois01Renseigne01();
	} // Fin de getMessageSectionHitMjmNmois01Renseigne01()._______________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitMjmNmois01Renseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitMjmNmois01Renseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitMjmNmois01Renseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitMjmNmois01Renseigne01
							, fournirKeyMessageSectionHitMjmNmois01Renseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitMjmNmois01Renseigne01(...).____________



	/**
	 * retourne le messageSectionHitMjmNmois01Regex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitMjmNmois01Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitMjmNmois01Regex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitMjmNmois01Regex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitMjmNmois01Regex02
					, fournirKeyMessageSectionHitMjmNmois01Regex02()
					, MESSAGE_SECTIONHIT_MJMNMOIS01_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitMjmNmois01Regex02()._______________
	

	
	/**
	 * Getter de la clé du messageSectionHitMjmNmois01Regex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.mjmNmois01.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_MJMNMOIS01_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitMjmNmois01Regex02() {
		return KEY_MESSAGE_SECTIONHIT_MJMNMOIS01_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitMjmNmois01Regex02().____________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitMjmNmois01Regex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitMjmNmois01Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitMjmNmois01Regex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitMjmNmois01Regex02() 
													throws Exception {
		return fournirMessageSectionHitMjmNmois01Regex02();
	} // Fin de getMessageSectionHitMjmNmois01Regex02().___________________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitMjmNmois01Regex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitMjmNmois01Regex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitMjmNmois01Regex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitMjmNmois01Regex02
							, fournirKeyMessageSectionHitMjmNmois01Regex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitMjmNmois01Regex02(...).________________



	/**
	 * retourne le messageSectionHitMjmNmois01Numerique03 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitMjmNmois01Numerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitMjmNmois01Numerique03 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitMjmNmois01Numerique03() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitMjmNmois01Numerique03
					, fournirKeyMessageSectionHitMjmNmois01Numerique03()
					, MESSAGE_SECTIONHIT_MJMNMOIS01_NUMERIQUE_03_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitMjmNmois01Numerique03().___________
	

	
	/**
	 * Getter de la clé du messageSectionHitMjmNmois01Numerique03 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.prOrigine.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_MJMNMOIS01_NUMERIQUE_03 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitMjmNmois01Numerique03() {
		return KEY_MESSAGE_SECTIONHIT_MJMNMOIS01_NUMERIQUE_03;
	} // Fin de fournirKeyMessageSectionHitMjmNmois01Numerique03().________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitMjmNmois01Numerique03 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitMjmNmois01Numerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitMjmNmois01Numerique03 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitMjmNmois01Numerique03() 
													throws Exception {
		return fournirMessageSectionHitMjmNmois01Numerique03();
	} // Fin de getMessageSectionHitMjmNmois01Numerique03()._______________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitMjmNmois01Numerique03 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitMjmNmois01Numerique03.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitMjmNmois01Numerique03(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitMjmNmois01Numerique03
							, fournirKeyMessageSectionHitMjmNmois01Numerique03());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitMjmNmois01Numerique03(...).____________	


	
	/* 45 - pcNuitNmois01. ****************/
	/**
	 * retourne le messageSectionHitPcNuitNmois01Renseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitNmois01Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitPcNuitNmois01Renseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitPcNuitNmois01Renseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitPcNuitNmois01Renseigne01
					, fournirKeyMessageSectionHitPcNuitNmois01Renseigne01()
					, MESSAGE_SECTIONHIT_PCNUITNMOIS01_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitPcNuitNmois01Renseigne01().________
	

	
	/**
	 * Getter de la clé du messageSectionHitPcNuitNmois01Renseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.pcNuitNmois01.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS01_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitPcNuitNmois01Renseigne01() {
		return KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS01_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitPcNuitNmois01Renseigne01()._____



	/**
	 * Getter du <b>SINGLETON de messageSectionHitPcNuitNmois01Renseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitNmois01Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitPcNuitNmois01Renseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitPcNuitNmois01Renseigne01() 
											throws Exception {
		return fournirMessageSectionHitPcNuitNmois01Renseigne01();
	} // Fin de getMessageSectionHitPcNuitNmois01Renseigne01().____________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitPcNuitNmois01Renseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitPcNuitNmois01Renseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitPcNuitNmois01Renseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitPcNuitNmois01Renseigne01
							, fournirKeyMessageSectionHitPcNuitNmois01Renseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitPcNuitNmois01Renseigne01(...)._________



	/**
	 * retourne le messageSectionHitPcNuitNmois01Regex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitNmois01Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitPcNuitNmois01Regex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitPcNuitNmois01Regex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitPcNuitNmois01Regex02
					, fournirKeyMessageSectionHitPcNuitNmois01Regex02()
					, MESSAGE_SECTIONHIT_PCNUITNMOIS01_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitPcNuitNmois01Regex02().____________
	

	
	/**
	 * Getter de la clé du messageSectionHitPcNuitNmois01Regex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.pcNuitNmois01.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS01_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitPcNuitNmois01Regex02() {
		return KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS01_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitPcNuitNmois01Regex02()._________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitPcNuitNmois01Regex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitNmois01Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitPcNuitNmois01Regex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitPcNuitNmois01Regex02() 
													throws Exception {
		return fournirMessageSectionHitPcNuitNmois01Regex02();
	} // Fin de getMessageSectionHitPcNuitNmois01Regex02().________________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitPcNuitNmois01Regex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitPcNuitNmois01Regex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitPcNuitNmois01Regex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitPcNuitNmois01Regex02
							, fournirKeyMessageSectionHitPcNuitNmois01Regex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitPcNuitNmois01Regex02(...)._____________



	/**
	 * retourne le messageSectionHitPcNuitNmois01Numerique03 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitNmois01Numerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitPcNuitNmois01Numerique03 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitPcNuitNmois01Numerique03() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitPcNuitNmois01Numerique03
					, fournirKeyMessageSectionHitPcNuitNmois01Numerique03()
					, MESSAGE_SECTIONHIT_PCNUITNMOIS01_NUMERIQUE_03_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitPcNuitNmois01Numerique03().________
	

	
	/**
	 * Getter de la clé du messageSectionHitPcNuitNmois01Numerique03 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.prOrigine.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS01_NUMERIQUE_03 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitPcNuitNmois01Numerique03() {
		return KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS01_NUMERIQUE_03;
	} // Fin de fournirKeyMessageSectionHitPcNuitNmois01Numerique03()._____



	/**
	 * Getter du <b>SINGLETON de messageSectionHitPcNuitNmois01Numerique03 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitNmois01Numerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitPcNuitNmois01Numerique03 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitPcNuitNmois01Numerique03() 
													throws Exception {
		return fournirMessageSectionHitPcNuitNmois01Numerique03();
	} // Fin de getMessageSectionHitPcNuitNmois01Numerique03().____________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitPcNuitNmois01Numerique03 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitPcNuitNmois01Numerique03.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitPcNuitNmois01Numerique03(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitPcNuitNmois01Numerique03
							, fournirKeyMessageSectionHitPcNuitNmois01Numerique03());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitPcNuitNmois01Numerique03(...)._________


	
	/* 46 - mjmNmois02. ****************/
	/**
	 * retourne le messageSectionHitMjmNmois02Renseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitMjmNmois02Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitMjmNmois02Renseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitMjmNmois02Renseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitMjmNmois02Renseigne01
					, fournirKeyMessageSectionHitMjmNmois02Renseigne01()
					, MESSAGE_SECTIONHIT_MJMNMOIS02_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitMjmNmois02Renseigne01().___________
	

	
	/**
	 * Getter de la clé du messageSectionHitMjmNmois02Renseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.mjmNmois02.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_MJMNMOIS02_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitMjmNmois02Renseigne01() {
		return KEY_MESSAGE_SECTIONHIT_MJMNMOIS02_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitMjmNmois02Renseigne01().________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitMjmNmois02Renseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitMjmNmois02Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitMjmNmois02Renseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitMjmNmois02Renseigne01() 
											throws Exception {
		return fournirMessageSectionHitMjmNmois02Renseigne01();
	} // Fin de getMessageSectionHitMjmNmois02Renseigne01()._______________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitMjmNmois02Renseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitMjmNmois02Renseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitMjmNmois02Renseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitMjmNmois02Renseigne01
							, fournirKeyMessageSectionHitMjmNmois02Renseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitMjmNmois02Renseigne01(...).____________



	/**
	 * retourne le messageSectionHitMjmNmois02Regex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitMjmNmois02Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitMjmNmois02Regex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitMjmNmois02Regex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitMjmNmois02Regex02
					, fournirKeyMessageSectionHitMjmNmois02Regex02()
					, MESSAGE_SECTIONHIT_MJMNMOIS02_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitMjmNmois02Regex02()._______________
	

	
	/**
	 * Getter de la clé du messageSectionHitMjmNmois02Regex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.mjmNmois02.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_MJMNMOIS02_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitMjmNmois02Regex02() {
		return KEY_MESSAGE_SECTIONHIT_MJMNMOIS02_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitMjmNmois02Regex02().____________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitMjmNmois02Regex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitMjmNmois02Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitMjmNmois02Regex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitMjmNmois02Regex02() 
													throws Exception {
		return fournirMessageSectionHitMjmNmois02Regex02();
	} // Fin de getMessageSectionHitMjmNmois02Regex02().___________________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitMjmNmois02Regex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitMjmNmois02Regex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitMjmNmois02Regex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitMjmNmois02Regex02
							, fournirKeyMessageSectionHitMjmNmois02Regex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitMjmNmois02Regex02(...).________________



	/**
	 * retourne le messageSectionHitMjmNmois02Numerique03 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitMjmNmois02Numerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitMjmNmois02Numerique03 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitMjmNmois02Numerique03() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitMjmNmois02Numerique03
					, fournirKeyMessageSectionHitMjmNmois02Numerique03()
					, MESSAGE_SECTIONHIT_MJMNMOIS02_NUMERIQUE_03_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitMjmNmois02Numerique03().___________
	

	
	/**
	 * Getter de la clé du messageSectionHitMjmNmois02Numerique03 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.prOrigine.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_MJMNMOIS02_NUMERIQUE_03 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitMjmNmois02Numerique03() {
		return KEY_MESSAGE_SECTIONHIT_MJMNMOIS02_NUMERIQUE_03;
	} // Fin de fournirKeyMessageSectionHitMjmNmois02Numerique03().________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitMjmNmois02Numerique03 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitMjmNmois02Numerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitMjmNmois02Numerique03 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitMjmNmois02Numerique03() 
													throws Exception {
		return fournirMessageSectionHitMjmNmois02Numerique03();
	} // Fin de getMessageSectionHitMjmNmois02Numerique03()._______________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitMjmNmois02Numerique03 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitMjmNmois02Numerique03.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitMjmNmois02Numerique03(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitMjmNmois02Numerique03
							, fournirKeyMessageSectionHitMjmNmois02Numerique03());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitMjmNmois02Numerique03(...).____________	


	
	/* 47 - pcNuitNmois02. ****************/
	/**
	 * retourne le messageSectionHitPcNuitNmois02Renseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitNmois02Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitPcNuitNmois02Renseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitPcNuitNmois02Renseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitPcNuitNmois02Renseigne01
					, fournirKeyMessageSectionHitPcNuitNmois02Renseigne01()
					, MESSAGE_SECTIONHIT_PCNUITNMOIS02_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitPcNuitNmois02Renseigne01().________
	

	
	/**
	 * Getter de la clé du messageSectionHitPcNuitNmois02Renseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.pcNuitNmois02.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS02_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitPcNuitNmois02Renseigne01() {
		return KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS02_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitPcNuitNmois02Renseigne01()._____



	/**
	 * Getter du <b>SINGLETON de messageSectionHitPcNuitNmois02Renseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitNmois02Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitPcNuitNmois02Renseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitPcNuitNmois02Renseigne01() 
											throws Exception {
		return fournirMessageSectionHitPcNuitNmois02Renseigne01();
	} // Fin de getMessageSectionHitPcNuitNmois02Renseigne01().____________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitPcNuitNmois02Renseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitPcNuitNmois02Renseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitPcNuitNmois02Renseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitPcNuitNmois02Renseigne01
							, fournirKeyMessageSectionHitPcNuitNmois02Renseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitPcNuitNmois02Renseigne01(...)._________



	/**
	 * retourne le messageSectionHitPcNuitNmois02Regex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitNmois02Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitPcNuitNmois02Regex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitPcNuitNmois02Regex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitPcNuitNmois02Regex02
					, fournirKeyMessageSectionHitPcNuitNmois02Regex02()
					, MESSAGE_SECTIONHIT_PCNUITNMOIS02_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitPcNuitNmois02Regex02().____________
	

	
	/**
	 * Getter de la clé du messageSectionHitPcNuitNmois02Regex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.pcNuitNmois02.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS02_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitPcNuitNmois02Regex02() {
		return KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS02_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitPcNuitNmois02Regex02()._________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitPcNuitNmois02Regex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitNmois02Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitPcNuitNmois02Regex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitPcNuitNmois02Regex02() 
													throws Exception {
		return fournirMessageSectionHitPcNuitNmois02Regex02();
	} // Fin de getMessageSectionHitPcNuitNmois02Regex02().________________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitPcNuitNmois02Regex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitPcNuitNmois02Regex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitPcNuitNmois02Regex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitPcNuitNmois02Regex02
							, fournirKeyMessageSectionHitPcNuitNmois02Regex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitPcNuitNmois02Regex02(...)._____________



	/**
	 * retourne le messageSectionHitPcNuitNmois02Numerique03 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitNmois02Numerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitPcNuitNmois02Numerique03 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitPcNuitNmois02Numerique03() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitPcNuitNmois02Numerique03
					, fournirKeyMessageSectionHitPcNuitNmois02Numerique03()
					, MESSAGE_SECTIONHIT_PCNUITNMOIS02_NUMERIQUE_03_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitPcNuitNmois02Numerique03().________
	

	
	/**
	 * Getter de la clé du messageSectionHitPcNuitNmois02Numerique03 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.prOrigine.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS02_NUMERIQUE_03 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitPcNuitNmois02Numerique03() {
		return KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS02_NUMERIQUE_03;
	} // Fin de fournirKeyMessageSectionHitPcNuitNmois02Numerique03()._____



	/**
	 * Getter du <b>SINGLETON de messageSectionHitPcNuitNmois02Numerique03 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitNmois02Numerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitPcNuitNmois02Numerique03 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitPcNuitNmois02Numerique03() 
													throws Exception {
		return fournirMessageSectionHitPcNuitNmois02Numerique03();
	} // Fin de getMessageSectionHitPcNuitNmois02Numerique03().____________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitPcNuitNmois02Numerique03 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitPcNuitNmois02Numerique03.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitPcNuitNmois02Numerique03(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitPcNuitNmois02Numerique03
							, fournirKeyMessageSectionHitPcNuitNmois02Numerique03());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitPcNuitNmois02Numerique03(...)._________


	
	/* 48 - mjmNmois03. ****************/
	/**
	 * retourne le messageSectionHitMjmNmois03Renseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitMjmNmois03Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitMjmNmois03Renseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitMjmNmois03Renseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitMjmNmois03Renseigne01
					, fournirKeyMessageSectionHitMjmNmois03Renseigne01()
					, MESSAGE_SECTIONHIT_MJMNMOIS03_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitMjmNmois03Renseigne01().___________
	

	
	/**
	 * Getter de la clé du messageSectionHitMjmNmois03Renseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.mjmNmois03.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_MJMNMOIS03_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitMjmNmois03Renseigne01() {
		return KEY_MESSAGE_SECTIONHIT_MJMNMOIS03_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitMjmNmois03Renseigne01().________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitMjmNmois03Renseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitMjmNmois03Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitMjmNmois03Renseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitMjmNmois03Renseigne01() 
											throws Exception {
		return fournirMessageSectionHitMjmNmois03Renseigne01();
	} // Fin de getMessageSectionHitMjmNmois03Renseigne01()._______________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitMjmNmois03Renseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitMjmNmois03Renseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitMjmNmois03Renseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitMjmNmois03Renseigne01
							, fournirKeyMessageSectionHitMjmNmois03Renseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitMjmNmois03Renseigne01(...).____________



	/**
	 * retourne le messageSectionHitMjmNmois03Regex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitMjmNmois03Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitMjmNmois03Regex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitMjmNmois03Regex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitMjmNmois03Regex02
					, fournirKeyMessageSectionHitMjmNmois03Regex02()
					, MESSAGE_SECTIONHIT_MJMNMOIS03_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitMjmNmois03Regex02()._______________
	

	
	/**
	 * Getter de la clé du messageSectionHitMjmNmois03Regex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.mjmNmois03.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_MJMNMOIS03_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitMjmNmois03Regex02() {
		return KEY_MESSAGE_SECTIONHIT_MJMNMOIS03_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitMjmNmois03Regex02().____________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitMjmNmois03Regex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitMjmNmois03Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitMjmNmois03Regex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitMjmNmois03Regex02() 
													throws Exception {
		return fournirMessageSectionHitMjmNmois03Regex02();
	} // Fin de getMessageSectionHitMjmNmois03Regex02().___________________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitMjmNmois03Regex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitMjmNmois03Regex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitMjmNmois03Regex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitMjmNmois03Regex02
							, fournirKeyMessageSectionHitMjmNmois03Regex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitMjmNmois03Regex02(...).________________



	/**
	 * retourne le messageSectionHitMjmNmois03Numerique03 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitMjmNmois03Numerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitMjmNmois03Numerique03 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitMjmNmois03Numerique03() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitMjmNmois03Numerique03
					, fournirKeyMessageSectionHitMjmNmois03Numerique03()
					, MESSAGE_SECTIONHIT_MJMNMOIS03_NUMERIQUE_03_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitMjmNmois03Numerique03().___________
	

	
	/**
	 * Getter de la clé du messageSectionHitMjmNmois03Numerique03 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.prOrigine.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_MJMNMOIS03_NUMERIQUE_03 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitMjmNmois03Numerique03() {
		return KEY_MESSAGE_SECTIONHIT_MJMNMOIS03_NUMERIQUE_03;
	} // Fin de fournirKeyMessageSectionHitMjmNmois03Numerique03().________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitMjmNmois03Numerique03 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitMjmNmois03Numerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitMjmNmois03Numerique03 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitMjmNmois03Numerique03() 
													throws Exception {
		return fournirMessageSectionHitMjmNmois03Numerique03();
	} // Fin de getMessageSectionHitMjmNmois03Numerique03()._______________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitMjmNmois03Numerique03 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitMjmNmois03Numerique03.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitMjmNmois03Numerique03(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitMjmNmois03Numerique03
							, fournirKeyMessageSectionHitMjmNmois03Numerique03());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitMjmNmois03Numerique03(...).____________	


	
	/* 49 - pcNuitNmois03. ****************/
	/**
	 * retourne le messageSectionHitPcNuitNmois03Renseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitNmois03Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitPcNuitNmois03Renseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitPcNuitNmois03Renseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitPcNuitNmois03Renseigne01
					, fournirKeyMessageSectionHitPcNuitNmois03Renseigne01()
					, MESSAGE_SECTIONHIT_PCNUITNMOIS03_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitPcNuitNmois03Renseigne01().________
	

	
	/**
	 * Getter de la clé du messageSectionHitPcNuitNmois03Renseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.pcNuitNmois03.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS03_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitPcNuitNmois03Renseigne01() {
		return KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS03_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitPcNuitNmois03Renseigne01()._____



	/**
	 * Getter du <b>SINGLETON de messageSectionHitPcNuitNmois03Renseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitNmois03Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitPcNuitNmois03Renseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitPcNuitNmois03Renseigne01() 
											throws Exception {
		return fournirMessageSectionHitPcNuitNmois03Renseigne01();
	} // Fin de getMessageSectionHitPcNuitNmois03Renseigne01().____________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitPcNuitNmois03Renseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitPcNuitNmois03Renseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitPcNuitNmois03Renseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitPcNuitNmois03Renseigne01
							, fournirKeyMessageSectionHitPcNuitNmois03Renseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitPcNuitNmois03Renseigne01(...)._________



	/**
	 * retourne le messageSectionHitPcNuitNmois03Regex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitNmois03Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitPcNuitNmois03Regex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitPcNuitNmois03Regex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitPcNuitNmois03Regex02
					, fournirKeyMessageSectionHitPcNuitNmois03Regex02()
					, MESSAGE_SECTIONHIT_PCNUITNMOIS03_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitPcNuitNmois03Regex02().____________
	

	
	/**
	 * Getter de la clé du messageSectionHitPcNuitNmois03Regex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.pcNuitNmois03.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS03_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitPcNuitNmois03Regex02() {
		return KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS03_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitPcNuitNmois03Regex02()._________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitPcNuitNmois03Regex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitNmois03Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitPcNuitNmois03Regex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitPcNuitNmois03Regex02() 
													throws Exception {
		return fournirMessageSectionHitPcNuitNmois03Regex02();
	} // Fin de getMessageSectionHitPcNuitNmois03Regex02().________________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitPcNuitNmois03Regex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitPcNuitNmois03Regex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitPcNuitNmois03Regex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitPcNuitNmois03Regex02
							, fournirKeyMessageSectionHitPcNuitNmois03Regex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitPcNuitNmois03Regex02(...)._____________



	/**
	 * retourne le messageSectionHitPcNuitNmois03Numerique03 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitNmois03Numerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitPcNuitNmois03Numerique03 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitPcNuitNmois03Numerique03() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitPcNuitNmois03Numerique03
					, fournirKeyMessageSectionHitPcNuitNmois03Numerique03()
					, MESSAGE_SECTIONHIT_PCNUITNMOIS03_NUMERIQUE_03_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitPcNuitNmois03Numerique03().________
	

	
	/**
	 * Getter de la clé du messageSectionHitPcNuitNmois03Numerique03 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.prOrigine.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS03_NUMERIQUE_03 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitPcNuitNmois03Numerique03() {
		return KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS03_NUMERIQUE_03;
	} // Fin de fournirKeyMessageSectionHitPcNuitNmois03Numerique03()._____



	/**
	 * Getter du <b>SINGLETON de messageSectionHitPcNuitNmois03Numerique03 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitNmois03Numerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitPcNuitNmois03Numerique03 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitPcNuitNmois03Numerique03() 
													throws Exception {
		return fournirMessageSectionHitPcNuitNmois03Numerique03();
	} // Fin de getMessageSectionHitPcNuitNmois03Numerique03().____________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitPcNuitNmois03Numerique03 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitPcNuitNmois03Numerique03.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitPcNuitNmois03Numerique03(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitPcNuitNmois03Numerique03
							, fournirKeyMessageSectionHitPcNuitNmois03Numerique03());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitPcNuitNmois03Numerique03(...)._________


	
	/* 50 - mjmNmois04. ****************/
	/**
	 * retourne le messageSectionHitMjmNmois04Renseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitMjmNmois04Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitMjmNmois04Renseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitMjmNmois04Renseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitMjmNmois04Renseigne01
					, fournirKeyMessageSectionHitMjmNmois04Renseigne01()
					, MESSAGE_SECTIONHIT_MJMNMOIS04_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitMjmNmois04Renseigne01().___________
	

	
	/**
	 * Getter de la clé du messageSectionHitMjmNmois04Renseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.mjmNmois04.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_MJMNMOIS04_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitMjmNmois04Renseigne01() {
		return KEY_MESSAGE_SECTIONHIT_MJMNMOIS04_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitMjmNmois04Renseigne01().________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitMjmNmois04Renseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitMjmNmois04Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitMjmNmois04Renseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitMjmNmois04Renseigne01() 
											throws Exception {
		return fournirMessageSectionHitMjmNmois04Renseigne01();
	} // Fin de getMessageSectionHitMjmNmois04Renseigne01()._______________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitMjmNmois04Renseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitMjmNmois04Renseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitMjmNmois04Renseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitMjmNmois04Renseigne01
							, fournirKeyMessageSectionHitMjmNmois04Renseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitMjmNmois04Renseigne01(...).____________



	/**
	 * retourne le messageSectionHitMjmNmois04Regex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitMjmNmois04Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitMjmNmois04Regex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitMjmNmois04Regex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitMjmNmois04Regex02
					, fournirKeyMessageSectionHitMjmNmois04Regex02()
					, MESSAGE_SECTIONHIT_MJMNMOIS04_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitMjmNmois04Regex02()._______________
	

	
	/**
	 * Getter de la clé du messageSectionHitMjmNmois04Regex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.mjmNmois04.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_MJMNMOIS04_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitMjmNmois04Regex02() {
		return KEY_MESSAGE_SECTIONHIT_MJMNMOIS04_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitMjmNmois04Regex02().____________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitMjmNmois04Regex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitMjmNmois04Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitMjmNmois04Regex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitMjmNmois04Regex02() 
													throws Exception {
		return fournirMessageSectionHitMjmNmois04Regex02();
	} // Fin de getMessageSectionHitMjmNmois04Regex02().___________________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitMjmNmois04Regex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitMjmNmois04Regex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitMjmNmois04Regex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitMjmNmois04Regex02
							, fournirKeyMessageSectionHitMjmNmois04Regex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitMjmNmois04Regex02(...).________________



	/**
	 * retourne le messageSectionHitMjmNmois04Numerique03 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitMjmNmois04Numerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitMjmNmois04Numerique03 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitMjmNmois04Numerique03() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitMjmNmois04Numerique03
					, fournirKeyMessageSectionHitMjmNmois04Numerique03()
					, MESSAGE_SECTIONHIT_MJMNMOIS04_NUMERIQUE_03_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitMjmNmois04Numerique03().___________
	

	
	/**
	 * Getter de la clé du messageSectionHitMjmNmois04Numerique03 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.prOrigine.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_MJMNMOIS04_NUMERIQUE_03 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitMjmNmois04Numerique03() {
		return KEY_MESSAGE_SECTIONHIT_MJMNMOIS04_NUMERIQUE_03;
	} // Fin de fournirKeyMessageSectionHitMjmNmois04Numerique03().________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitMjmNmois04Numerique03 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitMjmNmois04Numerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitMjmNmois04Numerique03 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitMjmNmois04Numerique03() 
													throws Exception {
		return fournirMessageSectionHitMjmNmois04Numerique03();
	} // Fin de getMessageSectionHitMjmNmois04Numerique03()._______________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitMjmNmois04Numerique03 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitMjmNmois04Numerique03.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitMjmNmois04Numerique03(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitMjmNmois04Numerique03
							, fournirKeyMessageSectionHitMjmNmois04Numerique03());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitMjmNmois04Numerique03(...).____________	


	
	/* 51 - pcNuitNmois04. ****************/
	/**
	 * retourne le messageSectionHitPcNuitNmois04Renseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitNmois04Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitPcNuitNmois04Renseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitPcNuitNmois04Renseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitPcNuitNmois04Renseigne01
					, fournirKeyMessageSectionHitPcNuitNmois04Renseigne01()
					, MESSAGE_SECTIONHIT_PCNUITNMOIS04_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitPcNuitNmois04Renseigne01().________
	

	
	/**
	 * Getter de la clé du messageSectionHitPcNuitNmois04Renseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.pcNuitNmois04.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS04_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitPcNuitNmois04Renseigne01() {
		return KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS04_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitPcNuitNmois04Renseigne01()._____



	/**
	 * Getter du <b>SINGLETON de messageSectionHitPcNuitNmois04Renseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitNmois04Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitPcNuitNmois04Renseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitPcNuitNmois04Renseigne01() 
											throws Exception {
		return fournirMessageSectionHitPcNuitNmois04Renseigne01();
	} // Fin de getMessageSectionHitPcNuitNmois04Renseigne01().____________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitPcNuitNmois04Renseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitPcNuitNmois04Renseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitPcNuitNmois04Renseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitPcNuitNmois04Renseigne01
							, fournirKeyMessageSectionHitPcNuitNmois04Renseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitPcNuitNmois04Renseigne01(...)._________



	/**
	 * retourne le messageSectionHitPcNuitNmois04Regex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitNmois04Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitPcNuitNmois04Regex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitPcNuitNmois04Regex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitPcNuitNmois04Regex02
					, fournirKeyMessageSectionHitPcNuitNmois04Regex02()
					, MESSAGE_SECTIONHIT_PCNUITNMOIS04_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitPcNuitNmois04Regex02().____________
	

	
	/**
	 * Getter de la clé du messageSectionHitPcNuitNmois04Regex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.pcNuitNmois04.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS04_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitPcNuitNmois04Regex02() {
		return KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS04_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitPcNuitNmois04Regex02()._________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitPcNuitNmois04Regex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitNmois04Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitPcNuitNmois04Regex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitPcNuitNmois04Regex02() 
													throws Exception {
		return fournirMessageSectionHitPcNuitNmois04Regex02();
	} // Fin de getMessageSectionHitPcNuitNmois04Regex02().________________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitPcNuitNmois04Regex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitPcNuitNmois04Regex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitPcNuitNmois04Regex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitPcNuitNmois04Regex02
							, fournirKeyMessageSectionHitPcNuitNmois04Regex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitPcNuitNmois04Regex02(...)._____________



	/**
	 * retourne le messageSectionHitPcNuitNmois04Numerique03 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitNmois04Numerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitPcNuitNmois04Numerique03 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitPcNuitNmois04Numerique03() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitPcNuitNmois04Numerique03
					, fournirKeyMessageSectionHitPcNuitNmois04Numerique03()
					, MESSAGE_SECTIONHIT_PCNUITNMOIS04_NUMERIQUE_03_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitPcNuitNmois04Numerique03().________
	

	
	/**
	 * Getter de la clé du messageSectionHitPcNuitNmois04Numerique03 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.prOrigine.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS04_NUMERIQUE_03 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitPcNuitNmois04Numerique03() {
		return KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS04_NUMERIQUE_03;
	} // Fin de fournirKeyMessageSectionHitPcNuitNmois04Numerique03()._____



	/**
	 * Getter du <b>SINGLETON de messageSectionHitPcNuitNmois04Numerique03 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitNmois04Numerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitPcNuitNmois04Numerique03 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitPcNuitNmois04Numerique03() 
													throws Exception {
		return fournirMessageSectionHitPcNuitNmois04Numerique03();
	} // Fin de getMessageSectionHitPcNuitNmois04Numerique03().____________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitPcNuitNmois04Numerique03 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitPcNuitNmois04Numerique03.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitPcNuitNmois04Numerique03(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitPcNuitNmois04Numerique03
							, fournirKeyMessageSectionHitPcNuitNmois04Numerique03());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitPcNuitNmois04Numerique03(...)._________



	
	/* 52 - mjmNmois05. ****************/
	/**
	 * retourne le messageSectionHitMjmNmois05Renseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitMjmNmois05Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitMjmNmois05Renseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitMjmNmois05Renseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitMjmNmois05Renseigne01
					, fournirKeyMessageSectionHitMjmNmois05Renseigne01()
					, MESSAGE_SECTIONHIT_MJMNMOIS05_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitMjmNmois05Renseigne01().___________
	

	
	/**
	 * Getter de la clé du messageSectionHitMjmNmois05Renseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.mjmNmois05.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_MJMNMOIS05_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitMjmNmois05Renseigne01() {
		return KEY_MESSAGE_SECTIONHIT_MJMNMOIS05_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitMjmNmois05Renseigne01().________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitMjmNmois05Renseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitMjmNmois05Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitMjmNmois05Renseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitMjmNmois05Renseigne01() 
											throws Exception {
		return fournirMessageSectionHitMjmNmois05Renseigne01();
	} // Fin de getMessageSectionHitMjmNmois05Renseigne01()._______________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitMjmNmois05Renseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitMjmNmois05Renseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitMjmNmois05Renseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitMjmNmois05Renseigne01
							, fournirKeyMessageSectionHitMjmNmois05Renseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitMjmNmois05Renseigne01(...).____________



	/**
	 * retourne le messageSectionHitMjmNmois05Regex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitMjmNmois05Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitMjmNmois05Regex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitMjmNmois05Regex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitMjmNmois05Regex02
					, fournirKeyMessageSectionHitMjmNmois05Regex02()
					, MESSAGE_SECTIONHIT_MJMNMOIS05_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitMjmNmois05Regex02()._______________
	

	
	/**
	 * Getter de la clé du messageSectionHitMjmNmois05Regex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.mjmNmois05.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_MJMNMOIS05_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitMjmNmois05Regex02() {
		return KEY_MESSAGE_SECTIONHIT_MJMNMOIS05_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitMjmNmois05Regex02().____________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitMjmNmois05Regex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitMjmNmois05Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitMjmNmois05Regex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitMjmNmois05Regex02() 
													throws Exception {
		return fournirMessageSectionHitMjmNmois05Regex02();
	} // Fin de getMessageSectionHitMjmNmois05Regex02().___________________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitMjmNmois05Regex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitMjmNmois05Regex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitMjmNmois05Regex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitMjmNmois05Regex02
							, fournirKeyMessageSectionHitMjmNmois05Regex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitMjmNmois05Regex02(...).________________



	/**
	 * retourne le messageSectionHitMjmNmois05Numerique03 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitMjmNmois05Numerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitMjmNmois05Numerique03 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitMjmNmois05Numerique03() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitMjmNmois05Numerique03
					, fournirKeyMessageSectionHitMjmNmois05Numerique03()
					, MESSAGE_SECTIONHIT_MJMNMOIS05_NUMERIQUE_03_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitMjmNmois05Numerique03().___________
	

	
	/**
	 * Getter de la clé du messageSectionHitMjmNmois05Numerique03 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.prOrigine.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_MJMNMOIS05_NUMERIQUE_03 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitMjmNmois05Numerique03() {
		return KEY_MESSAGE_SECTIONHIT_MJMNMOIS05_NUMERIQUE_03;
	} // Fin de fournirKeyMessageSectionHitMjmNmois05Numerique03().________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitMjmNmois05Numerique03 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitMjmNmois05Numerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitMjmNmois05Numerique03 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitMjmNmois05Numerique03() 
													throws Exception {
		return fournirMessageSectionHitMjmNmois05Numerique03();
	} // Fin de getMessageSectionHitMjmNmois05Numerique03()._______________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitMjmNmois05Numerique03 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitMjmNmois05Numerique03.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitMjmNmois05Numerique03(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitMjmNmois05Numerique03
							, fournirKeyMessageSectionHitMjmNmois05Numerique03());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitMjmNmois05Numerique03(...).____________	


	
	/* 53 - pcNuitNmois05. ****************/
	/**
	 * retourne le messageSectionHitPcNuitNmois05Renseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitNmois05Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitPcNuitNmois05Renseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitPcNuitNmois05Renseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitPcNuitNmois05Renseigne01
					, fournirKeyMessageSectionHitPcNuitNmois05Renseigne01()
					, MESSAGE_SECTIONHIT_PCNUITNMOIS05_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitPcNuitNmois05Renseigne01().________
	

	
	/**
	 * Getter de la clé du messageSectionHitPcNuitNmois05Renseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.pcNuitNmois05.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS05_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitPcNuitNmois05Renseigne01() {
		return KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS05_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitPcNuitNmois05Renseigne01()._____



	/**
	 * Getter du <b>SINGLETON de messageSectionHitPcNuitNmois05Renseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitNmois05Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitPcNuitNmois05Renseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitPcNuitNmois05Renseigne01() 
											throws Exception {
		return fournirMessageSectionHitPcNuitNmois05Renseigne01();
	} // Fin de getMessageSectionHitPcNuitNmois05Renseigne01().____________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitPcNuitNmois05Renseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitPcNuitNmois05Renseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitPcNuitNmois05Renseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitPcNuitNmois05Renseigne01
							, fournirKeyMessageSectionHitPcNuitNmois05Renseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitPcNuitNmois05Renseigne01(...)._________



	/**
	 * retourne le messageSectionHitPcNuitNmois05Regex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitNmois05Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitPcNuitNmois05Regex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitPcNuitNmois05Regex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitPcNuitNmois05Regex02
					, fournirKeyMessageSectionHitPcNuitNmois05Regex02()
					, MESSAGE_SECTIONHIT_PCNUITNMOIS05_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitPcNuitNmois05Regex02().____________
	

	
	/**
	 * Getter de la clé du messageSectionHitPcNuitNmois05Regex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.pcNuitNmois05.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS05_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitPcNuitNmois05Regex02() {
		return KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS05_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitPcNuitNmois05Regex02()._________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitPcNuitNmois05Regex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitNmois05Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitPcNuitNmois05Regex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitPcNuitNmois05Regex02() 
													throws Exception {
		return fournirMessageSectionHitPcNuitNmois05Regex02();
	} // Fin de getMessageSectionHitPcNuitNmois05Regex02().________________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitPcNuitNmois05Regex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitPcNuitNmois05Regex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitPcNuitNmois05Regex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitPcNuitNmois05Regex02
							, fournirKeyMessageSectionHitPcNuitNmois05Regex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitPcNuitNmois05Regex02(...)._____________



	/**
	 * retourne le messageSectionHitPcNuitNmois05Numerique03 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitNmois05Numerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitPcNuitNmois05Numerique03 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitPcNuitNmois05Numerique03() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitPcNuitNmois05Numerique03
					, fournirKeyMessageSectionHitPcNuitNmois05Numerique03()
					, MESSAGE_SECTIONHIT_PCNUITNMOIS05_NUMERIQUE_03_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitPcNuitNmois05Numerique03().________
	

	
	/**
	 * Getter de la clé du messageSectionHitPcNuitNmois05Numerique03 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.prOrigine.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS05_NUMERIQUE_03 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitPcNuitNmois05Numerique03() {
		return KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS05_NUMERIQUE_03;
	} // Fin de fournirKeyMessageSectionHitPcNuitNmois05Numerique03()._____



	/**
	 * Getter du <b>SINGLETON de messageSectionHitPcNuitNmois05Numerique03 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitNmois05Numerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitPcNuitNmois05Numerique03 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitPcNuitNmois05Numerique03() 
													throws Exception {
		return fournirMessageSectionHitPcNuitNmois05Numerique03();
	} // Fin de getMessageSectionHitPcNuitNmois05Numerique03().____________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitPcNuitNmois05Numerique03 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitPcNuitNmois05Numerique03.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitPcNuitNmois05Numerique03(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitPcNuitNmois05Numerique03
							, fournirKeyMessageSectionHitPcNuitNmois05Numerique03());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitPcNuitNmois05Numerique03(...)._________



	
	/* 54 - mjmNmois06. ****************/
	/**
	 * retourne le messageSectionHitMjmNmois06Renseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitMjmNmois06Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitMjmNmois06Renseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitMjmNmois06Renseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitMjmNmois06Renseigne01
					, fournirKeyMessageSectionHitMjmNmois06Renseigne01()
					, MESSAGE_SECTIONHIT_MJMNMOIS06_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitMjmNmois06Renseigne01().___________
	

	
	/**
	 * Getter de la clé du messageSectionHitMjmNmois06Renseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.mjmNmois06.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_MJMNMOIS06_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitMjmNmois06Renseigne01() {
		return KEY_MESSAGE_SECTIONHIT_MJMNMOIS06_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitMjmNmois06Renseigne01().________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitMjmNmois06Renseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitMjmNmois06Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitMjmNmois06Renseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitMjmNmois06Renseigne01() 
											throws Exception {
		return fournirMessageSectionHitMjmNmois06Renseigne01();
	} // Fin de getMessageSectionHitMjmNmois06Renseigne01()._______________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitMjmNmois06Renseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitMjmNmois06Renseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitMjmNmois06Renseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitMjmNmois06Renseigne01
							, fournirKeyMessageSectionHitMjmNmois06Renseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitMjmNmois06Renseigne01(...).____________



	/**
	 * retourne le messageSectionHitMjmNmois06Regex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitMjmNmois06Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitMjmNmois06Regex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitMjmNmois06Regex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitMjmNmois06Regex02
					, fournirKeyMessageSectionHitMjmNmois06Regex02()
					, MESSAGE_SECTIONHIT_MJMNMOIS06_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitMjmNmois06Regex02()._______________
	

	
	/**
	 * Getter de la clé du messageSectionHitMjmNmois06Regex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.mjmNmois06.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_MJMNMOIS06_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitMjmNmois06Regex02() {
		return KEY_MESSAGE_SECTIONHIT_MJMNMOIS06_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitMjmNmois06Regex02().____________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitMjmNmois06Regex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitMjmNmois06Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitMjmNmois06Regex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitMjmNmois06Regex02() 
													throws Exception {
		return fournirMessageSectionHitMjmNmois06Regex02();
	} // Fin de getMessageSectionHitMjmNmois06Regex02().___________________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitMjmNmois06Regex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitMjmNmois06Regex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitMjmNmois06Regex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitMjmNmois06Regex02
							, fournirKeyMessageSectionHitMjmNmois06Regex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitMjmNmois06Regex02(...).________________



	/**
	 * retourne le messageSectionHitMjmNmois06Numerique03 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitMjmNmois06Numerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitMjmNmois06Numerique03 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitMjmNmois06Numerique03() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitMjmNmois06Numerique03
					, fournirKeyMessageSectionHitMjmNmois06Numerique03()
					, MESSAGE_SECTIONHIT_MJMNMOIS06_NUMERIQUE_03_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitMjmNmois06Numerique03().___________
	

	
	/**
	 * Getter de la clé du messageSectionHitMjmNmois06Numerique03 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.prOrigine.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_MJMNMOIS06_NUMERIQUE_03 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitMjmNmois06Numerique03() {
		return KEY_MESSAGE_SECTIONHIT_MJMNMOIS06_NUMERIQUE_03;
	} // Fin de fournirKeyMessageSectionHitMjmNmois06Numerique03().________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitMjmNmois06Numerique03 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitMjmNmois06Numerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitMjmNmois06Numerique03 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitMjmNmois06Numerique03() 
													throws Exception {
		return fournirMessageSectionHitMjmNmois06Numerique03();
	} // Fin de getMessageSectionHitMjmNmois06Numerique03()._______________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitMjmNmois06Numerique03 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitMjmNmois06Numerique03.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitMjmNmois06Numerique03(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitMjmNmois06Numerique03
							, fournirKeyMessageSectionHitMjmNmois06Numerique03());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitMjmNmois06Numerique03(...).____________	


	
	/* 55 - pcNuitNmois06. ****************/
	/**
	 * retourne le messageSectionHitPcNuitNmois06Renseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitNmois06Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitPcNuitNmois06Renseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitPcNuitNmois06Renseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitPcNuitNmois06Renseigne01
					, fournirKeyMessageSectionHitPcNuitNmois06Renseigne01()
					, MESSAGE_SECTIONHIT_PCNUITNMOIS06_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitPcNuitNmois06Renseigne01().________
	

	
	/**
	 * Getter de la clé du messageSectionHitPcNuitNmois06Renseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.pcNuitNmois06.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS06_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitPcNuitNmois06Renseigne01() {
		return KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS06_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitPcNuitNmois06Renseigne01()._____



	/**
	 * Getter du <b>SINGLETON de messageSectionHitPcNuitNmois06Renseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitNmois06Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitPcNuitNmois06Renseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitPcNuitNmois06Renseigne01() 
											throws Exception {
		return fournirMessageSectionHitPcNuitNmois06Renseigne01();
	} // Fin de getMessageSectionHitPcNuitNmois06Renseigne01().____________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitPcNuitNmois06Renseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitPcNuitNmois06Renseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitPcNuitNmois06Renseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitPcNuitNmois06Renseigne01
							, fournirKeyMessageSectionHitPcNuitNmois06Renseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitPcNuitNmois06Renseigne01(...)._________



	/**
	 * retourne le messageSectionHitPcNuitNmois06Regex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitNmois06Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitPcNuitNmois06Regex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitPcNuitNmois06Regex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitPcNuitNmois06Regex02
					, fournirKeyMessageSectionHitPcNuitNmois06Regex02()
					, MESSAGE_SECTIONHIT_PCNUITNMOIS06_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitPcNuitNmois06Regex02().____________
	

	
	/**
	 * Getter de la clé du messageSectionHitPcNuitNmois06Regex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.pcNuitNmois06.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS06_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitPcNuitNmois06Regex02() {
		return KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS06_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitPcNuitNmois06Regex02()._________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitPcNuitNmois06Regex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitNmois06Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitPcNuitNmois06Regex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitPcNuitNmois06Regex02() 
													throws Exception {
		return fournirMessageSectionHitPcNuitNmois06Regex02();
	} // Fin de getMessageSectionHitPcNuitNmois06Regex02().________________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitPcNuitNmois06Regex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitPcNuitNmois06Regex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitPcNuitNmois06Regex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitPcNuitNmois06Regex02
							, fournirKeyMessageSectionHitPcNuitNmois06Regex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitPcNuitNmois06Regex02(...)._____________



	/**
	 * retourne le messageSectionHitPcNuitNmois06Numerique03 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitNmois06Numerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitPcNuitNmois06Numerique03 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitPcNuitNmois06Numerique03() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitPcNuitNmois06Numerique03
					, fournirKeyMessageSectionHitPcNuitNmois06Numerique03()
					, MESSAGE_SECTIONHIT_PCNUITNMOIS06_NUMERIQUE_03_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitPcNuitNmois06Numerique03().________
	

	
	/**
	 * Getter de la clé du messageSectionHitPcNuitNmois06Numerique03 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.prOrigine.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS06_NUMERIQUE_03 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitPcNuitNmois06Numerique03() {
		return KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS06_NUMERIQUE_03;
	} // Fin de fournirKeyMessageSectionHitPcNuitNmois06Numerique03()._____



	/**
	 * Getter du <b>SINGLETON de messageSectionHitPcNuitNmois06Numerique03 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitNmois06Numerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitPcNuitNmois06Numerique03 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitPcNuitNmois06Numerique03() 
													throws Exception {
		return fournirMessageSectionHitPcNuitNmois06Numerique03();
	} // Fin de getMessageSectionHitPcNuitNmois06Numerique03().____________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitPcNuitNmois06Numerique03 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitPcNuitNmois06Numerique03.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitPcNuitNmois06Numerique03(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitPcNuitNmois06Numerique03
							, fournirKeyMessageSectionHitPcNuitNmois06Numerique03());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitPcNuitNmois06Numerique03(...)._________



	
	/* 56 - mjmNmois07. ****************/
	/**
	 * retourne le messageSectionHitMjmNmois07Renseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitMjmNmois07Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitMjmNmois07Renseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitMjmNmois07Renseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitMjmNmois07Renseigne01
					, fournirKeyMessageSectionHitMjmNmois07Renseigne01()
					, MESSAGE_SECTIONHIT_MJMNMOIS07_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitMjmNmois07Renseigne01().___________
	

	
	/**
	 * Getter de la clé du messageSectionHitMjmNmois07Renseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.mjmNmois07.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_MJMNMOIS07_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitMjmNmois07Renseigne01() {
		return KEY_MESSAGE_SECTIONHIT_MJMNMOIS07_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitMjmNmois07Renseigne01().________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitMjmNmois07Renseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitMjmNmois07Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitMjmNmois07Renseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitMjmNmois07Renseigne01() 
											throws Exception {
		return fournirMessageSectionHitMjmNmois07Renseigne01();
	} // Fin de getMessageSectionHitMjmNmois07Renseigne01()._______________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitMjmNmois07Renseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitMjmNmois07Renseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitMjmNmois07Renseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitMjmNmois07Renseigne01
							, fournirKeyMessageSectionHitMjmNmois07Renseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitMjmNmois07Renseigne01(...).____________



	/**
	 * retourne le messageSectionHitMjmNmois07Regex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitMjmNmois07Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitMjmNmois07Regex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitMjmNmois07Regex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitMjmNmois07Regex02
					, fournirKeyMessageSectionHitMjmNmois07Regex02()
					, MESSAGE_SECTIONHIT_MJMNMOIS07_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitMjmNmois07Regex02()._______________
	

	
	/**
	 * Getter de la clé du messageSectionHitMjmNmois07Regex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.mjmNmois07.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_MJMNMOIS07_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitMjmNmois07Regex02() {
		return KEY_MESSAGE_SECTIONHIT_MJMNMOIS07_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitMjmNmois07Regex02().____________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitMjmNmois07Regex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitMjmNmois07Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitMjmNmois07Regex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitMjmNmois07Regex02() 
													throws Exception {
		return fournirMessageSectionHitMjmNmois07Regex02();
	} // Fin de getMessageSectionHitMjmNmois07Regex02().___________________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitMjmNmois07Regex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitMjmNmois07Regex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitMjmNmois07Regex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitMjmNmois07Regex02
							, fournirKeyMessageSectionHitMjmNmois07Regex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitMjmNmois07Regex02(...).________________



	/**
	 * retourne le messageSectionHitMjmNmois07Numerique03 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitMjmNmois07Numerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitMjmNmois07Numerique03 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitMjmNmois07Numerique03() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitMjmNmois07Numerique03
					, fournirKeyMessageSectionHitMjmNmois07Numerique03()
					, MESSAGE_SECTIONHIT_MJMNMOIS07_NUMERIQUE_03_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitMjmNmois07Numerique03().___________
	

	
	/**
	 * Getter de la clé du messageSectionHitMjmNmois07Numerique03 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.prOrigine.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_MJMNMOIS07_NUMERIQUE_03 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitMjmNmois07Numerique03() {
		return KEY_MESSAGE_SECTIONHIT_MJMNMOIS07_NUMERIQUE_03;
	} // Fin de fournirKeyMessageSectionHitMjmNmois07Numerique03().________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitMjmNmois07Numerique03 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitMjmNmois07Numerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitMjmNmois07Numerique03 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitMjmNmois07Numerique03() 
													throws Exception {
		return fournirMessageSectionHitMjmNmois07Numerique03();
	} // Fin de getMessageSectionHitMjmNmois07Numerique03()._______________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitMjmNmois07Numerique03 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitMjmNmois07Numerique03.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitMjmNmois07Numerique03(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitMjmNmois07Numerique03
							, fournirKeyMessageSectionHitMjmNmois07Numerique03());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitMjmNmois07Numerique03(...).____________	


	
	/* 57 - pcNuitNmois07. ****************/
	/**
	 * retourne le messageSectionHitPcNuitNmois07Renseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitNmois07Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitPcNuitNmois07Renseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitPcNuitNmois07Renseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitPcNuitNmois07Renseigne01
					, fournirKeyMessageSectionHitPcNuitNmois07Renseigne01()
					, MESSAGE_SECTIONHIT_PCNUITNMOIS07_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitPcNuitNmois07Renseigne01().________
	

	
	/**
	 * Getter de la clé du messageSectionHitPcNuitNmois07Renseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.pcNuitNmois07.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS07_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitPcNuitNmois07Renseigne01() {
		return KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS07_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitPcNuitNmois07Renseigne01()._____



	/**
	 * Getter du <b>SINGLETON de messageSectionHitPcNuitNmois07Renseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitNmois07Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitPcNuitNmois07Renseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitPcNuitNmois07Renseigne01() 
											throws Exception {
		return fournirMessageSectionHitPcNuitNmois07Renseigne01();
	} // Fin de getMessageSectionHitPcNuitNmois07Renseigne01().____________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitPcNuitNmois07Renseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitPcNuitNmois07Renseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitPcNuitNmois07Renseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitPcNuitNmois07Renseigne01
							, fournirKeyMessageSectionHitPcNuitNmois07Renseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitPcNuitNmois07Renseigne01(...)._________



	/**
	 * retourne le messageSectionHitPcNuitNmois07Regex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitNmois07Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitPcNuitNmois07Regex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitPcNuitNmois07Regex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitPcNuitNmois07Regex02
					, fournirKeyMessageSectionHitPcNuitNmois07Regex02()
					, MESSAGE_SECTIONHIT_PCNUITNMOIS07_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitPcNuitNmois07Regex02().____________
	

	
	/**
	 * Getter de la clé du messageSectionHitPcNuitNmois07Regex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.pcNuitNmois07.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS07_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitPcNuitNmois07Regex02() {
		return KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS07_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitPcNuitNmois07Regex02()._________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitPcNuitNmois07Regex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitNmois07Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitPcNuitNmois07Regex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitPcNuitNmois07Regex02() 
													throws Exception {
		return fournirMessageSectionHitPcNuitNmois07Regex02();
	} // Fin de getMessageSectionHitPcNuitNmois07Regex02().________________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitPcNuitNmois07Regex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitPcNuitNmois07Regex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitPcNuitNmois07Regex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitPcNuitNmois07Regex02
							, fournirKeyMessageSectionHitPcNuitNmois07Regex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitPcNuitNmois07Regex02(...)._____________



	/**
	 * retourne le messageSectionHitPcNuitNmois07Numerique03 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitNmois07Numerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitPcNuitNmois07Numerique03 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitPcNuitNmois07Numerique03() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitPcNuitNmois07Numerique03
					, fournirKeyMessageSectionHitPcNuitNmois07Numerique03()
					, MESSAGE_SECTIONHIT_PCNUITNMOIS07_NUMERIQUE_03_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitPcNuitNmois07Numerique03().________
	

	
	/**
	 * Getter de la clé du messageSectionHitPcNuitNmois07Numerique03 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.prOrigine.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS07_NUMERIQUE_03 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitPcNuitNmois07Numerique03() {
		return KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS07_NUMERIQUE_03;
	} // Fin de fournirKeyMessageSectionHitPcNuitNmois07Numerique03()._____



	/**
	 * Getter du <b>SINGLETON de messageSectionHitPcNuitNmois07Numerique03 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitNmois07Numerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitPcNuitNmois07Numerique03 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitPcNuitNmois07Numerique03() 
													throws Exception {
		return fournirMessageSectionHitPcNuitNmois07Numerique03();
	} // Fin de getMessageSectionHitPcNuitNmois07Numerique03().____________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitPcNuitNmois07Numerique03 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitPcNuitNmois07Numerique03.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitPcNuitNmois07Numerique03(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitPcNuitNmois07Numerique03
							, fournirKeyMessageSectionHitPcNuitNmois07Numerique03());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitPcNuitNmois07Numerique03(...)._________



	
	/* 58 - mjmNmois08. ****************/
	/**
	 * retourne le messageSectionHitMjmNmois08Renseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitMjmNmois08Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitMjmNmois08Renseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitMjmNmois08Renseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitMjmNmois08Renseigne01
					, fournirKeyMessageSectionHitMjmNmois08Renseigne01()
					, MESSAGE_SECTIONHIT_MJMNMOIS08_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitMjmNmois08Renseigne01().___________
	

	
	/**
	 * Getter de la clé du messageSectionHitMjmNmois08Renseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.mjmNmois08.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_MJMNMOIS08_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitMjmNmois08Renseigne01() {
		return KEY_MESSAGE_SECTIONHIT_MJMNMOIS08_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitMjmNmois08Renseigne01().________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitMjmNmois08Renseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitMjmNmois08Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitMjmNmois08Renseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitMjmNmois08Renseigne01() 
											throws Exception {
		return fournirMessageSectionHitMjmNmois08Renseigne01();
	} // Fin de getMessageSectionHitMjmNmois08Renseigne01()._______________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitMjmNmois08Renseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitMjmNmois08Renseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitMjmNmois08Renseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitMjmNmois08Renseigne01
							, fournirKeyMessageSectionHitMjmNmois08Renseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitMjmNmois08Renseigne01(...).____________



	/**
	 * retourne le messageSectionHitMjmNmois08Regex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitMjmNmois08Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitMjmNmois08Regex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitMjmNmois08Regex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitMjmNmois08Regex02
					, fournirKeyMessageSectionHitMjmNmois08Regex02()
					, MESSAGE_SECTIONHIT_MJMNMOIS08_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitMjmNmois08Regex02()._______________
	

	
	/**
	 * Getter de la clé du messageSectionHitMjmNmois08Regex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.mjmNmois08.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_MJMNMOIS08_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitMjmNmois08Regex02() {
		return KEY_MESSAGE_SECTIONHIT_MJMNMOIS08_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitMjmNmois08Regex02().____________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitMjmNmois08Regex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitMjmNmois08Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitMjmNmois08Regex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitMjmNmois08Regex02() 
													throws Exception {
		return fournirMessageSectionHitMjmNmois08Regex02();
	} // Fin de getMessageSectionHitMjmNmois08Regex02().___________________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitMjmNmois08Regex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitMjmNmois08Regex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitMjmNmois08Regex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitMjmNmois08Regex02
							, fournirKeyMessageSectionHitMjmNmois08Regex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitMjmNmois08Regex02(...).________________



	/**
	 * retourne le messageSectionHitMjmNmois08Numerique03 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitMjmNmois08Numerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitMjmNmois08Numerique03 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitMjmNmois08Numerique03() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitMjmNmois08Numerique03
					, fournirKeyMessageSectionHitMjmNmois08Numerique03()
					, MESSAGE_SECTIONHIT_MJMNMOIS08_NUMERIQUE_03_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitMjmNmois08Numerique03().___________
	

	
	/**
	 * Getter de la clé du messageSectionHitMjmNmois08Numerique03 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.prOrigine.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_MJMNMOIS08_NUMERIQUE_03 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitMjmNmois08Numerique03() {
		return KEY_MESSAGE_SECTIONHIT_MJMNMOIS08_NUMERIQUE_03;
	} // Fin de fournirKeyMessageSectionHitMjmNmois08Numerique03().________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitMjmNmois08Numerique03 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitMjmNmois08Numerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitMjmNmois08Numerique03 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitMjmNmois08Numerique03() 
													throws Exception {
		return fournirMessageSectionHitMjmNmois08Numerique03();
	} // Fin de getMessageSectionHitMjmNmois08Numerique03()._______________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitMjmNmois08Numerique03 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitMjmNmois08Numerique03.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitMjmNmois08Numerique03(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitMjmNmois08Numerique03
							, fournirKeyMessageSectionHitMjmNmois08Numerique03());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitMjmNmois08Numerique03(...).____________	


	
	/* 59 - pcNuitNmois08. ****************/
	/**
	 * retourne le messageSectionHitPcNuitNmois08Renseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitNmois08Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitPcNuitNmois08Renseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitPcNuitNmois08Renseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitPcNuitNmois08Renseigne01
					, fournirKeyMessageSectionHitPcNuitNmois08Renseigne01()
					, MESSAGE_SECTIONHIT_PCNUITNMOIS08_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitPcNuitNmois08Renseigne01().________
	

	
	/**
	 * Getter de la clé du messageSectionHitPcNuitNmois08Renseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.pcNuitNmois08.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS08_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitPcNuitNmois08Renseigne01() {
		return KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS08_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitPcNuitNmois08Renseigne01()._____



	/**
	 * Getter du <b>SINGLETON de messageSectionHitPcNuitNmois08Renseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitNmois08Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitPcNuitNmois08Renseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitPcNuitNmois08Renseigne01() 
											throws Exception {
		return fournirMessageSectionHitPcNuitNmois08Renseigne01();
	} // Fin de getMessageSectionHitPcNuitNmois08Renseigne01().____________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitPcNuitNmois08Renseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitPcNuitNmois08Renseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitPcNuitNmois08Renseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitPcNuitNmois08Renseigne01
							, fournirKeyMessageSectionHitPcNuitNmois08Renseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitPcNuitNmois08Renseigne01(...)._________



	/**
	 * retourne le messageSectionHitPcNuitNmois08Regex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitNmois08Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitPcNuitNmois08Regex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitPcNuitNmois08Regex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitPcNuitNmois08Regex02
					, fournirKeyMessageSectionHitPcNuitNmois08Regex02()
					, MESSAGE_SECTIONHIT_PCNUITNMOIS08_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitPcNuitNmois08Regex02().____________
	

	
	/**
	 * Getter de la clé du messageSectionHitPcNuitNmois08Regex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.pcNuitNmois08.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS08_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitPcNuitNmois08Regex02() {
		return KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS08_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitPcNuitNmois08Regex02()._________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitPcNuitNmois08Regex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitNmois08Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitPcNuitNmois08Regex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitPcNuitNmois08Regex02() 
													throws Exception {
		return fournirMessageSectionHitPcNuitNmois08Regex02();
	} // Fin de getMessageSectionHitPcNuitNmois08Regex02().________________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitPcNuitNmois08Regex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitPcNuitNmois08Regex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitPcNuitNmois08Regex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitPcNuitNmois08Regex02
							, fournirKeyMessageSectionHitPcNuitNmois08Regex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitPcNuitNmois08Regex02(...)._____________



	/**
	 * retourne le messageSectionHitPcNuitNmois08Numerique03 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitNmois08Numerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitPcNuitNmois08Numerique03 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitPcNuitNmois08Numerique03() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitPcNuitNmois08Numerique03
					, fournirKeyMessageSectionHitPcNuitNmois08Numerique03()
					, MESSAGE_SECTIONHIT_PCNUITNMOIS08_NUMERIQUE_03_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitPcNuitNmois08Numerique03().________
	

	
	/**
	 * Getter de la clé du messageSectionHitPcNuitNmois08Numerique03 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.prOrigine.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS08_NUMERIQUE_03 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitPcNuitNmois08Numerique03() {
		return KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS08_NUMERIQUE_03;
	} // Fin de fournirKeyMessageSectionHitPcNuitNmois08Numerique03()._____



	/**
	 * Getter du <b>SINGLETON de messageSectionHitPcNuitNmois08Numerique03 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitNmois08Numerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitPcNuitNmois08Numerique03 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitPcNuitNmois08Numerique03() 
													throws Exception {
		return fournirMessageSectionHitPcNuitNmois08Numerique03();
	} // Fin de getMessageSectionHitPcNuitNmois08Numerique03().____________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitPcNuitNmois08Numerique03 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitPcNuitNmois08Numerique03.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitPcNuitNmois08Numerique03(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitPcNuitNmois08Numerique03
							, fournirKeyMessageSectionHitPcNuitNmois08Numerique03());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitPcNuitNmois08Numerique03(...)._________



	
	/* 60 - mjmNmois09. ****************/
	/**
	 * retourne le messageSectionHitMjmNmois09Renseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitMjmNmois09Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitMjmNmois09Renseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitMjmNmois09Renseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitMjmNmois09Renseigne01
					, fournirKeyMessageSectionHitMjmNmois09Renseigne01()
					, MESSAGE_SECTIONHIT_MJMNMOIS09_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitMjmNmois09Renseigne01().___________
	

	
	/**
	 * Getter de la clé du messageSectionHitMjmNmois09Renseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.mjmNmois09.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_MJMNMOIS09_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitMjmNmois09Renseigne01() {
		return KEY_MESSAGE_SECTIONHIT_MJMNMOIS09_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitMjmNmois09Renseigne01().________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitMjmNmois09Renseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitMjmNmois09Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitMjmNmois09Renseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitMjmNmois09Renseigne01() 
											throws Exception {
		return fournirMessageSectionHitMjmNmois09Renseigne01();
	} // Fin de getMessageSectionHitMjmNmois09Renseigne01()._______________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitMjmNmois09Renseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitMjmNmois09Renseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitMjmNmois09Renseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitMjmNmois09Renseigne01
							, fournirKeyMessageSectionHitMjmNmois09Renseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitMjmNmois09Renseigne01(...).____________



	/**
	 * retourne le messageSectionHitMjmNmois09Regex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitMjmNmois09Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitMjmNmois09Regex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitMjmNmois09Regex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitMjmNmois09Regex02
					, fournirKeyMessageSectionHitMjmNmois09Regex02()
					, MESSAGE_SECTIONHIT_MJMNMOIS09_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitMjmNmois09Regex02()._______________
	

	
	/**
	 * Getter de la clé du messageSectionHitMjmNmois09Regex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.mjmNmois09.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_MJMNMOIS09_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitMjmNmois09Regex02() {
		return KEY_MESSAGE_SECTIONHIT_MJMNMOIS09_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitMjmNmois09Regex02().____________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitMjmNmois09Regex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitMjmNmois09Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitMjmNmois09Regex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitMjmNmois09Regex02() 
													throws Exception {
		return fournirMessageSectionHitMjmNmois09Regex02();
	} // Fin de getMessageSectionHitMjmNmois09Regex02().___________________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitMjmNmois09Regex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitMjmNmois09Regex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitMjmNmois09Regex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitMjmNmois09Regex02
							, fournirKeyMessageSectionHitMjmNmois09Regex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitMjmNmois09Regex02(...).________________



	/**
	 * retourne le messageSectionHitMjmNmois09Numerique03 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitMjmNmois09Numerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitMjmNmois09Numerique03 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitMjmNmois09Numerique03() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitMjmNmois09Numerique03
					, fournirKeyMessageSectionHitMjmNmois09Numerique03()
					, MESSAGE_SECTIONHIT_MJMNMOIS09_NUMERIQUE_03_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitMjmNmois09Numerique03().___________
	

	
	/**
	 * Getter de la clé du messageSectionHitMjmNmois09Numerique03 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.prOrigine.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_MJMNMOIS09_NUMERIQUE_03 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitMjmNmois09Numerique03() {
		return KEY_MESSAGE_SECTIONHIT_MJMNMOIS09_NUMERIQUE_03;
	} // Fin de fournirKeyMessageSectionHitMjmNmois09Numerique03().________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitMjmNmois09Numerique03 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitMjmNmois09Numerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitMjmNmois09Numerique03 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitMjmNmois09Numerique03() 
													throws Exception {
		return fournirMessageSectionHitMjmNmois09Numerique03();
	} // Fin de getMessageSectionHitMjmNmois09Numerique03()._______________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitMjmNmois09Numerique03 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitMjmNmois09Numerique03.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitMjmNmois09Numerique03(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitMjmNmois09Numerique03
							, fournirKeyMessageSectionHitMjmNmois09Numerique03());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitMjmNmois09Numerique03(...).____________	


	
	/* 61 - pcNuitNmois09. ****************/
	/**
	 * retourne le messageSectionHitPcNuitNmois09Renseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitNmois09Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitPcNuitNmois09Renseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitPcNuitNmois09Renseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitPcNuitNmois09Renseigne01
					, fournirKeyMessageSectionHitPcNuitNmois09Renseigne01()
					, MESSAGE_SECTIONHIT_PCNUITNMOIS09_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitPcNuitNmois09Renseigne01().________
	

	
	/**
	 * Getter de la clé du messageSectionHitPcNuitNmois09Renseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.pcNuitNmois09.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS09_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitPcNuitNmois09Renseigne01() {
		return KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS09_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitPcNuitNmois09Renseigne01()._____



	/**
	 * Getter du <b>SINGLETON de messageSectionHitPcNuitNmois09Renseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitNmois09Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitPcNuitNmois09Renseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitPcNuitNmois09Renseigne01() 
											throws Exception {
		return fournirMessageSectionHitPcNuitNmois09Renseigne01();
	} // Fin de getMessageSectionHitPcNuitNmois09Renseigne01().____________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitPcNuitNmois09Renseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitPcNuitNmois09Renseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitPcNuitNmois09Renseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitPcNuitNmois09Renseigne01
							, fournirKeyMessageSectionHitPcNuitNmois09Renseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitPcNuitNmois09Renseigne01(...)._________



	/**
	 * retourne le messageSectionHitPcNuitNmois09Regex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitNmois09Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitPcNuitNmois09Regex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitPcNuitNmois09Regex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitPcNuitNmois09Regex02
					, fournirKeyMessageSectionHitPcNuitNmois09Regex02()
					, MESSAGE_SECTIONHIT_PCNUITNMOIS09_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitPcNuitNmois09Regex02().____________
	

	
	/**
	 * Getter de la clé du messageSectionHitPcNuitNmois09Regex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.pcNuitNmois09.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS09_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitPcNuitNmois09Regex02() {
		return KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS09_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitPcNuitNmois09Regex02()._________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitPcNuitNmois09Regex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitNmois09Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitPcNuitNmois09Regex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitPcNuitNmois09Regex02() 
													throws Exception {
		return fournirMessageSectionHitPcNuitNmois09Regex02();
	} // Fin de getMessageSectionHitPcNuitNmois09Regex02().________________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitPcNuitNmois09Regex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitPcNuitNmois09Regex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitPcNuitNmois09Regex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitPcNuitNmois09Regex02
							, fournirKeyMessageSectionHitPcNuitNmois09Regex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitPcNuitNmois09Regex02(...)._____________



	/**
	 * retourne le messageSectionHitPcNuitNmois09Numerique03 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitNmois09Numerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitPcNuitNmois09Numerique03 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitPcNuitNmois09Numerique03() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitPcNuitNmois09Numerique03
					, fournirKeyMessageSectionHitPcNuitNmois09Numerique03()
					, MESSAGE_SECTIONHIT_PCNUITNMOIS09_NUMERIQUE_03_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitPcNuitNmois09Numerique03().________
	

	
	/**
	 * Getter de la clé du messageSectionHitPcNuitNmois09Numerique03 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.prOrigine.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS09_NUMERIQUE_03 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitPcNuitNmois09Numerique03() {
		return KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS09_NUMERIQUE_03;
	} // Fin de fournirKeyMessageSectionHitPcNuitNmois09Numerique03()._____



	/**
	 * Getter du <b>SINGLETON de messageSectionHitPcNuitNmois09Numerique03 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitNmois09Numerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitPcNuitNmois09Numerique03 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitPcNuitNmois09Numerique03() 
													throws Exception {
		return fournirMessageSectionHitPcNuitNmois09Numerique03();
	} // Fin de getMessageSectionHitPcNuitNmois09Numerique03().____________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitPcNuitNmois09Numerique03 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitPcNuitNmois09Numerique03.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitPcNuitNmois09Numerique03(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitPcNuitNmois09Numerique03
							, fournirKeyMessageSectionHitPcNuitNmois09Numerique03());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitPcNuitNmois09Numerique03(...)._________



	
	/* 62 - mjmNmois10. ****************/
	/**
	 * retourne le messageSectionHitMjmNmois10Renseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitMjmNmois10Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitMjmNmois10Renseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitMjmNmois10Renseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitMjmNmois10Renseigne01
					, fournirKeyMessageSectionHitMjmNmois10Renseigne01()
					, MESSAGE_SECTIONHIT_MJMNMOIS10_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitMjmNmois10Renseigne01().___________
	

	
	/**
	 * Getter de la clé du messageSectionHitMjmNmois10Renseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.mjmNmois10.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_MJMNMOIS10_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitMjmNmois10Renseigne01() {
		return KEY_MESSAGE_SECTIONHIT_MJMNMOIS10_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitMjmNmois10Renseigne01().________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitMjmNmois10Renseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitMjmNmois10Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitMjmNmois10Renseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitMjmNmois10Renseigne01() 
											throws Exception {
		return fournirMessageSectionHitMjmNmois10Renseigne01();
	} // Fin de getMessageSectionHitMjmNmois10Renseigne01()._______________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitMjmNmois10Renseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitMjmNmois10Renseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitMjmNmois10Renseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitMjmNmois10Renseigne01
							, fournirKeyMessageSectionHitMjmNmois10Renseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitMjmNmois10Renseigne01(...).____________



	/**
	 * retourne le messageSectionHitMjmNmois10Regex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitMjmNmois10Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitMjmNmois10Regex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitMjmNmois10Regex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitMjmNmois10Regex02
					, fournirKeyMessageSectionHitMjmNmois10Regex02()
					, MESSAGE_SECTIONHIT_MJMNMOIS10_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitMjmNmois10Regex02()._______________
	

	
	/**
	 * Getter de la clé du messageSectionHitMjmNmois10Regex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.mjmNmois10.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_MJMNMOIS10_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitMjmNmois10Regex02() {
		return KEY_MESSAGE_SECTIONHIT_MJMNMOIS10_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitMjmNmois10Regex02().____________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitMjmNmois10Regex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitMjmNmois10Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitMjmNmois10Regex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitMjmNmois10Regex02() 
													throws Exception {
		return fournirMessageSectionHitMjmNmois10Regex02();
	} // Fin de getMessageSectionHitMjmNmois10Regex02().___________________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitMjmNmois10Regex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitMjmNmois10Regex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitMjmNmois10Regex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitMjmNmois10Regex02
							, fournirKeyMessageSectionHitMjmNmois10Regex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitMjmNmois10Regex02(...).________________



	/**
	 * retourne le messageSectionHitMjmNmois10Numerique03 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitMjmNmois10Numerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitMjmNmois10Numerique03 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitMjmNmois10Numerique03() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitMjmNmois10Numerique03
					, fournirKeyMessageSectionHitMjmNmois10Numerique03()
					, MESSAGE_SECTIONHIT_MJMNMOIS10_NUMERIQUE_03_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitMjmNmois10Numerique03().___________
	

	
	/**
	 * Getter de la clé du messageSectionHitMjmNmois10Numerique03 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.prOrigine.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_MJMNMOIS10_NUMERIQUE_03 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitMjmNmois10Numerique03() {
		return KEY_MESSAGE_SECTIONHIT_MJMNMOIS10_NUMERIQUE_03;
	} // Fin de fournirKeyMessageSectionHitMjmNmois10Numerique03().________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitMjmNmois10Numerique03 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitMjmNmois10Numerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitMjmNmois10Numerique03 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitMjmNmois10Numerique03() 
													throws Exception {
		return fournirMessageSectionHitMjmNmois10Numerique03();
	} // Fin de getMessageSectionHitMjmNmois10Numerique03()._______________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitMjmNmois10Numerique03 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitMjmNmois10Numerique03.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitMjmNmois10Numerique03(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitMjmNmois10Numerique03
							, fournirKeyMessageSectionHitMjmNmois10Numerique03());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitMjmNmois10Numerique03(...).____________	


	
	/* 63 - pcNuitNmois10. ****************/
	/**
	 * retourne le messageSectionHitPcNuitNmois10Renseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitNmois10Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitPcNuitNmois10Renseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitPcNuitNmois10Renseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitPcNuitNmois10Renseigne01
					, fournirKeyMessageSectionHitPcNuitNmois10Renseigne01()
					, MESSAGE_SECTIONHIT_PCNUITNMOIS10_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitPcNuitNmois10Renseigne01().________
	

	
	/**
	 * Getter de la clé du messageSectionHitPcNuitNmois10Renseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.pcNuitNmois10.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS10_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitPcNuitNmois10Renseigne01() {
		return KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS10_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitPcNuitNmois10Renseigne01()._____



	/**
	 * Getter du <b>SINGLETON de messageSectionHitPcNuitNmois10Renseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitNmois10Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitPcNuitNmois10Renseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitPcNuitNmois10Renseigne01() 
											throws Exception {
		return fournirMessageSectionHitPcNuitNmois10Renseigne01();
	} // Fin de getMessageSectionHitPcNuitNmois10Renseigne01().____________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitPcNuitNmois10Renseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitPcNuitNmois10Renseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitPcNuitNmois10Renseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitPcNuitNmois10Renseigne01
							, fournirKeyMessageSectionHitPcNuitNmois10Renseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitPcNuitNmois10Renseigne01(...)._________



	/**
	 * retourne le messageSectionHitPcNuitNmois10Regex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitNmois10Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitPcNuitNmois10Regex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitPcNuitNmois10Regex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitPcNuitNmois10Regex02
					, fournirKeyMessageSectionHitPcNuitNmois10Regex02()
					, MESSAGE_SECTIONHIT_PCNUITNMOIS10_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitPcNuitNmois10Regex02().____________
	

	
	/**
	 * Getter de la clé du messageSectionHitPcNuitNmois10Regex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.pcNuitNmois10.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS10_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitPcNuitNmois10Regex02() {
		return KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS10_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitPcNuitNmois10Regex02()._________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitPcNuitNmois10Regex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitNmois10Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitPcNuitNmois10Regex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitPcNuitNmois10Regex02() 
													throws Exception {
		return fournirMessageSectionHitPcNuitNmois10Regex02();
	} // Fin de getMessageSectionHitPcNuitNmois10Regex02().________________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitPcNuitNmois10Regex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitPcNuitNmois10Regex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitPcNuitNmois10Regex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitPcNuitNmois10Regex02
							, fournirKeyMessageSectionHitPcNuitNmois10Regex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitPcNuitNmois10Regex02(...)._____________



	/**
	 * retourne le messageSectionHitPcNuitNmois10Numerique03 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitNmois10Numerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitPcNuitNmois10Numerique03 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitPcNuitNmois10Numerique03() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitPcNuitNmois10Numerique03
					, fournirKeyMessageSectionHitPcNuitNmois10Numerique03()
					, MESSAGE_SECTIONHIT_PCNUITNMOIS10_NUMERIQUE_03_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitPcNuitNmois10Numerique03().________
	

	
	/**
	 * Getter de la clé du messageSectionHitPcNuitNmois10Numerique03 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.prOrigine.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS10_NUMERIQUE_03 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitPcNuitNmois10Numerique03() {
		return KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS10_NUMERIQUE_03;
	} // Fin de fournirKeyMessageSectionHitPcNuitNmois10Numerique03()._____



	/**
	 * Getter du <b>SINGLETON de messageSectionHitPcNuitNmois10Numerique03 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitNmois10Numerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitPcNuitNmois10Numerique03 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitPcNuitNmois10Numerique03() 
													throws Exception {
		return fournirMessageSectionHitPcNuitNmois10Numerique03();
	} // Fin de getMessageSectionHitPcNuitNmois10Numerique03().____________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitPcNuitNmois10Numerique03 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitPcNuitNmois10Numerique03.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitPcNuitNmois10Numerique03(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitPcNuitNmois10Numerique03
							, fournirKeyMessageSectionHitPcNuitNmois10Numerique03());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitPcNuitNmois10Numerique03(...)._________



	
	/* 64 - mjmNmois11. ****************/
	/**
	 * retourne le messageSectionHitMjmNmois11Renseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitMjmNmois11Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitMjmNmois11Renseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitMjmNmois11Renseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitMjmNmois11Renseigne01
					, fournirKeyMessageSectionHitMjmNmois11Renseigne01()
					, MESSAGE_SECTIONHIT_MJMNMOIS11_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitMjmNmois11Renseigne01().___________
	

	
	/**
	 * Getter de la clé du messageSectionHitMjmNmois11Renseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.mjmNmois11.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_MJMNMOIS11_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitMjmNmois11Renseigne01() {
		return KEY_MESSAGE_SECTIONHIT_MJMNMOIS11_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitMjmNmois11Renseigne01().________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitMjmNmois11Renseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitMjmNmois11Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitMjmNmois11Renseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitMjmNmois11Renseigne01() 
											throws Exception {
		return fournirMessageSectionHitMjmNmois11Renseigne01();
	} // Fin de getMessageSectionHitMjmNmois11Renseigne01()._______________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitMjmNmois11Renseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitMjmNmois11Renseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitMjmNmois11Renseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitMjmNmois11Renseigne01
							, fournirKeyMessageSectionHitMjmNmois11Renseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitMjmNmois11Renseigne01(...).____________



	/**
	 * retourne le messageSectionHitMjmNmois11Regex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitMjmNmois11Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitMjmNmois11Regex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitMjmNmois11Regex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitMjmNmois11Regex02
					, fournirKeyMessageSectionHitMjmNmois11Regex02()
					, MESSAGE_SECTIONHIT_MJMNMOIS11_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitMjmNmois11Regex02()._______________
	

	
	/**
	 * Getter de la clé du messageSectionHitMjmNmois11Regex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.mjmNmois11.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_MJMNMOIS11_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitMjmNmois11Regex02() {
		return KEY_MESSAGE_SECTIONHIT_MJMNMOIS11_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitMjmNmois11Regex02().____________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitMjmNmois11Regex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitMjmNmois11Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitMjmNmois11Regex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitMjmNmois11Regex02() 
													throws Exception {
		return fournirMessageSectionHitMjmNmois11Regex02();
	} // Fin de getMessageSectionHitMjmNmois11Regex02().___________________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitMjmNmois11Regex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitMjmNmois11Regex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitMjmNmois11Regex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitMjmNmois11Regex02
							, fournirKeyMessageSectionHitMjmNmois11Regex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitMjmNmois11Regex02(...).________________



	/**
	 * retourne le messageSectionHitMjmNmois11Numerique03 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitMjmNmois11Numerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitMjmNmois11Numerique03 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitMjmNmois11Numerique03() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitMjmNmois11Numerique03
					, fournirKeyMessageSectionHitMjmNmois11Numerique03()
					, MESSAGE_SECTIONHIT_MJMNMOIS11_NUMERIQUE_03_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitMjmNmois11Numerique03().___________
	

	
	/**
	 * Getter de la clé du messageSectionHitMjmNmois11Numerique03 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.prOrigine.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_MJMNMOIS11_NUMERIQUE_03 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitMjmNmois11Numerique03() {
		return KEY_MESSAGE_SECTIONHIT_MJMNMOIS11_NUMERIQUE_03;
	} // Fin de fournirKeyMessageSectionHitMjmNmois11Numerique03().________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitMjmNmois11Numerique03 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitMjmNmois11Numerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitMjmNmois11Numerique03 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitMjmNmois11Numerique03() 
													throws Exception {
		return fournirMessageSectionHitMjmNmois11Numerique03();
	} // Fin de getMessageSectionHitMjmNmois11Numerique03()._______________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitMjmNmois11Numerique03 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitMjmNmois11Numerique03.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitMjmNmois11Numerique03(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitMjmNmois11Numerique03
							, fournirKeyMessageSectionHitMjmNmois11Numerique03());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitMjmNmois11Numerique03(...).____________	


	
	/* 65 - pcNuitNmois11. ****************/
	/**
	 * retourne le messageSectionHitPcNuitNmois11Renseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitNmois11Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitPcNuitNmois11Renseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitPcNuitNmois11Renseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitPcNuitNmois11Renseigne01
					, fournirKeyMessageSectionHitPcNuitNmois11Renseigne01()
					, MESSAGE_SECTIONHIT_PCNUITNMOIS11_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitPcNuitNmois11Renseigne01().________
	

	
	/**
	 * Getter de la clé du messageSectionHitPcNuitNmois11Renseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.pcNuitNmois11.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS11_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitPcNuitNmois11Renseigne01() {
		return KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS11_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitPcNuitNmois11Renseigne01()._____



	/**
	 * Getter du <b>SINGLETON de messageSectionHitPcNuitNmois11Renseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitNmois11Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitPcNuitNmois11Renseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitPcNuitNmois11Renseigne01() 
											throws Exception {
		return fournirMessageSectionHitPcNuitNmois11Renseigne01();
	} // Fin de getMessageSectionHitPcNuitNmois11Renseigne01().____________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitPcNuitNmois11Renseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitPcNuitNmois11Renseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitPcNuitNmois11Renseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitPcNuitNmois11Renseigne01
							, fournirKeyMessageSectionHitPcNuitNmois11Renseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitPcNuitNmois11Renseigne01(...)._________



	/**
	 * retourne le messageSectionHitPcNuitNmois11Regex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitNmois11Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitPcNuitNmois11Regex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitPcNuitNmois11Regex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitPcNuitNmois11Regex02
					, fournirKeyMessageSectionHitPcNuitNmois11Regex02()
					, MESSAGE_SECTIONHIT_PCNUITNMOIS11_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitPcNuitNmois11Regex02().____________
	

	
	/**
	 * Getter de la clé du messageSectionHitPcNuitNmois11Regex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.pcNuitNmois11.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS11_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitPcNuitNmois11Regex02() {
		return KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS11_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitPcNuitNmois11Regex02()._________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitPcNuitNmois11Regex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitNmois11Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitPcNuitNmois11Regex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitPcNuitNmois11Regex02() 
													throws Exception {
		return fournirMessageSectionHitPcNuitNmois11Regex02();
	} // Fin de getMessageSectionHitPcNuitNmois11Regex02().________________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitPcNuitNmois11Regex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitPcNuitNmois11Regex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitPcNuitNmois11Regex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitPcNuitNmois11Regex02
							, fournirKeyMessageSectionHitPcNuitNmois11Regex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitPcNuitNmois11Regex02(...)._____________



	/**
	 * retourne le messageSectionHitPcNuitNmois11Numerique03 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitNmois11Numerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitPcNuitNmois11Numerique03 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitPcNuitNmois11Numerique03() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitPcNuitNmois11Numerique03
					, fournirKeyMessageSectionHitPcNuitNmois11Numerique03()
					, MESSAGE_SECTIONHIT_PCNUITNMOIS11_NUMERIQUE_03_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitPcNuitNmois11Numerique03().________
	

	
	/**
	 * Getter de la clé du messageSectionHitPcNuitNmois11Numerique03 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.prOrigine.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS11_NUMERIQUE_03 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitPcNuitNmois11Numerique03() {
		return KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS11_NUMERIQUE_03;
	} // Fin de fournirKeyMessageSectionHitPcNuitNmois11Numerique03()._____



	/**
	 * Getter du <b>SINGLETON de messageSectionHitPcNuitNmois11Numerique03 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitNmois11Numerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitPcNuitNmois11Numerique03 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitPcNuitNmois11Numerique03() 
													throws Exception {
		return fournirMessageSectionHitPcNuitNmois11Numerique03();
	} // Fin de getMessageSectionHitPcNuitNmois11Numerique03().____________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitPcNuitNmois11Numerique03 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitPcNuitNmois11Numerique03.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitPcNuitNmois11Numerique03(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitPcNuitNmois11Numerique03
							, fournirKeyMessageSectionHitPcNuitNmois11Numerique03());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitPcNuitNmois11Numerique03(...)._________



	
	/* 66 - mjmNmois12. ****************/
	/**
	 * retourne le messageSectionHitMjmNmois12Renseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitMjmNmois12Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitMjmNmois12Renseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitMjmNmois12Renseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitMjmNmois12Renseigne01
					, fournirKeyMessageSectionHitMjmNmois12Renseigne01()
					, MESSAGE_SECTIONHIT_MJMNMOIS12_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitMjmNmois12Renseigne01().___________
	

	
	/**
	 * Getter de la clé du messageSectionHitMjmNmois12Renseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.mjmNmois12.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_MJMNMOIS12_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitMjmNmois12Renseigne01() {
		return KEY_MESSAGE_SECTIONHIT_MJMNMOIS12_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitMjmNmois12Renseigne01().________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitMjmNmois12Renseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitMjmNmois12Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitMjmNmois12Renseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitMjmNmois12Renseigne01() 
											throws Exception {
		return fournirMessageSectionHitMjmNmois12Renseigne01();
	} // Fin de getMessageSectionHitMjmNmois12Renseigne01()._______________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitMjmNmois12Renseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitMjmNmois12Renseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitMjmNmois12Renseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitMjmNmois12Renseigne01
							, fournirKeyMessageSectionHitMjmNmois12Renseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitMjmNmois12Renseigne01(...).____________



	/**
	 * retourne le messageSectionHitMjmNmois12Regex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitMjmNmois12Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitMjmNmois12Regex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitMjmNmois12Regex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitMjmNmois12Regex02
					, fournirKeyMessageSectionHitMjmNmois12Regex02()
					, MESSAGE_SECTIONHIT_MJMNMOIS12_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitMjmNmois12Regex02()._______________
	

	
	/**
	 * Getter de la clé du messageSectionHitMjmNmois12Regex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.mjmNmois12.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_MJMNMOIS12_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitMjmNmois12Regex02() {
		return KEY_MESSAGE_SECTIONHIT_MJMNMOIS12_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitMjmNmois12Regex02().____________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitMjmNmois12Regex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitMjmNmois12Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitMjmNmois12Regex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitMjmNmois12Regex02() 
													throws Exception {
		return fournirMessageSectionHitMjmNmois12Regex02();
	} // Fin de getMessageSectionHitMjmNmois12Regex02().___________________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitMjmNmois12Regex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitMjmNmois12Regex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitMjmNmois12Regex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitMjmNmois12Regex02
							, fournirKeyMessageSectionHitMjmNmois12Regex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitMjmNmois12Regex02(...).________________



	/**
	 * retourne le messageSectionHitMjmNmois12Numerique03 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitMjmNmois12Numerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitMjmNmois12Numerique03 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitMjmNmois12Numerique03() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitMjmNmois12Numerique03
					, fournirKeyMessageSectionHitMjmNmois12Numerique03()
					, MESSAGE_SECTIONHIT_MJMNMOIS12_NUMERIQUE_03_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitMjmNmois12Numerique03().___________
	

	
	/**
	 * Getter de la clé du messageSectionHitMjmNmois12Numerique03 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.prOrigine.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_MJMNMOIS12_NUMERIQUE_03 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitMjmNmois12Numerique03() {
		return KEY_MESSAGE_SECTIONHIT_MJMNMOIS12_NUMERIQUE_03;
	} // Fin de fournirKeyMessageSectionHitMjmNmois12Numerique03().________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitMjmNmois12Numerique03 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitMjmNmois12Numerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitMjmNmois12Numerique03 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitMjmNmois12Numerique03() 
													throws Exception {
		return fournirMessageSectionHitMjmNmois12Numerique03();
	} // Fin de getMessageSectionHitMjmNmois12Numerique03()._______________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitMjmNmois12Numerique03 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitMjmNmois12Numerique03.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitMjmNmois12Numerique03(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitMjmNmois12Numerique03
							, fournirKeyMessageSectionHitMjmNmois12Numerique03());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitMjmNmois12Numerique03(...).____________	


	
	/* 67 - pcNuitNmois12. ****************/
	/**
	 * retourne le messageSectionHitPcNuitNmois12Renseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitNmois12Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitPcNuitNmois12Renseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitPcNuitNmois12Renseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitPcNuitNmois12Renseigne01
					, fournirKeyMessageSectionHitPcNuitNmois12Renseigne01()
					, MESSAGE_SECTIONHIT_PCNUITNMOIS12_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitPcNuitNmois12Renseigne01().________
	

	
	/**
	 * Getter de la clé du messageSectionHitPcNuitNmois12Renseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.pcNuitNmois12.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS12_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitPcNuitNmois12Renseigne01() {
		return KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS12_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitPcNuitNmois12Renseigne01()._____



	/**
	 * Getter du <b>SINGLETON de messageSectionHitPcNuitNmois12Renseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitNmois12Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitPcNuitNmois12Renseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitPcNuitNmois12Renseigne01() 
											throws Exception {
		return fournirMessageSectionHitPcNuitNmois12Renseigne01();
	} // Fin de getMessageSectionHitPcNuitNmois12Renseigne01().____________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitPcNuitNmois12Renseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitPcNuitNmois12Renseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitPcNuitNmois12Renseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitPcNuitNmois12Renseigne01
							, fournirKeyMessageSectionHitPcNuitNmois12Renseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitPcNuitNmois12Renseigne01(...)._________



	/**
	 * retourne le messageSectionHitPcNuitNmois12Regex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitNmois12Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitPcNuitNmois12Regex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitPcNuitNmois12Regex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitPcNuitNmois12Regex02
					, fournirKeyMessageSectionHitPcNuitNmois12Regex02()
					, MESSAGE_SECTIONHIT_PCNUITNMOIS12_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitPcNuitNmois12Regex02().____________
	

	
	/**
	 * Getter de la clé du messageSectionHitPcNuitNmois12Regex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.pcNuitNmois12.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS12_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitPcNuitNmois12Regex02() {
		return KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS12_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitPcNuitNmois12Regex02()._________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitPcNuitNmois12Regex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitNmois12Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitPcNuitNmois12Regex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitPcNuitNmois12Regex02() 
													throws Exception {
		return fournirMessageSectionHitPcNuitNmois12Regex02();
	} // Fin de getMessageSectionHitPcNuitNmois12Regex02().________________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitPcNuitNmois12Regex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitPcNuitNmois12Regex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitPcNuitNmois12Regex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitPcNuitNmois12Regex02
							, fournirKeyMessageSectionHitPcNuitNmois12Regex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitPcNuitNmois12Regex02(...)._____________



	/**
	 * retourne le messageSectionHitPcNuitNmois12Numerique03 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitNmois12Numerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitPcNuitNmois12Numerique03 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitPcNuitNmois12Numerique03() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitPcNuitNmois12Numerique03
					, fournirKeyMessageSectionHitPcNuitNmois12Numerique03()
					, MESSAGE_SECTIONHIT_PCNUITNMOIS12_NUMERIQUE_03_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitPcNuitNmois12Numerique03().________
	

	
	/**
	 * Getter de la clé du messageSectionHitPcNuitNmois12Numerique03 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.prOrigine.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS12_NUMERIQUE_03 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitPcNuitNmois12Numerique03() {
		return KEY_MESSAGE_SECTIONHIT_PCNUITNMOIS12_NUMERIQUE_03;
	} // Fin de fournirKeyMessageSectionHitPcNuitNmois12Numerique03()._____



	/**
	 * Getter du <b>SINGLETON de messageSectionHitPcNuitNmois12Numerique03 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitNmois12Numerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitPcNuitNmois12Numerique03 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitPcNuitNmois12Numerique03() 
													throws Exception {
		return fournirMessageSectionHitPcNuitNmois12Numerique03();
	} // Fin de getMessageSectionHitPcNuitNmois12Numerique03().____________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitPcNuitNmois12Numerique03 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitPcNuitNmois12Numerique03.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitPcNuitNmois12Numerique03(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitPcNuitNmois12Numerique03
							, fournirKeyMessageSectionHitPcNuitNmois12Numerique03());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitPcNuitNmois12Numerique03(...)._________


	
	/* 68 - zoneLibre3. ****************/
	/**
	 * retourne le messageSectionHitZoneLibre3Renseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitZoneLibre3Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitZoneLibre3Renseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitZoneLibre3Renseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitZoneLibre3Renseigne01
					, fournirKeyMessageSectionHitZoneLibre3Renseigne01()
					, MESSAGE_SECTIONHIT_ZONELIBRE3_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitZoneLibre3Renseigne01().___________
	

	
	/**
	 * Getter de la clé du messageSectionHitZoneLibre3Renseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.zoneLibre3.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_ZONELIBRE3_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitZoneLibre3Renseigne01() {
		return KEY_MESSAGE_SECTIONHIT_ZONELIBRE3_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitZoneLibre3Renseigne01().________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitZoneLibre3Renseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitZoneLibre3Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitZoneLibre3Renseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitZoneLibre3Renseigne01() 
											throws Exception {
		return fournirMessageSectionHitZoneLibre3Renseigne01();
	} // Fin de getMessageSectionHitZoneLibre3Renseigne01()._______________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitZoneLibre3Renseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitZoneLibre3Renseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitZoneLibre3Renseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitZoneLibre3Renseigne01
							, fournirKeyMessageSectionHitZoneLibre3Renseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitZoneLibre3Renseigne01(...).____________



	/**
	 * retourne le messageSectionHitZoneLibre3Regex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitZoneLibre3Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitZoneLibre3Regex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitZoneLibre3Regex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitZoneLibre3Regex02
					, fournirKeyMessageSectionHitZoneLibre3Regex02()
					, MESSAGE_SECTIONHIT_ZONELIBRE3_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitZoneLibre3Regex02()._______________
	

	
	/**
	 * Getter de la clé du messageSectionHitZoneLibre3Regex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.zoneLibre3.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_ZONELIBRE3_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitZoneLibre3Regex02() {
		return KEY_MESSAGE_SECTIONHIT_ZONELIBRE3_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitZoneLibre3Regex02().____________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitZoneLibre3Regex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitZoneLibre3Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitZoneLibre3Regex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitZoneLibre3Regex02() 
													throws Exception {
		return fournirMessageSectionHitZoneLibre3Regex02();
	} // Fin de getMessageSectionHitZoneLibre3Regex02().___________________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitZoneLibre3Regex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitZoneLibre3Regex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitZoneLibre3Regex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitZoneLibre3Regex02
							, fournirKeyMessageSectionHitZoneLibre3Regex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitZoneLibre3Regex02(...).________________


	
	/* 69 - anneeNmoins1. ****************/
	/**
	 * retourne le messageSectionHitAnneeNmoins1Renseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitAnneeNmoins1Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitAnneeNmoins1Renseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitAnneeNmoins1Renseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitAnneeNmoins1Renseigne01
					, fournirKeyMessageSectionHitAnneeNmoins1Renseigne01()
					, MESSAGE_SECTIONHIT_ANNEENMOINS1_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitAnneeNmoins1Renseigne01()._________
	

	
	/**
	 * Getter de la clé du messageSectionHitAnneeNmoins1Renseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.anneeNmoins1.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_ANNEENMOINS1_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitAnneeNmoins1Renseigne01() {
		return KEY_MESSAGE_SECTIONHIT_ANNEENMOINS1_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitAnneeNmoins1Renseigne01().______



	/**
	 * Getter du <b>SINGLETON de messageSectionHitAnneeNmoins1Renseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitAnneeNmoins1Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitAnneeNmoins1Renseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitAnneeNmoins1Renseigne01() 
											throws Exception {
		return fournirMessageSectionHitAnneeNmoins1Renseigne01();
	} // Fin de getMessageSectionHitAnneeNmoins1Renseigne01()._____________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitAnneeNmoins1Renseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitAnneeNmoins1Renseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitAnneeNmoins1Renseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitAnneeNmoins1Renseigne01
							, fournirKeyMessageSectionHitAnneeNmoins1Renseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitAnneeNmoins1Renseigne01(...).__________



	/**
	 * retourne le messageSectionHitAnneeNmoins1Regex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitAnneeNmoins1Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitAnneeNmoins1Regex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitAnneeNmoins1Regex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitAnneeNmoins1Regex02
					, fournirKeyMessageSectionHitAnneeNmoins1Regex02()
					, MESSAGE_SECTIONHIT_ANNEENMOINS1_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitAnneeNmoins1Regex02()._____________
	

	
	/**
	 * Getter de la clé du messageSectionHitAnneeNmoins1Regex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.anneeNmoins1.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_ANNEENMOINS1_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitAnneeNmoins1Regex02() {
		return KEY_MESSAGE_SECTIONHIT_ANNEENMOINS1_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitAnneeNmoins1Regex02().__________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitAnneeNmoins1Regex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitAnneeNmoins1Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitAnneeNmoins1Regex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitAnneeNmoins1Regex02() 
													throws Exception {
		return fournirMessageSectionHitAnneeNmoins1Regex02();
	} // Fin de getMessageSectionHitAnneeNmoins1Regex02()._________________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitAnneeNmoins1Regex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitAnneeNmoins1Regex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitAnneeNmoins1Regex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitAnneeNmoins1Regex02
							, fournirKeyMessageSectionHitAnneeNmoins1Regex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitAnneeNmoins1Regex02(...).______________


	
	/* 70 - mjaNmoins1. ****************/
	/**
	 * retourne le messageSectionHitMjaNmoins1Renseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitMjaNmoins1Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitMjaNmoins1Renseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitMjaNmoins1Renseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitMjaNmoins1Renseigne01
					, fournirKeyMessageSectionHitMjaNmoins1Renseigne01()
					, MESSAGE_SECTIONHIT_MJANMOINS1_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitMjaNmoins1Renseigne01().___________
	

	
	/**
	 * Getter de la clé du messageSectionHitMjaNmoins1Renseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.mjaNmoins1.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_MJANMOINS1_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitMjaNmoins1Renseigne01() {
		return KEY_MESSAGE_SECTIONHIT_MJANMOINS1_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitMjaNmoins1Renseigne01().________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitMjaNmoins1Renseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitMjaNmoins1Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitMjaNmoins1Renseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitMjaNmoins1Renseigne01() 
											throws Exception {
		return fournirMessageSectionHitMjaNmoins1Renseigne01();
	} // Fin de getMessageSectionHitMjaNmoins1Renseigne01()._______________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitMjaNmoins1Renseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitMjaNmoins1Renseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitMjaNmoins1Renseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitMjaNmoins1Renseigne01
							, fournirKeyMessageSectionHitMjaNmoins1Renseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitMjaNmoins1Renseigne01(...).____________



	/**
	 * retourne le messageSectionHitMjaNmoins1Regex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitMjaNmoins1Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitMjaNmoins1Regex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitMjaNmoins1Regex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitMjaNmoins1Regex02
					, fournirKeyMessageSectionHitMjaNmoins1Regex02()
					, MESSAGE_SECTIONHIT_MJANMOINS1_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitMjaNmoins1Regex02()._______________
	

	
	/**
	 * Getter de la clé du messageSectionHitMjaNmoins1Regex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.mjaNmoins1.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_MJANMOINS1_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitMjaNmoins1Regex02() {
		return KEY_MESSAGE_SECTIONHIT_MJANMOINS1_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitMjaNmoins1Regex02().____________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitMjaNmoins1Regex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitMjaNmoins1Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitMjaNmoins1Regex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitMjaNmoins1Regex02() 
													throws Exception {
		return fournirMessageSectionHitMjaNmoins1Regex02();
	} // Fin de getMessageSectionHitMjaNmoins1Regex02().___________________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitMjaNmoins1Regex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitMjaNmoins1Regex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitMjaNmoins1Regex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitMjaNmoins1Regex02
							, fournirKeyMessageSectionHitMjaNmoins1Regex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitMjaNmoins1Regex02(...).________________



	/**
	 * retourne le messageSectionHitMjaNmoins1Numerique03 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitMjaNmoins1Numerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitMjaNmoins1Numerique03 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitMjaNmoins1Numerique03() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitMjaNmoins1Numerique03
					, fournirKeyMessageSectionHitMjaNmoins1Numerique03()
					, MESSAGE_SECTIONHIT_MJANMOINS1_NUMERIQUE_03_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitMjaNmoins1Numerique03().___________
	

	
	/**
	 * Getter de la clé du messageSectionHitMjaNmoins1Numerique03 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.prOrigine.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_MJANMOINS1_NUMERIQUE_03 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitMjaNmoins1Numerique03() {
		return KEY_MESSAGE_SECTIONHIT_MJANMOINS1_NUMERIQUE_03;
	} // Fin de fournirKeyMessageSectionHitMjaNmoins1Numerique03().________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitMjaNmoins1Numerique03 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitMjaNmoins1Numerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitMjaNmoins1Numerique03 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitMjaNmoins1Numerique03() 
													throws Exception {
		return fournirMessageSectionHitMjaNmoins1Numerique03();
	} // Fin de getMessageSectionHitMjaNmoins1Numerique03()._______________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitMjaNmoins1Numerique03 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitMjaNmoins1Numerique03.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitMjaNmoins1Numerique03(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitMjaNmoins1Numerique03
							, fournirKeyMessageSectionHitMjaNmoins1Numerique03());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitMjaNmoins1Numerique03(...).____________


	
	/* 71 - typeComptageNmoins1. ****************/
	/**
	 * retourne le messageSectionHitTypeComptageNmoins1Renseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitTypeComptageNmoins1Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitTypeComptageNmoins1Renseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitTypeComptageNmoins1Renseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitTypeComptageNmoins1Renseigne01
					, fournirKeyMessageSectionHitTypeComptageNmoins1Renseigne01()
					, MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS1_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitTypeComptageNmoins1Renseigne01().__
	

	
	/**
	 * Getter de la clé du messageSectionHitTypeComptageNmoins1Renseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.typeComptageNmoins1.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS1_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitTypeComptageNmoins1Renseigne01() {
		return KEY_MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS1_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitTypeComptageNmoins1Renseigne01().



	/**
	 * Getter du <b>SINGLETON de messageSectionHitTypeComptageNmoins1Renseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitTypeComptageNmoins1Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitTypeComptageNmoins1Renseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitTypeComptageNmoins1Renseigne01() 
											throws Exception {
		return fournirMessageSectionHitTypeComptageNmoins1Renseigne01();
	} // Fin de getMessageSectionHitTypeComptageNmoins1Renseigne01().______
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitTypeComptageNmoins1Renseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitTypeComptageNmoins1Renseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitTypeComptageNmoins1Renseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitTypeComptageNmoins1Renseigne01
							, fournirKeyMessageSectionHitTypeComptageNmoins1Renseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitTypeComptageNmoins1Renseigne01(...).___



	/**
	 * retourne le messageSectionHitTypeComptageNmoins1Regex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitTypeComptageNmoins1Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitTypeComptageNmoins1Regex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitTypeComptageNmoins1Regex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitTypeComptageNmoins1Regex02
					, fournirKeyMessageSectionHitTypeComptageNmoins1Regex02()
					, MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS1_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitTypeComptageNmoins1Regex02().______
	

	
	/**
	 * Getter de la clé du messageSectionHitTypeComptageNmoins1Regex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.typeComptageNmoins1.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS1_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitTypeComptageNmoins1Regex02() {
		return KEY_MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS1_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitTypeComptageNmoins1Regex02().___



	/**
	 * Getter du <b>SINGLETON de messageSectionHitTypeComptageNmoins1Regex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitTypeComptageNmoins1Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitTypeComptageNmoins1Regex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitTypeComptageNmoins1Regex02() 
													throws Exception {
		return fournirMessageSectionHitTypeComptageNmoins1Regex02();
	} // Fin de getMessageSectionHitTypeComptageNmoins1Regex02().__________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitTypeComptageNmoins1Regex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitTypeComptageNmoins1Regex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitTypeComptageNmoins1Regex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitTypeComptageNmoins1Regex02
							, fournirKeyMessageSectionHitTypeComptageNmoins1Regex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitTypeComptageNmoins1Regex02(...)._______
	


	/**
	 * retourne le messageSectionHitTypeComptageNmoins1Nomenclature03 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitTypeComptageNmoins1Nomenclature03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitTypeComptageNmoins1Nomenclature03 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitTypeComptageNmoins1Nomenclature03() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitTypeComptageNmoins1Nomenclature03
					, fournirKeyMessageSectionHitTypeComptageNmoins1Nomenclature03()
					, MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS1_NOMENCLATURE_03_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitTypeComptageNmoins1Nomenclature03().
	

	
	/**
	 * Getter de la clé du messageSectionHitTypeComptageNmoins1Nomenclature03 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.typeComptageNmoins1.nomenclature".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS1_NOMENCLATURE_03 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitTypeComptageNmoins1Nomenclature03() {
		return KEY_MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS1_NOMENCLATURE_03;
	} // Fin de fournirKeyMessageSectionHitTypeComptageNmoins1Nomenclature03().



	/**
	 * Getter du <b>SINGLETON de messageSectionHitTypeComptageNmoins1Nomenclature03 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitTypeComptageNmoins1Nomenclature03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitTypeComptageNmoins1Nomenclature03 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitTypeComptageNmoins1Nomenclature03() 
													throws Exception {
		return fournirMessageSectionHitTypeComptageNmoins1Nomenclature03();
	} // Fin de getMessageSectionHitTypeComptageNmoins1Nomenclature03().___
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitTypeComptageNmoins1Nomenclature03 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitTypeComptageNmoins1Nomenclature03.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitTypeComptageNmoins1Nomenclature03(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitTypeComptageNmoins1Nomenclature03
							, fournirKeyMessageSectionHitTypeComptageNmoins1Nomenclature03());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitTypeComptageNmoins1Nomenclature03(...).


	
	/* 72 - modeCalculNmoins1. ****************/
	/**
	 * retourne le messageSectionHitModeCalculNmoins1Renseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitModeCalculNmoins1Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitModeCalculNmoins1Renseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitModeCalculNmoins1Renseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitModeCalculNmoins1Renseigne01
					, fournirKeyMessageSectionHitModeCalculNmoins1Renseigne01()
					, MESSAGE_SECTIONHIT_MODECALCULNMOINS1_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitModeCalculNmoins1Renseigne01().____
	

	
	/**
	 * Getter de la clé du messageSectionHitModeCalculNmoins1Renseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.modeCalculNmoins1.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_MODECALCULNMOINS1_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitModeCalculNmoins1Renseigne01() {
		return KEY_MESSAGE_SECTIONHIT_MODECALCULNMOINS1_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitModeCalculNmoins1Renseigne01()._



	/**
	 * Getter du <b>SINGLETON de messageSectionHitModeCalculNmoins1Renseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitModeCalculNmoins1Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitModeCalculNmoins1Renseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitModeCalculNmoins1Renseigne01() 
											throws Exception {
		return fournirMessageSectionHitModeCalculNmoins1Renseigne01();
	} // Fin de getMessageSectionHitModeCalculNmoins1Renseigne01().________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitModeCalculNmoins1Renseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitModeCalculNmoins1Renseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitModeCalculNmoins1Renseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitModeCalculNmoins1Renseigne01
							, fournirKeyMessageSectionHitModeCalculNmoins1Renseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitModeCalculNmoins1Renseigne01(...)._____



	/**
	 * retourne le messageSectionHitModeCalculNmoins1Regex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitModeCalculNmoins1Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitModeCalculNmoins1Regex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitModeCalculNmoins1Regex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitModeCalculNmoins1Regex02
					, fournirKeyMessageSectionHitModeCalculNmoins1Regex02()
					, MESSAGE_SECTIONHIT_MODECALCULNMOINS1_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitModeCalculNmoins1Regex02().________
	

	
	/**
	 * Getter de la clé du messageSectionHitModeCalculNmoins1Regex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.modeCalculNmoins1.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_MODECALCULNMOINS1_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitModeCalculNmoins1Regex02() {
		return KEY_MESSAGE_SECTIONHIT_MODECALCULNMOINS1_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitModeCalculNmoins1Regex02()._____



	/**
	 * Getter du <b>SINGLETON de messageSectionHitModeCalculNmoins1Regex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitModeCalculNmoins1Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitModeCalculNmoins1Regex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitModeCalculNmoins1Regex02() 
													throws Exception {
		return fournirMessageSectionHitModeCalculNmoins1Regex02();
	} // Fin de getMessageSectionHitModeCalculNmoins1Regex02().____________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitModeCalculNmoins1Regex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitModeCalculNmoins1Regex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitModeCalculNmoins1Regex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitModeCalculNmoins1Regex02
							, fournirKeyMessageSectionHitModeCalculNmoins1Regex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitModeCalculNmoins1Regex02(...)._________


	
	/* 73 - pcPLNmoins1. ****************/
	/**
	 * retourne le messageSectionHitPcPLNmoins1Renseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitPcPLNmoins1Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitPcPLNmoins1Renseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitPcPLNmoins1Renseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitPcPLNmoins1Renseigne01
					, fournirKeyMessageSectionHitPcPLNmoins1Renseigne01()
					, MESSAGE_SECTIONHIT_PCPLNMOINS1_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitPcPLNmoins1Renseigne01().__________
	

	
	/**
	 * Getter de la clé du messageSectionHitPcPLNmoins1Renseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.pcPLNmoins1.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_PCPLNMOINS1_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitPcPLNmoins1Renseigne01() {
		return KEY_MESSAGE_SECTIONHIT_PCPLNMOINS1_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitPcPLNmoins1Renseigne01()._______



	/**
	 * Getter du <b>SINGLETON de messageSectionHitPcPLNmoins1Renseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitPcPLNmoins1Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitPcPLNmoins1Renseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitPcPLNmoins1Renseigne01() 
											throws Exception {
		return fournirMessageSectionHitPcPLNmoins1Renseigne01();
	} // Fin de getMessageSectionHitPcPLNmoins1Renseigne01().______________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitPcPLNmoins1Renseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitPcPLNmoins1Renseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitPcPLNmoins1Renseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitPcPLNmoins1Renseigne01
							, fournirKeyMessageSectionHitPcPLNmoins1Renseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitPcPLNmoins1Renseigne01(...).___________



	/**
	 * retourne le messageSectionHitPcPLNmoins1Regex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitPcPLNmoins1Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitPcPLNmoins1Regex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitPcPLNmoins1Regex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitPcPLNmoins1Regex02
					, fournirKeyMessageSectionHitPcPLNmoins1Regex02()
					, MESSAGE_SECTIONHIT_PCPLNMOINS1_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitPcPLNmoins1Regex02().______________
	

	
	/**
	 * Getter de la clé du messageSectionHitPcPLNmoins1Regex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.pcPLNmoins1.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_PCPLNMOINS1_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitPcPLNmoins1Regex02() {
		return KEY_MESSAGE_SECTIONHIT_PCPLNMOINS1_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitPcPLNmoins1Regex02().___________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitPcPLNmoins1Regex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitPcPLNmoins1Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitPcPLNmoins1Regex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitPcPLNmoins1Regex02() 
													throws Exception {
		return fournirMessageSectionHitPcPLNmoins1Regex02();
	} // Fin de getMessageSectionHitPcPLNmoins1Regex02().__________________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitPcPLNmoins1Regex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitPcPLNmoins1Regex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitPcPLNmoins1Regex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitPcPLNmoins1Regex02
							, fournirKeyMessageSectionHitPcPLNmoins1Regex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitPcPLNmoins1Regex02(...)._______________



	/**
	 * retourne le messageSectionHitPcPLNmoins1Numerique03 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitPcPLNmoins1Numerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitPcPLNmoins1Numerique03 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitPcPLNmoins1Numerique03() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitPcPLNmoins1Numerique03
					, fournirKeyMessageSectionHitPcPLNmoins1Numerique03()
					, MESSAGE_SECTIONHIT_PCPLNMOINS1_NUMERIQUE_03_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitPcPLNmoins1Numerique03().__________
	

	
	/**
	 * Getter de la clé du messageSectionHitPcPLNmoins1Numerique03 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.prOrigine.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_PCPLNMOINS1_NUMERIQUE_03 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitPcPLNmoins1Numerique03() {
		return KEY_MESSAGE_SECTIONHIT_PCPLNMOINS1_NUMERIQUE_03;
	} // Fin de fournirKeyMessageSectionHitPcPLNmoins1Numerique03()._______



	/**
	 * Getter du <b>SINGLETON de messageSectionHitPcPLNmoins1Numerique03 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitPcPLNmoins1Numerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitPcPLNmoins1Numerique03 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitPcPLNmoins1Numerique03() 
													throws Exception {
		return fournirMessageSectionHitPcPLNmoins1Numerique03();
	} // Fin de getMessageSectionHitPcPLNmoins1Numerique03().______________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitPcPLNmoins1Numerique03 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitPcPLNmoins1Numerique03.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitPcPLNmoins1Numerique03(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitPcPLNmoins1Numerique03
							, fournirKeyMessageSectionHitPcPLNmoins1Numerique03());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitPcPLNmoins1Numerique03(...).___________	


	
	/* 74 - evaluationPLNmoins1. ****************/
	/**
	 * retourne le messageSectionHitEvaluationPLNmoins1Renseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitEvaluationPLNmoins1Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitEvaluationPLNmoins1Renseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitEvaluationPLNmoins1Renseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitEvaluationPLNmoins1Renseigne01
					, fournirKeyMessageSectionHitEvaluationPLNmoins1Renseigne01()
					, MESSAGE_SECTIONHIT_EVALUATIONPLNMOINS1_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitEvaluationPLNmoins1Renseigne01().__
	

	
	/**
	 * Getter de la clé du messageSectionHitEvaluationPLNmoins1Renseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.evaluationPLNmoins1.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_EVALUATIONPLNMOINS1_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitEvaluationPLNmoins1Renseigne01() {
		return KEY_MESSAGE_SECTIONHIT_EVALUATIONPLNMOINS1_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitEvaluationPLNmoins1Renseigne01().



	/**
	 * Getter du <b>SINGLETON de messageSectionHitEvaluationPLNmoins1Renseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitEvaluationPLNmoins1Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitEvaluationPLNmoins1Renseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitEvaluationPLNmoins1Renseigne01() 
											throws Exception {
		return fournirMessageSectionHitEvaluationPLNmoins1Renseigne01();
	} // Fin de getMessageSectionHitEvaluationPLNmoins1Renseigne01().______
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitEvaluationPLNmoins1Renseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitEvaluationPLNmoins1Renseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitEvaluationPLNmoins1Renseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitEvaluationPLNmoins1Renseigne01
							, fournirKeyMessageSectionHitEvaluationPLNmoins1Renseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitEvaluationPLNmoins1Renseigne01(...).___



	/**
	 * retourne le messageSectionHitEvaluationPLNmoins1Regex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitEvaluationPLNmoins1Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitEvaluationPLNmoins1Regex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitEvaluationPLNmoins1Regex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitEvaluationPLNmoins1Regex02
					, fournirKeyMessageSectionHitEvaluationPLNmoins1Regex02()
					, MESSAGE_SECTIONHIT_EVALUATIONPLNMOINS1_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitEvaluationPLNmoins1Regex02().______
	

	
	/**
	 * Getter de la clé du messageSectionHitEvaluationPLNmoins1Regex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.evaluationPLNmoins1.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_EVALUATIONPLNMOINS1_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitEvaluationPLNmoins1Regex02() {
		return KEY_MESSAGE_SECTIONHIT_EVALUATIONPLNMOINS1_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitEvaluationPLNmoins1Regex02().___



	/**
	 * Getter du <b>SINGLETON de messageSectionHitEvaluationPLNmoins1Regex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitEvaluationPLNmoins1Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitEvaluationPLNmoins1Regex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitEvaluationPLNmoins1Regex02() 
													throws Exception {
		return fournirMessageSectionHitEvaluationPLNmoins1Regex02();
	} // Fin de getMessageSectionHitEvaluationPLNmoins1Regex02().__________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitEvaluationPLNmoins1Regex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitEvaluationPLNmoins1Regex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitEvaluationPLNmoins1Regex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitEvaluationPLNmoins1Regex02
							, fournirKeyMessageSectionHitEvaluationPLNmoins1Regex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitEvaluationPLNmoins1Regex02(...)._______


	
	/* 75 - pcNuitAnnuelNmoins1. ****************/
	/**
	 * retourne le messageSectionHitPcNuitAnnuelNmoins1Renseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitAnnuelNmoins1Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitPcNuitAnnuelNmoins1Renseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitPcNuitAnnuelNmoins1Renseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitPcNuitAnnuelNmoins1Renseigne01
					, fournirKeyMessageSectionHitPcNuitAnnuelNmoins1Renseigne01()
					, MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS1_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitPcNuitAnnuelNmoins1Renseigne01().__
	

	
	/**
	 * Getter de la clé du messageSectionHitPcNuitAnnuelNmoins1Renseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.pcNuitAnnuelNmoins1.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS1_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitPcNuitAnnuelNmoins1Renseigne01() {
		return KEY_MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS1_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitPcNuitAnnuelNmoins1Renseigne01().



	/**
	 * Getter du <b>SINGLETON de messageSectionHitPcNuitAnnuelNmoins1Renseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitAnnuelNmoins1Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitPcNuitAnnuelNmoins1Renseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitPcNuitAnnuelNmoins1Renseigne01() 
											throws Exception {
		return fournirMessageSectionHitPcNuitAnnuelNmoins1Renseigne01();
	} // Fin de getMessageSectionHitPcNuitAnnuelNmoins1Renseigne01().______
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitPcNuitAnnuelNmoins1Renseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitPcNuitAnnuelNmoins1Renseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitPcNuitAnnuelNmoins1Renseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitPcNuitAnnuelNmoins1Renseigne01
							, fournirKeyMessageSectionHitPcNuitAnnuelNmoins1Renseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitPcNuitAnnuelNmoins1Renseigne01(...).___



	/**
	 * retourne le messageSectionHitPcNuitAnnuelNmoins1Regex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitAnnuelNmoins1Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitPcNuitAnnuelNmoins1Regex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitPcNuitAnnuelNmoins1Regex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitPcNuitAnnuelNmoins1Regex02
					, fournirKeyMessageSectionHitPcNuitAnnuelNmoins1Regex02()
					, MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS1_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitPcNuitAnnuelNmoins1Regex02().______
	

	
	/**
	 * Getter de la clé du messageSectionHitPcNuitAnnuelNmoins1Regex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.pcNuitAnnuelNmoins1.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS1_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitPcNuitAnnuelNmoins1Regex02() {
		return KEY_MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS1_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitPcNuitAnnuelNmoins1Regex02().___



	/**
	 * Getter du <b>SINGLETON de messageSectionHitPcNuitAnnuelNmoins1Regex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitAnnuelNmoins1Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitPcNuitAnnuelNmoins1Regex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitPcNuitAnnuelNmoins1Regex02() 
													throws Exception {
		return fournirMessageSectionHitPcNuitAnnuelNmoins1Regex02();
	} // Fin de getMessageSectionHitPcNuitAnnuelNmoins1Regex02().__________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitPcNuitAnnuelNmoins1Regex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitPcNuitAnnuelNmoins1Regex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitPcNuitAnnuelNmoins1Regex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitPcNuitAnnuelNmoins1Regex02
							, fournirKeyMessageSectionHitPcNuitAnnuelNmoins1Regex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitPcNuitAnnuelNmoins1Regex02(...)._______



	/**
	 * retourne le messageSectionHitPcNuitAnnuelNmoins1Numerique03 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitAnnuelNmoins1Numerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitPcNuitAnnuelNmoins1Numerique03 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitPcNuitAnnuelNmoins1Numerique03() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitPcNuitAnnuelNmoins1Numerique03
					, fournirKeyMessageSectionHitPcNuitAnnuelNmoins1Numerique03()
					, MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS1_NUMERIQUE_03_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitPcNuitAnnuelNmoins1Numerique03().__
	

	
	/**
	 * Getter de la clé du messageSectionHitPcNuitAnnuelNmoins1Numerique03 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.prOrigine.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS1_NUMERIQUE_03 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitPcNuitAnnuelNmoins1Numerique03() {
		return KEY_MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS1_NUMERIQUE_03;
	} // Fin de fournirKeyMessageSectionHitPcNuitAnnuelNmoins1Numerique03().
	


	/**
	 * Getter du <b>SINGLETON de messageSectionHitPcNuitAnnuelNmoins1Numerique03 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitAnnuelNmoins1Numerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitPcNuitAnnuelNmoins1Numerique03 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitPcNuitAnnuelNmoins1Numerique03() 
													throws Exception {
		return fournirMessageSectionHitPcNuitAnnuelNmoins1Numerique03();
	} // Fin de getMessageSectionHitPcNuitAnnuelNmoins1Numerique03().______
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitPcNuitAnnuelNmoins1Numerique03 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitPcNuitAnnuelNmoins1Numerique03.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitPcNuitAnnuelNmoins1Numerique03(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitPcNuitAnnuelNmoins1Numerique03
							, fournirKeyMessageSectionHitPcNuitAnnuelNmoins1Numerique03());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitPcNuitAnnuelNmoins1Numerique03(...).___


	
	/* 76 - indiceFiabiliteMjaNmoins1. ****************/
	/**
	 * retourne le messageSectionHitIndiceFiabiliteMjaNmoins1Renseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitIndiceFiabiliteMjaNmoins1Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitIndiceFiabiliteMjaNmoins1Renseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitIndiceFiabiliteMjaNmoins1Renseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitIndiceFiabiliteMjaNmoins1Renseigne01
					, fournirKeyMessageSectionHitIndiceFiabiliteMjaNmoins1Renseigne01()
					, MESSAGE_SECTIONHIT_INDICEFIABLITEMJANMOINS1_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitIndiceFiabiliteMjaNmoins1Renseigne01().
	

	
	/**
	 * Getter de la clé du messageSectionHitIndiceFiabiliteMjaNmoins1Renseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.indiceFiabiliteMjaNmoins1.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_INDICEFIABLITEMJANMOINS1_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitIndiceFiabiliteMjaNmoins1Renseigne01() {
		return KEY_MESSAGE_SECTIONHIT_INDICEFIABLITEMJANMOINS1_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitIndiceFiabiliteMjaNmoins1Renseigne01().



	/**
	 * Getter du <b>SINGLETON de messageSectionHitIndiceFiabiliteMjaNmoins1Renseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitIndiceFiabiliteMjaNmoins1Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitIndiceFiabiliteMjaNmoins1Renseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitIndiceFiabiliteMjaNmoins1Renseigne01() 
											throws Exception {
		return fournirMessageSectionHitIndiceFiabiliteMjaNmoins1Renseigne01();
	} // Fin de getMessageSectionHitIndiceFiabiliteMjaNmoins1Renseigne01().
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitIndiceFiabiliteMjaNmoins1Renseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitIndiceFiabiliteMjaNmoins1Renseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitIndiceFiabiliteMjaNmoins1Renseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitIndiceFiabiliteMjaNmoins1Renseigne01
							, fournirKeyMessageSectionHitIndiceFiabiliteMjaNmoins1Renseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitIndiceFiabiliteMjaNmoins1Renseigne01(...).



	/**
	 * retourne le messageSectionHitIndiceFiabiliteMjaNmoins1Regex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitIndiceFiabiliteMjaNmoins1Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitIndiceFiabiliteMjaNmoins1Regex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitIndiceFiabiliteMjaNmoins1Regex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitIndiceFiabiliteMjaNmoins1Regex02
					, fournirKeyMessageSectionHitIndiceFiabiliteMjaNmoins1Regex02()
					, MESSAGE_SECTIONHIT_INDICEFIABLITEMJANMOINS1_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitIndiceFiabiliteMjaNmoins1Regex02().
	

	
	/**
	 * Getter de la clé du messageSectionHitIndiceFiabiliteMjaNmoins1Regex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.indiceFiabiliteMjaNmoins1.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_INDICEFIABLITEMJANMOINS1_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitIndiceFiabiliteMjaNmoins1Regex02() {
		return KEY_MESSAGE_SECTIONHIT_INDICEFIABLITEMJANMOINS1_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitIndiceFiabiliteMjaNmoins1Regex02().



	/**
	 * Getter du <b>SINGLETON de messageSectionHitIndiceFiabiliteMjaNmoins1Regex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitIndiceFiabiliteMjaNmoins1Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitIndiceFiabiliteMjaNmoins1Regex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitIndiceFiabiliteMjaNmoins1Regex02() 
													throws Exception {
		return fournirMessageSectionHitIndiceFiabiliteMjaNmoins1Regex02();
	} // Fin de getMessageSectionHitIndiceFiabiliteMjaNmoins1Regex02().____
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitIndiceFiabiliteMjaNmoins1Regex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitIndiceFiabiliteMjaNmoins1Regex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitIndiceFiabiliteMjaNmoins1Regex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitIndiceFiabiliteMjaNmoins1Regex02
							, fournirKeyMessageSectionHitIndiceFiabiliteMjaNmoins1Regex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitIndiceFiabiliteMjaNmoins1Regex02(...)._


	
	/* 77 - anneeNmoins2. ****************/
	/**
	 * retourne le messageSectionHitAnneeNmoins2Renseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitAnneeNmoins2Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitAnneeNmoins2Renseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitAnneeNmoins2Renseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitAnneeNmoins2Renseigne01
					, fournirKeyMessageSectionHitAnneeNmoins2Renseigne01()
					, MESSAGE_SECTIONHIT_ANNEENMOINS2_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitAnneeNmoins2Renseigne01()._________
	

	
	/**
	 * Getter de la clé du messageSectionHitAnneeNmoins2Renseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.anneeNmoins2.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_ANNEENMOINS2_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitAnneeNmoins2Renseigne01() {
		return KEY_MESSAGE_SECTIONHIT_ANNEENMOINS2_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitAnneeNmoins2Renseigne01().______



	/**
	 * Getter du <b>SINGLETON de messageSectionHitAnneeNmoins2Renseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitAnneeNmoins2Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitAnneeNmoins2Renseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitAnneeNmoins2Renseigne01() 
											throws Exception {
		return fournirMessageSectionHitAnneeNmoins2Renseigne01();
	} // Fin de getMessageSectionHitAnneeNmoins2Renseigne01()._____________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitAnneeNmoins2Renseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitAnneeNmoins2Renseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitAnneeNmoins2Renseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitAnneeNmoins2Renseigne01
							, fournirKeyMessageSectionHitAnneeNmoins2Renseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitAnneeNmoins2Renseigne01(...).__________



	/**
	 * retourne le messageSectionHitAnneeNmoins2Regex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitAnneeNmoins2Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitAnneeNmoins2Regex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitAnneeNmoins2Regex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitAnneeNmoins2Regex02
					, fournirKeyMessageSectionHitAnneeNmoins2Regex02()
					, MESSAGE_SECTIONHIT_ANNEENMOINS2_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitAnneeNmoins2Regex02()._____________
	

	
	/**
	 * Getter de la clé du messageSectionHitAnneeNmoins2Regex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.anneeNmoins2.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_ANNEENMOINS2_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitAnneeNmoins2Regex02() {
		return KEY_MESSAGE_SECTIONHIT_ANNEENMOINS2_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitAnneeNmoins2Regex02().__________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitAnneeNmoins2Regex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitAnneeNmoins2Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitAnneeNmoins2Regex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitAnneeNmoins2Regex02() 
													throws Exception {
		return fournirMessageSectionHitAnneeNmoins2Regex02();
	} // Fin de getMessageSectionHitAnneeNmoins2Regex02()._________________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitAnneeNmoins2Regex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitAnneeNmoins2Regex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitAnneeNmoins2Regex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitAnneeNmoins2Regex02
							, fournirKeyMessageSectionHitAnneeNmoins2Regex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitAnneeNmoins2Regex02(...).______________


	
	/* 78 - mjaNmoins2. ****************/
	/**
	 * retourne le messageSectionHitMjaNmoins2Renseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitMjaNmoins2Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitMjaNmoins2Renseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitMjaNmoins2Renseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitMjaNmoins2Renseigne01
					, fournirKeyMessageSectionHitMjaNmoins2Renseigne01()
					, MESSAGE_SECTIONHIT_MJANMOINS2_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitMjaNmoins2Renseigne01().___________
	

	
	/**
	 * Getter de la clé du messageSectionHitMjaNmoins2Renseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.mjaNmoins2.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_MJANMOINS2_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitMjaNmoins2Renseigne01() {
		return KEY_MESSAGE_SECTIONHIT_MJANMOINS2_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitMjaNmoins2Renseigne01().________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitMjaNmoins2Renseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitMjaNmoins2Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitMjaNmoins2Renseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitMjaNmoins2Renseigne01() 
											throws Exception {
		return fournirMessageSectionHitMjaNmoins2Renseigne01();
	} // Fin de getMessageSectionHitMjaNmoins2Renseigne01()._______________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitMjaNmoins2Renseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitMjaNmoins2Renseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitMjaNmoins2Renseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitMjaNmoins2Renseigne01
							, fournirKeyMessageSectionHitMjaNmoins2Renseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitMjaNmoins2Renseigne01(...).____________



	/**
	 * retourne le messageSectionHitMjaNmoins2Regex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitMjaNmoins2Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitMjaNmoins2Regex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitMjaNmoins2Regex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitMjaNmoins2Regex02
					, fournirKeyMessageSectionHitMjaNmoins2Regex02()
					, MESSAGE_SECTIONHIT_MJANMOINS2_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitMjaNmoins2Regex02()._______________
	

	
	/**
	 * Getter de la clé du messageSectionHitMjaNmoins2Regex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.mjaNmoins2.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_MJANMOINS2_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitMjaNmoins2Regex02() {
		return KEY_MESSAGE_SECTIONHIT_MJANMOINS2_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitMjaNmoins2Regex02().____________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitMjaNmoins2Regex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitMjaNmoins2Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitMjaNmoins2Regex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitMjaNmoins2Regex02() 
													throws Exception {
		return fournirMessageSectionHitMjaNmoins2Regex02();
	} // Fin de getMessageSectionHitMjaNmoins2Regex02().___________________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitMjaNmoins2Regex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitMjaNmoins2Regex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitMjaNmoins2Regex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitMjaNmoins2Regex02
							, fournirKeyMessageSectionHitMjaNmoins2Regex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitMjaNmoins2Regex02(...).________________



	/**
	 * retourne le messageSectionHitMjaNmoins2Numerique03 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitMjaNmoins2Numerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitMjaNmoins2Numerique03 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitMjaNmoins2Numerique03() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitMjaNmoins2Numerique03
					, fournirKeyMessageSectionHitMjaNmoins2Numerique03()
					, MESSAGE_SECTIONHIT_MJANMOINS2_NUMERIQUE_03_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitMjaNmoins2Numerique03().___________
	

	
	/**
	 * Getter de la clé du messageSectionHitMjaNmoins2Numerique03 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.prOrigine.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_MJANMOINS2_NUMERIQUE_03 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitMjaNmoins2Numerique03() {
		return KEY_MESSAGE_SECTIONHIT_MJANMOINS2_NUMERIQUE_03;
	} // Fin de fournirKeyMessageSectionHitMjaNmoins2Numerique03().________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitMjaNmoins2Numerique03 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitMjaNmoins2Numerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitMjaNmoins2Numerique03 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitMjaNmoins2Numerique03() 
													throws Exception {
		return fournirMessageSectionHitMjaNmoins2Numerique03();
	} // Fin de getMessageSectionHitMjaNmoins2Numerique03()._______________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitMjaNmoins2Numerique03 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitMjaNmoins2Numerique03.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitMjaNmoins2Numerique03(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitMjaNmoins2Numerique03
							, fournirKeyMessageSectionHitMjaNmoins2Numerique03());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitMjaNmoins2Numerique03(...).____________


	
	/* 79 - typeComptageNmoins2. ****************/
	/**
	 * retourne le messageSectionHitTypeComptageNmoins2Renseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitTypeComptageNmoins2Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitTypeComptageNmoins2Renseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitTypeComptageNmoins2Renseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitTypeComptageNmoins2Renseigne01
					, fournirKeyMessageSectionHitTypeComptageNmoins2Renseigne01()
					, MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS2_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitTypeComptageNmoins2Renseigne01().__
	

	
	/**
	 * Getter de la clé du messageSectionHitTypeComptageNmoins2Renseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.typeComptageNmoins2.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS2_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitTypeComptageNmoins2Renseigne01() {
		return KEY_MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS2_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitTypeComptageNmoins2Renseigne01().



	/**
	 * Getter du <b>SINGLETON de messageSectionHitTypeComptageNmoins2Renseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitTypeComptageNmoins2Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitTypeComptageNmoins2Renseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitTypeComptageNmoins2Renseigne01() 
											throws Exception {
		return fournirMessageSectionHitTypeComptageNmoins2Renseigne01();
	} // Fin de getMessageSectionHitTypeComptageNmoins2Renseigne01().______
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitTypeComptageNmoins2Renseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitTypeComptageNmoins2Renseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitTypeComptageNmoins2Renseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitTypeComptageNmoins2Renseigne01
							, fournirKeyMessageSectionHitTypeComptageNmoins2Renseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitTypeComptageNmoins2Renseigne01(...).___



	/**
	 * retourne le messageSectionHitTypeComptageNmoins2Regex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitTypeComptageNmoins2Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitTypeComptageNmoins2Regex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitTypeComptageNmoins2Regex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitTypeComptageNmoins2Regex02
					, fournirKeyMessageSectionHitTypeComptageNmoins2Regex02()
					, MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS2_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitTypeComptageNmoins2Regex02().______
	

	
	/**
	 * Getter de la clé du messageSectionHitTypeComptageNmoins2Regex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.typeComptageNmoins2.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS2_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitTypeComptageNmoins2Regex02() {
		return KEY_MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS2_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitTypeComptageNmoins2Regex02().___



	/**
	 * Getter du <b>SINGLETON de messageSectionHitTypeComptageNmoins2Regex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitTypeComptageNmoins2Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitTypeComptageNmoins2Regex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitTypeComptageNmoins2Regex02() 
													throws Exception {
		return fournirMessageSectionHitTypeComptageNmoins2Regex02();
	} // Fin de getMessageSectionHitTypeComptageNmoins2Regex02().__________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitTypeComptageNmoins2Regex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitTypeComptageNmoins2Regex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitTypeComptageNmoins2Regex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitTypeComptageNmoins2Regex02
							, fournirKeyMessageSectionHitTypeComptageNmoins2Regex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitTypeComptageNmoins2Regex02(...)._______
	


	/**
	 * retourne le messageSectionHitTypeComptageNmoins2Nomenclature03 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitTypeComptageNmoins2Nomenclature03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitTypeComptageNmoins2Nomenclature03 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitTypeComptageNmoins2Nomenclature03() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitTypeComptageNmoins2Nomenclature03
					, fournirKeyMessageSectionHitTypeComptageNmoins2Nomenclature03()
					, MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS2_NOMENCLATURE_03_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitTypeComptageNmoins2Nomenclature03().
	

	
	/**
	 * Getter de la clé du messageSectionHitTypeComptageNmoins2Nomenclature03 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.typeComptageNmoins2.nomenclature".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS2_NOMENCLATURE_03 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitTypeComptageNmoins2Nomenclature03() {
		return KEY_MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS2_NOMENCLATURE_03;
	} // Fin de fournirKeyMessageSectionHitTypeComptageNmoins2Nomenclature03().



	/**
	 * Getter du <b>SINGLETON de messageSectionHitTypeComptageNmoins2Nomenclature03 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitTypeComptageNmoins2Nomenclature03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitTypeComptageNmoins2Nomenclature03 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitTypeComptageNmoins2Nomenclature03() 
													throws Exception {
		return fournirMessageSectionHitTypeComptageNmoins2Nomenclature03();
	} // Fin de getMessageSectionHitTypeComptageNmoins2Nomenclature03().___
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitTypeComptageNmoins2Nomenclature03 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitTypeComptageNmoins2Nomenclature03.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitTypeComptageNmoins2Nomenclature03(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitTypeComptageNmoins2Nomenclature03
							, fournirKeyMessageSectionHitTypeComptageNmoins2Nomenclature03());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitTypeComptageNmoins2Nomenclature03(...).


	
	/* 80 - modeCalculNmoins2. ****************/
	/**
	 * retourne le messageSectionHitModeCalculNmoins2Renseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitModeCalculNmoins2Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitModeCalculNmoins2Renseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitModeCalculNmoins2Renseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitModeCalculNmoins2Renseigne01
					, fournirKeyMessageSectionHitModeCalculNmoins2Renseigne01()
					, MESSAGE_SECTIONHIT_MODECALCULNMOINS2_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitModeCalculNmoins2Renseigne01().____
	

	
	/**
	 * Getter de la clé du messageSectionHitModeCalculNmoins2Renseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.modeCalculNmoins2.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_MODECALCULNMOINS2_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitModeCalculNmoins2Renseigne01() {
		return KEY_MESSAGE_SECTIONHIT_MODECALCULNMOINS2_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitModeCalculNmoins2Renseigne01()._



	/**
	 * Getter du <b>SINGLETON de messageSectionHitModeCalculNmoins2Renseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitModeCalculNmoins2Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitModeCalculNmoins2Renseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitModeCalculNmoins2Renseigne01() 
											throws Exception {
		return fournirMessageSectionHitModeCalculNmoins2Renseigne01();
	} // Fin de getMessageSectionHitModeCalculNmoins2Renseigne01().________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitModeCalculNmoins2Renseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitModeCalculNmoins2Renseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitModeCalculNmoins2Renseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitModeCalculNmoins2Renseigne01
							, fournirKeyMessageSectionHitModeCalculNmoins2Renseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitModeCalculNmoins2Renseigne01(...)._____



	/**
	 * retourne le messageSectionHitModeCalculNmoins2Regex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitModeCalculNmoins2Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitModeCalculNmoins2Regex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitModeCalculNmoins2Regex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitModeCalculNmoins2Regex02
					, fournirKeyMessageSectionHitModeCalculNmoins2Regex02()
					, MESSAGE_SECTIONHIT_MODECALCULNMOINS2_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitModeCalculNmoins2Regex02().________
	

	
	/**
	 * Getter de la clé du messageSectionHitModeCalculNmoins2Regex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.modeCalculNmoins2.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_MODECALCULNMOINS2_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitModeCalculNmoins2Regex02() {
		return KEY_MESSAGE_SECTIONHIT_MODECALCULNMOINS2_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitModeCalculNmoins2Regex02()._____



	/**
	 * Getter du <b>SINGLETON de messageSectionHitModeCalculNmoins2Regex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitModeCalculNmoins2Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitModeCalculNmoins2Regex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitModeCalculNmoins2Regex02() 
													throws Exception {
		return fournirMessageSectionHitModeCalculNmoins2Regex02();
	} // Fin de getMessageSectionHitModeCalculNmoins2Regex02().____________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitModeCalculNmoins2Regex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitModeCalculNmoins2Regex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitModeCalculNmoins2Regex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitModeCalculNmoins2Regex02
							, fournirKeyMessageSectionHitModeCalculNmoins2Regex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitModeCalculNmoins2Regex02(...)._________


	
	/* 81 - pcPLNmoins2. ****************/
	/**
	 * retourne le messageSectionHitPcPLNmoins2Renseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitPcPLNmoins2Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitPcPLNmoins2Renseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitPcPLNmoins2Renseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitPcPLNmoins2Renseigne01
					, fournirKeyMessageSectionHitPcPLNmoins2Renseigne01()
					, MESSAGE_SECTIONHIT_PCPLNMOINS2_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitPcPLNmoins2Renseigne01().__________
	

	
	/**
	 * Getter de la clé du messageSectionHitPcPLNmoins2Renseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.pcPLNmoins2.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_PCPLNMOINS2_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitPcPLNmoins2Renseigne01() {
		return KEY_MESSAGE_SECTIONHIT_PCPLNMOINS2_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitPcPLNmoins2Renseigne01()._______



	/**
	 * Getter du <b>SINGLETON de messageSectionHitPcPLNmoins2Renseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitPcPLNmoins2Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitPcPLNmoins2Renseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitPcPLNmoins2Renseigne01() 
											throws Exception {
		return fournirMessageSectionHitPcPLNmoins2Renseigne01();
	} // Fin de getMessageSectionHitPcPLNmoins2Renseigne01().______________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitPcPLNmoins2Renseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitPcPLNmoins2Renseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitPcPLNmoins2Renseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitPcPLNmoins2Renseigne01
							, fournirKeyMessageSectionHitPcPLNmoins2Renseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitPcPLNmoins2Renseigne01(...).___________



	/**
	 * retourne le messageSectionHitPcPLNmoins2Regex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitPcPLNmoins2Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitPcPLNmoins2Regex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitPcPLNmoins2Regex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitPcPLNmoins2Regex02
					, fournirKeyMessageSectionHitPcPLNmoins2Regex02()
					, MESSAGE_SECTIONHIT_PCPLNMOINS2_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitPcPLNmoins2Regex02().______________
	

	
	/**
	 * Getter de la clé du messageSectionHitPcPLNmoins2Regex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.pcPLNmoins2.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_PCPLNMOINS2_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitPcPLNmoins2Regex02() {
		return KEY_MESSAGE_SECTIONHIT_PCPLNMOINS2_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitPcPLNmoins2Regex02().___________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitPcPLNmoins2Regex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitPcPLNmoins2Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitPcPLNmoins2Regex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitPcPLNmoins2Regex02() 
													throws Exception {
		return fournirMessageSectionHitPcPLNmoins2Regex02();
	} // Fin de getMessageSectionHitPcPLNmoins2Regex02().__________________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitPcPLNmoins2Regex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitPcPLNmoins2Regex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitPcPLNmoins2Regex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitPcPLNmoins2Regex02
							, fournirKeyMessageSectionHitPcPLNmoins2Regex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitPcPLNmoins2Regex02(...)._______________



	/**
	 * retourne le messageSectionHitPcPLNmoins2Numerique03 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitPcPLNmoins2Numerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitPcPLNmoins2Numerique03 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitPcPLNmoins2Numerique03() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitPcPLNmoins2Numerique03
					, fournirKeyMessageSectionHitPcPLNmoins2Numerique03()
					, MESSAGE_SECTIONHIT_PCPLNMOINS2_NUMERIQUE_03_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitPcPLNmoins2Numerique03().__________
	

	
	/**
	 * Getter de la clé du messageSectionHitPcPLNmoins2Numerique03 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.prOrigine.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_PCPLNMOINS2_NUMERIQUE_03 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitPcPLNmoins2Numerique03() {
		return KEY_MESSAGE_SECTIONHIT_PCPLNMOINS2_NUMERIQUE_03;
	} // Fin de fournirKeyMessageSectionHitPcPLNmoins2Numerique03()._______



	/**
	 * Getter du <b>SINGLETON de messageSectionHitPcPLNmoins2Numerique03 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitPcPLNmoins2Numerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitPcPLNmoins2Numerique03 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitPcPLNmoins2Numerique03() 
													throws Exception {
		return fournirMessageSectionHitPcPLNmoins2Numerique03();
	} // Fin de getMessageSectionHitPcPLNmoins2Numerique03().______________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitPcPLNmoins2Numerique03 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitPcPLNmoins2Numerique03.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitPcPLNmoins2Numerique03(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitPcPLNmoins2Numerique03
							, fournirKeyMessageSectionHitPcPLNmoins2Numerique03());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitPcPLNmoins2Numerique03(...).___________	


	
	/* 82 - evaluationPLNmoins2. ****************/
	/**
	 * retourne le messageSectionHitEvaluationPLNmoins2Renseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitEvaluationPLNmoins2Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitEvaluationPLNmoins2Renseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitEvaluationPLNmoins2Renseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitEvaluationPLNmoins2Renseigne01
					, fournirKeyMessageSectionHitEvaluationPLNmoins2Renseigne01()
					, MESSAGE_SECTIONHIT_EVALUATIONPLNMOINS2_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitEvaluationPLNmoins2Renseigne01().__
	

	
	/**
	 * Getter de la clé du messageSectionHitEvaluationPLNmoins2Renseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.evaluationPLNmoins2.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_EVALUATIONPLNMOINS2_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitEvaluationPLNmoins2Renseigne01() {
		return KEY_MESSAGE_SECTIONHIT_EVALUATIONPLNMOINS2_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitEvaluationPLNmoins2Renseigne01().



	/**
	 * Getter du <b>SINGLETON de messageSectionHitEvaluationPLNmoins2Renseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitEvaluationPLNmoins2Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitEvaluationPLNmoins2Renseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitEvaluationPLNmoins2Renseigne01() 
											throws Exception {
		return fournirMessageSectionHitEvaluationPLNmoins2Renseigne01();
	} // Fin de getMessageSectionHitEvaluationPLNmoins2Renseigne01().______
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitEvaluationPLNmoins2Renseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitEvaluationPLNmoins2Renseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitEvaluationPLNmoins2Renseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitEvaluationPLNmoins2Renseigne01
							, fournirKeyMessageSectionHitEvaluationPLNmoins2Renseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitEvaluationPLNmoins2Renseigne01(...).___



	/**
	 * retourne le messageSectionHitEvaluationPLNmoins2Regex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitEvaluationPLNmoins2Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitEvaluationPLNmoins2Regex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitEvaluationPLNmoins2Regex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitEvaluationPLNmoins2Regex02
					, fournirKeyMessageSectionHitEvaluationPLNmoins2Regex02()
					, MESSAGE_SECTIONHIT_EVALUATIONPLNMOINS2_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitEvaluationPLNmoins2Regex02().______
	

	
	/**
	 * Getter de la clé du messageSectionHitEvaluationPLNmoins2Regex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.evaluationPLNmoins2.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_EVALUATIONPLNMOINS2_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitEvaluationPLNmoins2Regex02() {
		return KEY_MESSAGE_SECTIONHIT_EVALUATIONPLNMOINS2_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitEvaluationPLNmoins2Regex02().___



	/**
	 * Getter du <b>SINGLETON de messageSectionHitEvaluationPLNmoins2Regex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitEvaluationPLNmoins2Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitEvaluationPLNmoins2Regex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitEvaluationPLNmoins2Regex02() 
													throws Exception {
		return fournirMessageSectionHitEvaluationPLNmoins2Regex02();
	} // Fin de getMessageSectionHitEvaluationPLNmoins2Regex02().__________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitEvaluationPLNmoins2Regex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitEvaluationPLNmoins2Regex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitEvaluationPLNmoins2Regex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitEvaluationPLNmoins2Regex02
							, fournirKeyMessageSectionHitEvaluationPLNmoins2Regex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitEvaluationPLNmoins2Regex02(...)._______


	
	/* 83 - pcNuitAnnuelNmoins2. ****************/
	/**
	 * retourne le messageSectionHitPcNuitAnnuelNmoins2Renseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitAnnuelNmoins2Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitPcNuitAnnuelNmoins2Renseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitPcNuitAnnuelNmoins2Renseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitPcNuitAnnuelNmoins2Renseigne01
					, fournirKeyMessageSectionHitPcNuitAnnuelNmoins2Renseigne01()
					, MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS2_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitPcNuitAnnuelNmoins2Renseigne01().__
	

	
	/**
	 * Getter de la clé du messageSectionHitPcNuitAnnuelNmoins2Renseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.pcNuitAnnuelNmoins2.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS2_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitPcNuitAnnuelNmoins2Renseigne01() {
		return KEY_MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS2_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitPcNuitAnnuelNmoins2Renseigne01().



	/**
	 * Getter du <b>SINGLETON de messageSectionHitPcNuitAnnuelNmoins2Renseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitAnnuelNmoins2Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitPcNuitAnnuelNmoins2Renseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitPcNuitAnnuelNmoins2Renseigne01() 
											throws Exception {
		return fournirMessageSectionHitPcNuitAnnuelNmoins2Renseigne01();
	} // Fin de getMessageSectionHitPcNuitAnnuelNmoins2Renseigne01().______
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitPcNuitAnnuelNmoins2Renseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitPcNuitAnnuelNmoins2Renseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitPcNuitAnnuelNmoins2Renseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitPcNuitAnnuelNmoins2Renseigne01
							, fournirKeyMessageSectionHitPcNuitAnnuelNmoins2Renseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitPcNuitAnnuelNmoins2Renseigne01(...).___



	/**
	 * retourne le messageSectionHitPcNuitAnnuelNmoins2Regex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitAnnuelNmoins2Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitPcNuitAnnuelNmoins2Regex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitPcNuitAnnuelNmoins2Regex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitPcNuitAnnuelNmoins2Regex02
					, fournirKeyMessageSectionHitPcNuitAnnuelNmoins2Regex02()
					, MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS2_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitPcNuitAnnuelNmoins2Regex02().______
	

	
	/**
	 * Getter de la clé du messageSectionHitPcNuitAnnuelNmoins2Regex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.pcNuitAnnuelNmoins2.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS2_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitPcNuitAnnuelNmoins2Regex02() {
		return KEY_MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS2_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitPcNuitAnnuelNmoins2Regex02().___



	/**
	 * Getter du <b>SINGLETON de messageSectionHitPcNuitAnnuelNmoins2Regex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitAnnuelNmoins2Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitPcNuitAnnuelNmoins2Regex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitPcNuitAnnuelNmoins2Regex02() 
													throws Exception {
		return fournirMessageSectionHitPcNuitAnnuelNmoins2Regex02();
	} // Fin de getMessageSectionHitPcNuitAnnuelNmoins2Regex02().__________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitPcNuitAnnuelNmoins2Regex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitPcNuitAnnuelNmoins2Regex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitPcNuitAnnuelNmoins2Regex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitPcNuitAnnuelNmoins2Regex02
							, fournirKeyMessageSectionHitPcNuitAnnuelNmoins2Regex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitPcNuitAnnuelNmoins2Regex02(...)._______



	/**
	 * retourne le messageSectionHitPcNuitAnnuelNmoins2Numerique03 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitAnnuelNmoins2Numerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitPcNuitAnnuelNmoins2Numerique03 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitPcNuitAnnuelNmoins2Numerique03() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitPcNuitAnnuelNmoins2Numerique03
					, fournirKeyMessageSectionHitPcNuitAnnuelNmoins2Numerique03()
					, MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS2_NUMERIQUE_03_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitPcNuitAnnuelNmoins2Numerique03().__
	

	
	/**
	 * Getter de la clé du messageSectionHitPcNuitAnnuelNmoins2Numerique03 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.prOrigine.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS2_NUMERIQUE_03 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitPcNuitAnnuelNmoins2Numerique03() {
		return KEY_MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS2_NUMERIQUE_03;
	} // Fin de fournirKeyMessageSectionHitPcNuitAnnuelNmoins2Numerique03().
	


	/**
	 * Getter du <b>SINGLETON de messageSectionHitPcNuitAnnuelNmoins2Numerique03 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitAnnuelNmoins2Numerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitPcNuitAnnuelNmoins2Numerique03 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitPcNuitAnnuelNmoins2Numerique03() 
													throws Exception {
		return fournirMessageSectionHitPcNuitAnnuelNmoins2Numerique03();
	} // Fin de getMessageSectionHitPcNuitAnnuelNmoins2Numerique03().______
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitPcNuitAnnuelNmoins2Numerique03 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitPcNuitAnnuelNmoins2Numerique03.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitPcNuitAnnuelNmoins2Numerique03(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitPcNuitAnnuelNmoins2Numerique03
							, fournirKeyMessageSectionHitPcNuitAnnuelNmoins2Numerique03());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitPcNuitAnnuelNmoins2Numerique03(...).___


	
	/* 84 - indiceFiabiliteMjaNmoins2. ****************/
	/**
	 * retourne le messageSectionHitIndiceFiabiliteMjaNmoins2Renseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitIndiceFiabiliteMjaNmoins2Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitIndiceFiabiliteMjaNmoins2Renseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitIndiceFiabiliteMjaNmoins2Renseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitIndiceFiabiliteMjaNmoins2Renseigne01
					, fournirKeyMessageSectionHitIndiceFiabiliteMjaNmoins2Renseigne01()
					, MESSAGE_SECTIONHIT_INDICEFIABLITEMJANMOINS2_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitIndiceFiabiliteMjaNmoins2Renseigne01().
	

	
	/**
	 * Getter de la clé du messageSectionHitIndiceFiabiliteMjaNmoins2Renseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.indiceFiabiliteMjaNmoins2.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_INDICEFIABLITEMJANMOINS2_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitIndiceFiabiliteMjaNmoins2Renseigne01() {
		return KEY_MESSAGE_SECTIONHIT_INDICEFIABLITEMJANMOINS2_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitIndiceFiabiliteMjaNmoins2Renseigne01().



	/**
	 * Getter du <b>SINGLETON de messageSectionHitIndiceFiabiliteMjaNmoins2Renseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitIndiceFiabiliteMjaNmoins2Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitIndiceFiabiliteMjaNmoins2Renseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitIndiceFiabiliteMjaNmoins2Renseigne01() 
											throws Exception {
		return fournirMessageSectionHitIndiceFiabiliteMjaNmoins2Renseigne01();
	} // Fin de getMessageSectionHitIndiceFiabiliteMjaNmoins2Renseigne01().
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitIndiceFiabiliteMjaNmoins2Renseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitIndiceFiabiliteMjaNmoins2Renseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitIndiceFiabiliteMjaNmoins2Renseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitIndiceFiabiliteMjaNmoins2Renseigne01
							, fournirKeyMessageSectionHitIndiceFiabiliteMjaNmoins2Renseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitIndiceFiabiliteMjaNmoins2Renseigne01(...).



	/**
	 * retourne le messageSectionHitIndiceFiabiliteMjaNmoins2Regex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitIndiceFiabiliteMjaNmoins2Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitIndiceFiabiliteMjaNmoins2Regex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitIndiceFiabiliteMjaNmoins2Regex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitIndiceFiabiliteMjaNmoins2Regex02
					, fournirKeyMessageSectionHitIndiceFiabiliteMjaNmoins2Regex02()
					, MESSAGE_SECTIONHIT_INDICEFIABLITEMJANMOINS2_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitIndiceFiabiliteMjaNmoins2Regex02().
	

	
	/**
	 * Getter de la clé du messageSectionHitIndiceFiabiliteMjaNmoins2Regex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.indiceFiabiliteMjaNmoins2.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_INDICEFIABLITEMJANMOINS2_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitIndiceFiabiliteMjaNmoins2Regex02() {
		return KEY_MESSAGE_SECTIONHIT_INDICEFIABLITEMJANMOINS2_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitIndiceFiabiliteMjaNmoins2Regex02().



	/**
	 * Getter du <b>SINGLETON de messageSectionHitIndiceFiabiliteMjaNmoins2Regex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitIndiceFiabiliteMjaNmoins2Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitIndiceFiabiliteMjaNmoins2Regex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitIndiceFiabiliteMjaNmoins2Regex02() 
													throws Exception {
		return fournirMessageSectionHitIndiceFiabiliteMjaNmoins2Regex02();
	} // Fin de getMessageSectionHitIndiceFiabiliteMjaNmoins2Regex02().____
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitIndiceFiabiliteMjaNmoins2Regex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitIndiceFiabiliteMjaNmoins2Regex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitIndiceFiabiliteMjaNmoins2Regex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitIndiceFiabiliteMjaNmoins2Regex02
							, fournirKeyMessageSectionHitIndiceFiabiliteMjaNmoins2Regex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitIndiceFiabiliteMjaNmoins2Regex02(...)._



	
	/* 85 - anneeNmoins3. ****************/
	/**
	 * retourne le messageSectionHitAnneeNmoins3Renseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitAnneeNmoins3Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitAnneeNmoins3Renseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitAnneeNmoins3Renseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitAnneeNmoins3Renseigne01
					, fournirKeyMessageSectionHitAnneeNmoins3Renseigne01()
					, MESSAGE_SECTIONHIT_ANNEENMOINS3_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitAnneeNmoins3Renseigne01()._________
	

	
	/**
	 * Getter de la clé du messageSectionHitAnneeNmoins3Renseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.anneeNmoins3.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_ANNEENMOINS3_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitAnneeNmoins3Renseigne01() {
		return KEY_MESSAGE_SECTIONHIT_ANNEENMOINS3_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitAnneeNmoins3Renseigne01().______



	/**
	 * Getter du <b>SINGLETON de messageSectionHitAnneeNmoins3Renseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitAnneeNmoins3Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitAnneeNmoins3Renseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitAnneeNmoins3Renseigne01() 
											throws Exception {
		return fournirMessageSectionHitAnneeNmoins3Renseigne01();
	} // Fin de getMessageSectionHitAnneeNmoins3Renseigne01()._____________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitAnneeNmoins3Renseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitAnneeNmoins3Renseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitAnneeNmoins3Renseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitAnneeNmoins3Renseigne01
							, fournirKeyMessageSectionHitAnneeNmoins3Renseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitAnneeNmoins3Renseigne01(...).__________



	/**
	 * retourne le messageSectionHitAnneeNmoins3Regex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitAnneeNmoins3Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitAnneeNmoins3Regex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitAnneeNmoins3Regex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitAnneeNmoins3Regex02
					, fournirKeyMessageSectionHitAnneeNmoins3Regex02()
					, MESSAGE_SECTIONHIT_ANNEENMOINS3_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitAnneeNmoins3Regex02()._____________
	

	
	/**
	 * Getter de la clé du messageSectionHitAnneeNmoins3Regex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.anneeNmoins3.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_ANNEENMOINS3_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitAnneeNmoins3Regex02() {
		return KEY_MESSAGE_SECTIONHIT_ANNEENMOINS3_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitAnneeNmoins3Regex02().__________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitAnneeNmoins3Regex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitAnneeNmoins3Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitAnneeNmoins3Regex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitAnneeNmoins3Regex02() 
													throws Exception {
		return fournirMessageSectionHitAnneeNmoins3Regex02();
	} // Fin de getMessageSectionHitAnneeNmoins3Regex02()._________________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitAnneeNmoins3Regex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitAnneeNmoins3Regex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitAnneeNmoins3Regex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitAnneeNmoins3Regex02
							, fournirKeyMessageSectionHitAnneeNmoins3Regex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitAnneeNmoins3Regex02(...).______________


	
	/* 86 - mjaNmoins3. ****************/
	/**
	 * retourne le messageSectionHitMjaNmoins3Renseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitMjaNmoins3Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitMjaNmoins3Renseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitMjaNmoins3Renseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitMjaNmoins3Renseigne01
					, fournirKeyMessageSectionHitMjaNmoins3Renseigne01()
					, MESSAGE_SECTIONHIT_MJANMOINS3_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitMjaNmoins3Renseigne01().___________
	

	
	/**
	 * Getter de la clé du messageSectionHitMjaNmoins3Renseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.mjaNmoins3.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_MJANMOINS3_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitMjaNmoins3Renseigne01() {
		return KEY_MESSAGE_SECTIONHIT_MJANMOINS3_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitMjaNmoins3Renseigne01().________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitMjaNmoins3Renseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitMjaNmoins3Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitMjaNmoins3Renseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitMjaNmoins3Renseigne01() 
											throws Exception {
		return fournirMessageSectionHitMjaNmoins3Renseigne01();
	} // Fin de getMessageSectionHitMjaNmoins3Renseigne01()._______________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitMjaNmoins3Renseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitMjaNmoins3Renseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitMjaNmoins3Renseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitMjaNmoins3Renseigne01
							, fournirKeyMessageSectionHitMjaNmoins3Renseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitMjaNmoins3Renseigne01(...).____________



	/**
	 * retourne le messageSectionHitMjaNmoins3Regex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitMjaNmoins3Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitMjaNmoins3Regex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitMjaNmoins3Regex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitMjaNmoins3Regex02
					, fournirKeyMessageSectionHitMjaNmoins3Regex02()
					, MESSAGE_SECTIONHIT_MJANMOINS3_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitMjaNmoins3Regex02()._______________
	

	
	/**
	 * Getter de la clé du messageSectionHitMjaNmoins3Regex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.mjaNmoins3.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_MJANMOINS3_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitMjaNmoins3Regex02() {
		return KEY_MESSAGE_SECTIONHIT_MJANMOINS3_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitMjaNmoins3Regex02().____________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitMjaNmoins3Regex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitMjaNmoins3Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitMjaNmoins3Regex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitMjaNmoins3Regex02() 
													throws Exception {
		return fournirMessageSectionHitMjaNmoins3Regex02();
	} // Fin de getMessageSectionHitMjaNmoins3Regex02().___________________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitMjaNmoins3Regex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitMjaNmoins3Regex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitMjaNmoins3Regex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitMjaNmoins3Regex02
							, fournirKeyMessageSectionHitMjaNmoins3Regex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitMjaNmoins3Regex02(...).________________



	/**
	 * retourne le messageSectionHitMjaNmoins3Numerique03 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitMjaNmoins3Numerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitMjaNmoins3Numerique03 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitMjaNmoins3Numerique03() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitMjaNmoins3Numerique03
					, fournirKeyMessageSectionHitMjaNmoins3Numerique03()
					, MESSAGE_SECTIONHIT_MJANMOINS3_NUMERIQUE_03_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitMjaNmoins3Numerique03().___________
	

	
	/**
	 * Getter de la clé du messageSectionHitMjaNmoins3Numerique03 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.prOrigine.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_MJANMOINS3_NUMERIQUE_03 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitMjaNmoins3Numerique03() {
		return KEY_MESSAGE_SECTIONHIT_MJANMOINS3_NUMERIQUE_03;
	} // Fin de fournirKeyMessageSectionHitMjaNmoins3Numerique03().________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitMjaNmoins3Numerique03 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitMjaNmoins3Numerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitMjaNmoins3Numerique03 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitMjaNmoins3Numerique03() 
													throws Exception {
		return fournirMessageSectionHitMjaNmoins3Numerique03();
	} // Fin de getMessageSectionHitMjaNmoins3Numerique03()._______________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitMjaNmoins3Numerique03 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitMjaNmoins3Numerique03.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitMjaNmoins3Numerique03(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitMjaNmoins3Numerique03
							, fournirKeyMessageSectionHitMjaNmoins3Numerique03());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitMjaNmoins3Numerique03(...).____________


	
	/* 87 - typeComptageNmoins3. ****************/
	/**
	 * retourne le messageSectionHitTypeComptageNmoins3Renseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitTypeComptageNmoins3Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitTypeComptageNmoins3Renseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitTypeComptageNmoins3Renseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitTypeComptageNmoins3Renseigne01
					, fournirKeyMessageSectionHitTypeComptageNmoins3Renseigne01()
					, MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS3_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitTypeComptageNmoins3Renseigne01().__
	

	
	/**
	 * Getter de la clé du messageSectionHitTypeComptageNmoins3Renseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.typeComptageNmoins3.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS3_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitTypeComptageNmoins3Renseigne01() {
		return KEY_MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS3_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitTypeComptageNmoins3Renseigne01().



	/**
	 * Getter du <b>SINGLETON de messageSectionHitTypeComptageNmoins3Renseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitTypeComptageNmoins3Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitTypeComptageNmoins3Renseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitTypeComptageNmoins3Renseigne01() 
											throws Exception {
		return fournirMessageSectionHitTypeComptageNmoins3Renseigne01();
	} // Fin de getMessageSectionHitTypeComptageNmoins3Renseigne01().______
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitTypeComptageNmoins3Renseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitTypeComptageNmoins3Renseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitTypeComptageNmoins3Renseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitTypeComptageNmoins3Renseigne01
							, fournirKeyMessageSectionHitTypeComptageNmoins3Renseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitTypeComptageNmoins3Renseigne01(...).___



	/**
	 * retourne le messageSectionHitTypeComptageNmoins3Regex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitTypeComptageNmoins3Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitTypeComptageNmoins3Regex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitTypeComptageNmoins3Regex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitTypeComptageNmoins3Regex02
					, fournirKeyMessageSectionHitTypeComptageNmoins3Regex02()
					, MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS3_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitTypeComptageNmoins3Regex02().______
	

	
	/**
	 * Getter de la clé du messageSectionHitTypeComptageNmoins3Regex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.typeComptageNmoins3.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS3_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitTypeComptageNmoins3Regex02() {
		return KEY_MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS3_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitTypeComptageNmoins3Regex02().___



	/**
	 * Getter du <b>SINGLETON de messageSectionHitTypeComptageNmoins3Regex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitTypeComptageNmoins3Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitTypeComptageNmoins3Regex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitTypeComptageNmoins3Regex02() 
													throws Exception {
		return fournirMessageSectionHitTypeComptageNmoins3Regex02();
	} // Fin de getMessageSectionHitTypeComptageNmoins3Regex02().__________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitTypeComptageNmoins3Regex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitTypeComptageNmoins3Regex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitTypeComptageNmoins3Regex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitTypeComptageNmoins3Regex02
							, fournirKeyMessageSectionHitTypeComptageNmoins3Regex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitTypeComptageNmoins3Regex02(...)._______
	


	/**
	 * retourne le messageSectionHitTypeComptageNmoins3Nomenclature03 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitTypeComptageNmoins3Nomenclature03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitTypeComptageNmoins3Nomenclature03 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitTypeComptageNmoins3Nomenclature03() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitTypeComptageNmoins3Nomenclature03
					, fournirKeyMessageSectionHitTypeComptageNmoins3Nomenclature03()
					, MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS3_NOMENCLATURE_03_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitTypeComptageNmoins3Nomenclature03().
	

	
	/**
	 * Getter de la clé du messageSectionHitTypeComptageNmoins3Nomenclature03 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.typeComptageNmoins3.nomenclature".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS3_NOMENCLATURE_03 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitTypeComptageNmoins3Nomenclature03() {
		return KEY_MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS3_NOMENCLATURE_03;
	} // Fin de fournirKeyMessageSectionHitTypeComptageNmoins3Nomenclature03().



	/**
	 * Getter du <b>SINGLETON de messageSectionHitTypeComptageNmoins3Nomenclature03 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitTypeComptageNmoins3Nomenclature03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitTypeComptageNmoins3Nomenclature03 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitTypeComptageNmoins3Nomenclature03() 
													throws Exception {
		return fournirMessageSectionHitTypeComptageNmoins3Nomenclature03();
	} // Fin de getMessageSectionHitTypeComptageNmoins3Nomenclature03().___
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitTypeComptageNmoins3Nomenclature03 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitTypeComptageNmoins3Nomenclature03.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitTypeComptageNmoins3Nomenclature03(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitTypeComptageNmoins3Nomenclature03
							, fournirKeyMessageSectionHitTypeComptageNmoins3Nomenclature03());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitTypeComptageNmoins3Nomenclature03(...).


	
	/* 88 - modeCalculNmoins3. ****************/
	/**
	 * retourne le messageSectionHitModeCalculNmoins3Renseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitModeCalculNmoins3Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitModeCalculNmoins3Renseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitModeCalculNmoins3Renseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitModeCalculNmoins3Renseigne01
					, fournirKeyMessageSectionHitModeCalculNmoins3Renseigne01()
					, MESSAGE_SECTIONHIT_MODECALCULNMOINS3_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitModeCalculNmoins3Renseigne01().____
	

	
	/**
	 * Getter de la clé du messageSectionHitModeCalculNmoins3Renseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.modeCalculNmoins3.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_MODECALCULNMOINS3_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitModeCalculNmoins3Renseigne01() {
		return KEY_MESSAGE_SECTIONHIT_MODECALCULNMOINS3_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitModeCalculNmoins3Renseigne01()._



	/**
	 * Getter du <b>SINGLETON de messageSectionHitModeCalculNmoins3Renseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitModeCalculNmoins3Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitModeCalculNmoins3Renseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitModeCalculNmoins3Renseigne01() 
											throws Exception {
		return fournirMessageSectionHitModeCalculNmoins3Renseigne01();
	} // Fin de getMessageSectionHitModeCalculNmoins3Renseigne01().________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitModeCalculNmoins3Renseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitModeCalculNmoins3Renseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitModeCalculNmoins3Renseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitModeCalculNmoins3Renseigne01
							, fournirKeyMessageSectionHitModeCalculNmoins3Renseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitModeCalculNmoins3Renseigne01(...)._____



	/**
	 * retourne le messageSectionHitModeCalculNmoins3Regex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitModeCalculNmoins3Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitModeCalculNmoins3Regex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitModeCalculNmoins3Regex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitModeCalculNmoins3Regex02
					, fournirKeyMessageSectionHitModeCalculNmoins3Regex02()
					, MESSAGE_SECTIONHIT_MODECALCULNMOINS3_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitModeCalculNmoins3Regex02().________
	

	
	/**
	 * Getter de la clé du messageSectionHitModeCalculNmoins3Regex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.modeCalculNmoins3.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_MODECALCULNMOINS3_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitModeCalculNmoins3Regex02() {
		return KEY_MESSAGE_SECTIONHIT_MODECALCULNMOINS3_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitModeCalculNmoins3Regex02()._____



	/**
	 * Getter du <b>SINGLETON de messageSectionHitModeCalculNmoins3Regex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitModeCalculNmoins3Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitModeCalculNmoins3Regex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitModeCalculNmoins3Regex02() 
													throws Exception {
		return fournirMessageSectionHitModeCalculNmoins3Regex02();
	} // Fin de getMessageSectionHitModeCalculNmoins3Regex02().____________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitModeCalculNmoins3Regex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitModeCalculNmoins3Regex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitModeCalculNmoins3Regex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitModeCalculNmoins3Regex02
							, fournirKeyMessageSectionHitModeCalculNmoins3Regex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitModeCalculNmoins3Regex02(...)._________


	
	/* 89 - pcPLNmoins3. ****************/
	/**
	 * retourne le messageSectionHitPcPLNmoins3Renseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitPcPLNmoins3Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitPcPLNmoins3Renseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitPcPLNmoins3Renseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitPcPLNmoins3Renseigne01
					, fournirKeyMessageSectionHitPcPLNmoins3Renseigne01()
					, MESSAGE_SECTIONHIT_PCPLNMOINS3_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitPcPLNmoins3Renseigne01().__________
	

	
	/**
	 * Getter de la clé du messageSectionHitPcPLNmoins3Renseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.pcPLNmoins3.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_PCPLNMOINS3_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitPcPLNmoins3Renseigne01() {
		return KEY_MESSAGE_SECTIONHIT_PCPLNMOINS3_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitPcPLNmoins3Renseigne01()._______



	/**
	 * Getter du <b>SINGLETON de messageSectionHitPcPLNmoins3Renseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitPcPLNmoins3Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitPcPLNmoins3Renseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitPcPLNmoins3Renseigne01() 
											throws Exception {
		return fournirMessageSectionHitPcPLNmoins3Renseigne01();
	} // Fin de getMessageSectionHitPcPLNmoins3Renseigne01().______________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitPcPLNmoins3Renseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitPcPLNmoins3Renseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitPcPLNmoins3Renseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitPcPLNmoins3Renseigne01
							, fournirKeyMessageSectionHitPcPLNmoins3Renseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitPcPLNmoins3Renseigne01(...).___________



	/**
	 * retourne le messageSectionHitPcPLNmoins3Regex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitPcPLNmoins3Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitPcPLNmoins3Regex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitPcPLNmoins3Regex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitPcPLNmoins3Regex02
					, fournirKeyMessageSectionHitPcPLNmoins3Regex02()
					, MESSAGE_SECTIONHIT_PCPLNMOINS3_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitPcPLNmoins3Regex02().______________
	

	
	/**
	 * Getter de la clé du messageSectionHitPcPLNmoins3Regex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.pcPLNmoins3.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_PCPLNMOINS3_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitPcPLNmoins3Regex02() {
		return KEY_MESSAGE_SECTIONHIT_PCPLNMOINS3_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitPcPLNmoins3Regex02().___________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitPcPLNmoins3Regex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitPcPLNmoins3Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitPcPLNmoins3Regex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitPcPLNmoins3Regex02() 
													throws Exception {
		return fournirMessageSectionHitPcPLNmoins3Regex02();
	} // Fin de getMessageSectionHitPcPLNmoins3Regex02().__________________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitPcPLNmoins3Regex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitPcPLNmoins3Regex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitPcPLNmoins3Regex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitPcPLNmoins3Regex02
							, fournirKeyMessageSectionHitPcPLNmoins3Regex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitPcPLNmoins3Regex02(...)._______________



	/**
	 * retourne le messageSectionHitPcPLNmoins3Numerique03 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitPcPLNmoins3Numerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitPcPLNmoins3Numerique03 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitPcPLNmoins3Numerique03() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitPcPLNmoins3Numerique03
					, fournirKeyMessageSectionHitPcPLNmoins3Numerique03()
					, MESSAGE_SECTIONHIT_PCPLNMOINS3_NUMERIQUE_03_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitPcPLNmoins3Numerique03().__________
	

	
	/**
	 * Getter de la clé du messageSectionHitPcPLNmoins3Numerique03 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.prOrigine.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_PCPLNMOINS3_NUMERIQUE_03 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitPcPLNmoins3Numerique03() {
		return KEY_MESSAGE_SECTIONHIT_PCPLNMOINS3_NUMERIQUE_03;
	} // Fin de fournirKeyMessageSectionHitPcPLNmoins3Numerique03()._______



	/**
	 * Getter du <b>SINGLETON de messageSectionHitPcPLNmoins3Numerique03 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitPcPLNmoins3Numerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitPcPLNmoins3Numerique03 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitPcPLNmoins3Numerique03() 
													throws Exception {
		return fournirMessageSectionHitPcPLNmoins3Numerique03();
	} // Fin de getMessageSectionHitPcPLNmoins3Numerique03().______________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitPcPLNmoins3Numerique03 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitPcPLNmoins3Numerique03.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitPcPLNmoins3Numerique03(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitPcPLNmoins3Numerique03
							, fournirKeyMessageSectionHitPcPLNmoins3Numerique03());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitPcPLNmoins3Numerique03(...).___________	


	
	/* 90 - evaluationPLNmoins3. ****************/
	/**
	 * retourne le messageSectionHitEvaluationPLNmoins3Renseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitEvaluationPLNmoins3Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitEvaluationPLNmoins3Renseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitEvaluationPLNmoins3Renseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitEvaluationPLNmoins3Renseigne01
					, fournirKeyMessageSectionHitEvaluationPLNmoins3Renseigne01()
					, MESSAGE_SECTIONHIT_EVALUATIONPLNMOINS3_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitEvaluationPLNmoins3Renseigne01().__
	

	
	/**
	 * Getter de la clé du messageSectionHitEvaluationPLNmoins3Renseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.evaluationPLNmoins3.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_EVALUATIONPLNMOINS3_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitEvaluationPLNmoins3Renseigne01() {
		return KEY_MESSAGE_SECTIONHIT_EVALUATIONPLNMOINS3_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitEvaluationPLNmoins3Renseigne01().



	/**
	 * Getter du <b>SINGLETON de messageSectionHitEvaluationPLNmoins3Renseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitEvaluationPLNmoins3Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitEvaluationPLNmoins3Renseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitEvaluationPLNmoins3Renseigne01() 
											throws Exception {
		return fournirMessageSectionHitEvaluationPLNmoins3Renseigne01();
	} // Fin de getMessageSectionHitEvaluationPLNmoins3Renseigne01().______
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitEvaluationPLNmoins3Renseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitEvaluationPLNmoins3Renseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitEvaluationPLNmoins3Renseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitEvaluationPLNmoins3Renseigne01
							, fournirKeyMessageSectionHitEvaluationPLNmoins3Renseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitEvaluationPLNmoins3Renseigne01(...).___



	/**
	 * retourne le messageSectionHitEvaluationPLNmoins3Regex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitEvaluationPLNmoins3Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitEvaluationPLNmoins3Regex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitEvaluationPLNmoins3Regex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitEvaluationPLNmoins3Regex02
					, fournirKeyMessageSectionHitEvaluationPLNmoins3Regex02()
					, MESSAGE_SECTIONHIT_EVALUATIONPLNMOINS3_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitEvaluationPLNmoins3Regex02().______
	

	
	/**
	 * Getter de la clé du messageSectionHitEvaluationPLNmoins3Regex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.evaluationPLNmoins3.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_EVALUATIONPLNMOINS3_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitEvaluationPLNmoins3Regex02() {
		return KEY_MESSAGE_SECTIONHIT_EVALUATIONPLNMOINS3_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitEvaluationPLNmoins3Regex02().___



	/**
	 * Getter du <b>SINGLETON de messageSectionHitEvaluationPLNmoins3Regex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitEvaluationPLNmoins3Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitEvaluationPLNmoins3Regex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitEvaluationPLNmoins3Regex02() 
													throws Exception {
		return fournirMessageSectionHitEvaluationPLNmoins3Regex02();
	} // Fin de getMessageSectionHitEvaluationPLNmoins3Regex02().__________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitEvaluationPLNmoins3Regex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitEvaluationPLNmoins3Regex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitEvaluationPLNmoins3Regex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitEvaluationPLNmoins3Regex02
							, fournirKeyMessageSectionHitEvaluationPLNmoins3Regex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitEvaluationPLNmoins3Regex02(...)._______


	
	/* 91 - pcNuitAnnuelNmoins3. ****************/
	/**
	 * retourne le messageSectionHitPcNuitAnnuelNmoins3Renseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitAnnuelNmoins3Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitPcNuitAnnuelNmoins3Renseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitPcNuitAnnuelNmoins3Renseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitPcNuitAnnuelNmoins3Renseigne01
					, fournirKeyMessageSectionHitPcNuitAnnuelNmoins3Renseigne01()
					, MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS3_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitPcNuitAnnuelNmoins3Renseigne01().__
	

	
	/**
	 * Getter de la clé du messageSectionHitPcNuitAnnuelNmoins3Renseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.pcNuitAnnuelNmoins3.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS3_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitPcNuitAnnuelNmoins3Renseigne01() {
		return KEY_MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS3_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitPcNuitAnnuelNmoins3Renseigne01().



	/**
	 * Getter du <b>SINGLETON de messageSectionHitPcNuitAnnuelNmoins3Renseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitAnnuelNmoins3Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitPcNuitAnnuelNmoins3Renseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitPcNuitAnnuelNmoins3Renseigne01() 
											throws Exception {
		return fournirMessageSectionHitPcNuitAnnuelNmoins3Renseigne01();
	} // Fin de getMessageSectionHitPcNuitAnnuelNmoins3Renseigne01().______
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitPcNuitAnnuelNmoins3Renseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitPcNuitAnnuelNmoins3Renseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitPcNuitAnnuelNmoins3Renseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitPcNuitAnnuelNmoins3Renseigne01
							, fournirKeyMessageSectionHitPcNuitAnnuelNmoins3Renseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitPcNuitAnnuelNmoins3Renseigne01(...).___



	/**
	 * retourne le messageSectionHitPcNuitAnnuelNmoins3Regex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitAnnuelNmoins3Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitPcNuitAnnuelNmoins3Regex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitPcNuitAnnuelNmoins3Regex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitPcNuitAnnuelNmoins3Regex02
					, fournirKeyMessageSectionHitPcNuitAnnuelNmoins3Regex02()
					, MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS3_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitPcNuitAnnuelNmoins3Regex02().______
	

	
	/**
	 * Getter de la clé du messageSectionHitPcNuitAnnuelNmoins3Regex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.pcNuitAnnuelNmoins3.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS3_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitPcNuitAnnuelNmoins3Regex02() {
		return KEY_MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS3_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitPcNuitAnnuelNmoins3Regex02().___



	/**
	 * Getter du <b>SINGLETON de messageSectionHitPcNuitAnnuelNmoins3Regex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitAnnuelNmoins3Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitPcNuitAnnuelNmoins3Regex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitPcNuitAnnuelNmoins3Regex02() 
													throws Exception {
		return fournirMessageSectionHitPcNuitAnnuelNmoins3Regex02();
	} // Fin de getMessageSectionHitPcNuitAnnuelNmoins3Regex02().__________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitPcNuitAnnuelNmoins3Regex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitPcNuitAnnuelNmoins3Regex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitPcNuitAnnuelNmoins3Regex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitPcNuitAnnuelNmoins3Regex02
							, fournirKeyMessageSectionHitPcNuitAnnuelNmoins3Regex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitPcNuitAnnuelNmoins3Regex02(...)._______



	/**
	 * retourne le messageSectionHitPcNuitAnnuelNmoins3Numerique03 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitAnnuelNmoins3Numerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitPcNuitAnnuelNmoins3Numerique03 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitPcNuitAnnuelNmoins3Numerique03() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitPcNuitAnnuelNmoins3Numerique03
					, fournirKeyMessageSectionHitPcNuitAnnuelNmoins3Numerique03()
					, MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS3_NUMERIQUE_03_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitPcNuitAnnuelNmoins3Numerique03().__
	

	
	/**
	 * Getter de la clé du messageSectionHitPcNuitAnnuelNmoins3Numerique03 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.prOrigine.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS3_NUMERIQUE_03 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitPcNuitAnnuelNmoins3Numerique03() {
		return KEY_MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS3_NUMERIQUE_03;
	} // Fin de fournirKeyMessageSectionHitPcNuitAnnuelNmoins3Numerique03().
	


	/**
	 * Getter du <b>SINGLETON de messageSectionHitPcNuitAnnuelNmoins3Numerique03 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitAnnuelNmoins3Numerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitPcNuitAnnuelNmoins3Numerique03 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitPcNuitAnnuelNmoins3Numerique03() 
													throws Exception {
		return fournirMessageSectionHitPcNuitAnnuelNmoins3Numerique03();
	} // Fin de getMessageSectionHitPcNuitAnnuelNmoins3Numerique03().______
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitPcNuitAnnuelNmoins3Numerique03 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitPcNuitAnnuelNmoins3Numerique03.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitPcNuitAnnuelNmoins3Numerique03(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitPcNuitAnnuelNmoins3Numerique03
							, fournirKeyMessageSectionHitPcNuitAnnuelNmoins3Numerique03());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitPcNuitAnnuelNmoins3Numerique03(...).___


	
	/* 92 - indiceFiabiliteMjaNmoins3. ****************/
	/**
	 * retourne le messageSectionHitIndiceFiabiliteMjaNmoins3Renseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitIndiceFiabiliteMjaNmoins3Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitIndiceFiabiliteMjaNmoins3Renseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitIndiceFiabiliteMjaNmoins3Renseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitIndiceFiabiliteMjaNmoins3Renseigne01
					, fournirKeyMessageSectionHitIndiceFiabiliteMjaNmoins3Renseigne01()
					, MESSAGE_SECTIONHIT_INDICEFIABLITEMJANMOINS3_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitIndiceFiabiliteMjaNmoins3Renseigne01().
	

	
	/**
	 * Getter de la clé du messageSectionHitIndiceFiabiliteMjaNmoins3Renseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.indiceFiabiliteMjaNmoins3.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_INDICEFIABLITEMJANMOINS3_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitIndiceFiabiliteMjaNmoins3Renseigne01() {
		return KEY_MESSAGE_SECTIONHIT_INDICEFIABLITEMJANMOINS3_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitIndiceFiabiliteMjaNmoins3Renseigne01().



	/**
	 * Getter du <b>SINGLETON de messageSectionHitIndiceFiabiliteMjaNmoins3Renseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitIndiceFiabiliteMjaNmoins3Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitIndiceFiabiliteMjaNmoins3Renseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitIndiceFiabiliteMjaNmoins3Renseigne01() 
											throws Exception {
		return fournirMessageSectionHitIndiceFiabiliteMjaNmoins3Renseigne01();
	} // Fin de getMessageSectionHitIndiceFiabiliteMjaNmoins3Renseigne01().
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitIndiceFiabiliteMjaNmoins3Renseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitIndiceFiabiliteMjaNmoins3Renseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitIndiceFiabiliteMjaNmoins3Renseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitIndiceFiabiliteMjaNmoins3Renseigne01
							, fournirKeyMessageSectionHitIndiceFiabiliteMjaNmoins3Renseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitIndiceFiabiliteMjaNmoins3Renseigne01(...).



	/**
	 * retourne le messageSectionHitIndiceFiabiliteMjaNmoins3Regex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitIndiceFiabiliteMjaNmoins3Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitIndiceFiabiliteMjaNmoins3Regex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitIndiceFiabiliteMjaNmoins3Regex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitIndiceFiabiliteMjaNmoins3Regex02
					, fournirKeyMessageSectionHitIndiceFiabiliteMjaNmoins3Regex02()
					, MESSAGE_SECTIONHIT_INDICEFIABLITEMJANMOINS3_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitIndiceFiabiliteMjaNmoins3Regex02().
	

	
	/**
	 * Getter de la clé du messageSectionHitIndiceFiabiliteMjaNmoins3Regex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.indiceFiabiliteMjaNmoins3.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_INDICEFIABLITEMJANMOINS3_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitIndiceFiabiliteMjaNmoins3Regex02() {
		return KEY_MESSAGE_SECTIONHIT_INDICEFIABLITEMJANMOINS3_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitIndiceFiabiliteMjaNmoins3Regex02().



	/**
	 * Getter du <b>SINGLETON de messageSectionHitIndiceFiabiliteMjaNmoins3Regex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitIndiceFiabiliteMjaNmoins3Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitIndiceFiabiliteMjaNmoins3Regex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitIndiceFiabiliteMjaNmoins3Regex02() 
													throws Exception {
		return fournirMessageSectionHitIndiceFiabiliteMjaNmoins3Regex02();
	} // Fin de getMessageSectionHitIndiceFiabiliteMjaNmoins3Regex02().____
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitIndiceFiabiliteMjaNmoins3Regex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitIndiceFiabiliteMjaNmoins3Regex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitIndiceFiabiliteMjaNmoins3Regex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitIndiceFiabiliteMjaNmoins3Regex02
							, fournirKeyMessageSectionHitIndiceFiabiliteMjaNmoins3Regex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitIndiceFiabiliteMjaNmoins3Regex02(...)._



	
	/* 93 - anneeNmoins4. ****************/
	/**
	 * retourne le messageSectionHitAnneeNmoins4Renseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitAnneeNmoins4Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitAnneeNmoins4Renseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitAnneeNmoins4Renseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitAnneeNmoins4Renseigne01
					, fournirKeyMessageSectionHitAnneeNmoins4Renseigne01()
					, MESSAGE_SECTIONHIT_ANNEENMOINS4_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitAnneeNmoins4Renseigne01()._________
	

	
	/**
	 * Getter de la clé du messageSectionHitAnneeNmoins4Renseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.anneeNmoins4.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_ANNEENMOINS4_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitAnneeNmoins4Renseigne01() {
		return KEY_MESSAGE_SECTIONHIT_ANNEENMOINS4_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitAnneeNmoins4Renseigne01().______



	/**
	 * Getter du <b>SINGLETON de messageSectionHitAnneeNmoins4Renseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitAnneeNmoins4Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitAnneeNmoins4Renseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitAnneeNmoins4Renseigne01() 
											throws Exception {
		return fournirMessageSectionHitAnneeNmoins4Renseigne01();
	} // Fin de getMessageSectionHitAnneeNmoins4Renseigne01()._____________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitAnneeNmoins4Renseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitAnneeNmoins4Renseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitAnneeNmoins4Renseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitAnneeNmoins4Renseigne01
							, fournirKeyMessageSectionHitAnneeNmoins4Renseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitAnneeNmoins4Renseigne01(...).__________



	/**
	 * retourne le messageSectionHitAnneeNmoins4Regex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitAnneeNmoins4Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitAnneeNmoins4Regex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitAnneeNmoins4Regex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitAnneeNmoins4Regex02
					, fournirKeyMessageSectionHitAnneeNmoins4Regex02()
					, MESSAGE_SECTIONHIT_ANNEENMOINS4_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitAnneeNmoins4Regex02()._____________
	

	
	/**
	 * Getter de la clé du messageSectionHitAnneeNmoins4Regex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.anneeNmoins4.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_ANNEENMOINS4_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitAnneeNmoins4Regex02() {
		return KEY_MESSAGE_SECTIONHIT_ANNEENMOINS4_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitAnneeNmoins4Regex02().__________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitAnneeNmoins4Regex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitAnneeNmoins4Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitAnneeNmoins4Regex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitAnneeNmoins4Regex02() 
													throws Exception {
		return fournirMessageSectionHitAnneeNmoins4Regex02();
	} // Fin de getMessageSectionHitAnneeNmoins4Regex02()._________________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitAnneeNmoins4Regex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitAnneeNmoins4Regex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitAnneeNmoins4Regex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitAnneeNmoins4Regex02
							, fournirKeyMessageSectionHitAnneeNmoins4Regex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitAnneeNmoins4Regex02(...).______________


	
	/* 94 - mjaNmoins4. ****************/
	/**
	 * retourne le messageSectionHitMjaNmoins4Renseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitMjaNmoins4Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitMjaNmoins4Renseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitMjaNmoins4Renseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitMjaNmoins4Renseigne01
					, fournirKeyMessageSectionHitMjaNmoins4Renseigne01()
					, MESSAGE_SECTIONHIT_MJANMOINS4_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitMjaNmoins4Renseigne01().___________
	

	
	/**
	 * Getter de la clé du messageSectionHitMjaNmoins4Renseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.mjaNmoins4.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_MJANMOINS4_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitMjaNmoins4Renseigne01() {
		return KEY_MESSAGE_SECTIONHIT_MJANMOINS4_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitMjaNmoins4Renseigne01().________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitMjaNmoins4Renseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitMjaNmoins4Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitMjaNmoins4Renseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitMjaNmoins4Renseigne01() 
											throws Exception {
		return fournirMessageSectionHitMjaNmoins4Renseigne01();
	} // Fin de getMessageSectionHitMjaNmoins4Renseigne01()._______________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitMjaNmoins4Renseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitMjaNmoins4Renseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitMjaNmoins4Renseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitMjaNmoins4Renseigne01
							, fournirKeyMessageSectionHitMjaNmoins4Renseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitMjaNmoins4Renseigne01(...).____________



	/**
	 * retourne le messageSectionHitMjaNmoins4Regex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitMjaNmoins4Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitMjaNmoins4Regex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitMjaNmoins4Regex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitMjaNmoins4Regex02
					, fournirKeyMessageSectionHitMjaNmoins4Regex02()
					, MESSAGE_SECTIONHIT_MJANMOINS4_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitMjaNmoins4Regex02()._______________
	

	
	/**
	 * Getter de la clé du messageSectionHitMjaNmoins4Regex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.mjaNmoins4.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_MJANMOINS4_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitMjaNmoins4Regex02() {
		return KEY_MESSAGE_SECTIONHIT_MJANMOINS4_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitMjaNmoins4Regex02().____________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitMjaNmoins4Regex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitMjaNmoins4Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitMjaNmoins4Regex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitMjaNmoins4Regex02() 
													throws Exception {
		return fournirMessageSectionHitMjaNmoins4Regex02();
	} // Fin de getMessageSectionHitMjaNmoins4Regex02().___________________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitMjaNmoins4Regex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitMjaNmoins4Regex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitMjaNmoins4Regex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitMjaNmoins4Regex02
							, fournirKeyMessageSectionHitMjaNmoins4Regex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitMjaNmoins4Regex02(...).________________



	/**
	 * retourne le messageSectionHitMjaNmoins4Numerique03 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitMjaNmoins4Numerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitMjaNmoins4Numerique03 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitMjaNmoins4Numerique03() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitMjaNmoins4Numerique03
					, fournirKeyMessageSectionHitMjaNmoins4Numerique03()
					, MESSAGE_SECTIONHIT_MJANMOINS4_NUMERIQUE_03_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitMjaNmoins4Numerique03().___________
	

	
	/**
	 * Getter de la clé du messageSectionHitMjaNmoins4Numerique03 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.prOrigine.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_MJANMOINS4_NUMERIQUE_03 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitMjaNmoins4Numerique03() {
		return KEY_MESSAGE_SECTIONHIT_MJANMOINS4_NUMERIQUE_03;
	} // Fin de fournirKeyMessageSectionHitMjaNmoins4Numerique03().________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitMjaNmoins4Numerique03 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitMjaNmoins4Numerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitMjaNmoins4Numerique03 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitMjaNmoins4Numerique03() 
													throws Exception {
		return fournirMessageSectionHitMjaNmoins4Numerique03();
	} // Fin de getMessageSectionHitMjaNmoins4Numerique03()._______________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitMjaNmoins4Numerique03 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitMjaNmoins4Numerique03.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitMjaNmoins4Numerique03(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitMjaNmoins4Numerique03
							, fournirKeyMessageSectionHitMjaNmoins4Numerique03());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitMjaNmoins4Numerique03(...).____________


	
	/* 95 - typeComptageNmoins4. ****************/
	/**
	 * retourne le messageSectionHitTypeComptageNmoins4Renseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitTypeComptageNmoins4Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitTypeComptageNmoins4Renseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitTypeComptageNmoins4Renseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitTypeComptageNmoins4Renseigne01
					, fournirKeyMessageSectionHitTypeComptageNmoins4Renseigne01()
					, MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS4_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitTypeComptageNmoins4Renseigne01().__
	

	
	/**
	 * Getter de la clé du messageSectionHitTypeComptageNmoins4Renseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.typeComptageNmoins4.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS4_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitTypeComptageNmoins4Renseigne01() {
		return KEY_MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS4_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitTypeComptageNmoins4Renseigne01().



	/**
	 * Getter du <b>SINGLETON de messageSectionHitTypeComptageNmoins4Renseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitTypeComptageNmoins4Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitTypeComptageNmoins4Renseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitTypeComptageNmoins4Renseigne01() 
											throws Exception {
		return fournirMessageSectionHitTypeComptageNmoins4Renseigne01();
	} // Fin de getMessageSectionHitTypeComptageNmoins4Renseigne01().______
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitTypeComptageNmoins4Renseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitTypeComptageNmoins4Renseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitTypeComptageNmoins4Renseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitTypeComptageNmoins4Renseigne01
							, fournirKeyMessageSectionHitTypeComptageNmoins4Renseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitTypeComptageNmoins4Renseigne01(...).___



	/**
	 * retourne le messageSectionHitTypeComptageNmoins4Regex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitTypeComptageNmoins4Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitTypeComptageNmoins4Regex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitTypeComptageNmoins4Regex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitTypeComptageNmoins4Regex02
					, fournirKeyMessageSectionHitTypeComptageNmoins4Regex02()
					, MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS4_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitTypeComptageNmoins4Regex02().______
	

	
	/**
	 * Getter de la clé du messageSectionHitTypeComptageNmoins4Regex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.typeComptageNmoins4.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS4_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitTypeComptageNmoins4Regex02() {
		return KEY_MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS4_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitTypeComptageNmoins4Regex02().___



	/**
	 * Getter du <b>SINGLETON de messageSectionHitTypeComptageNmoins4Regex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitTypeComptageNmoins4Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitTypeComptageNmoins4Regex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitTypeComptageNmoins4Regex02() 
													throws Exception {
		return fournirMessageSectionHitTypeComptageNmoins4Regex02();
	} // Fin de getMessageSectionHitTypeComptageNmoins4Regex02().__________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitTypeComptageNmoins4Regex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitTypeComptageNmoins4Regex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitTypeComptageNmoins4Regex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitTypeComptageNmoins4Regex02
							, fournirKeyMessageSectionHitTypeComptageNmoins4Regex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitTypeComptageNmoins4Regex02(...)._______
	


	/**
	 * retourne le messageSectionHitTypeComptageNmoins4Nomenclature03 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitTypeComptageNmoins4Nomenclature03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitTypeComptageNmoins4Nomenclature03 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitTypeComptageNmoins4Nomenclature03() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitTypeComptageNmoins4Nomenclature03
					, fournirKeyMessageSectionHitTypeComptageNmoins4Nomenclature03()
					, MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS4_NOMENCLATURE_03_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitTypeComptageNmoins4Nomenclature03().
	

	
	/**
	 * Getter de la clé du messageSectionHitTypeComptageNmoins4Nomenclature03 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.typeComptageNmoins4.nomenclature".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS4_NOMENCLATURE_03 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitTypeComptageNmoins4Nomenclature03() {
		return KEY_MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS4_NOMENCLATURE_03;
	} // Fin de fournirKeyMessageSectionHitTypeComptageNmoins4Nomenclature03().



	/**
	 * Getter du <b>SINGLETON de messageSectionHitTypeComptageNmoins4Nomenclature03 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitTypeComptageNmoins4Nomenclature03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitTypeComptageNmoins4Nomenclature03 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitTypeComptageNmoins4Nomenclature03() 
													throws Exception {
		return fournirMessageSectionHitTypeComptageNmoins4Nomenclature03();
	} // Fin de getMessageSectionHitTypeComptageNmoins4Nomenclature03().___
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitTypeComptageNmoins4Nomenclature03 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitTypeComptageNmoins4Nomenclature03.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitTypeComptageNmoins4Nomenclature03(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitTypeComptageNmoins4Nomenclature03
							, fournirKeyMessageSectionHitTypeComptageNmoins4Nomenclature03());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitTypeComptageNmoins4Nomenclature03(...).


	
	/* 96 - modeCalculNmoins4. ****************/
	/**
	 * retourne le messageSectionHitModeCalculNmoins4Renseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitModeCalculNmoins4Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitModeCalculNmoins4Renseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitModeCalculNmoins4Renseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitModeCalculNmoins4Renseigne01
					, fournirKeyMessageSectionHitModeCalculNmoins4Renseigne01()
					, MESSAGE_SECTIONHIT_MODECALCULNMOINS4_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitModeCalculNmoins4Renseigne01().____
	

	
	/**
	 * Getter de la clé du messageSectionHitModeCalculNmoins4Renseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.modeCalculNmoins4.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_MODECALCULNMOINS4_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitModeCalculNmoins4Renseigne01() {
		return KEY_MESSAGE_SECTIONHIT_MODECALCULNMOINS4_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitModeCalculNmoins4Renseigne01()._



	/**
	 * Getter du <b>SINGLETON de messageSectionHitModeCalculNmoins4Renseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitModeCalculNmoins4Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitModeCalculNmoins4Renseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitModeCalculNmoins4Renseigne01() 
											throws Exception {
		return fournirMessageSectionHitModeCalculNmoins4Renseigne01();
	} // Fin de getMessageSectionHitModeCalculNmoins4Renseigne01().________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitModeCalculNmoins4Renseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitModeCalculNmoins4Renseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitModeCalculNmoins4Renseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitModeCalculNmoins4Renseigne01
							, fournirKeyMessageSectionHitModeCalculNmoins4Renseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitModeCalculNmoins4Renseigne01(...)._____



	/**
	 * retourne le messageSectionHitModeCalculNmoins4Regex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitModeCalculNmoins4Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitModeCalculNmoins4Regex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitModeCalculNmoins4Regex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitModeCalculNmoins4Regex02
					, fournirKeyMessageSectionHitModeCalculNmoins4Regex02()
					, MESSAGE_SECTIONHIT_MODECALCULNMOINS4_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitModeCalculNmoins4Regex02().________
	

	
	/**
	 * Getter de la clé du messageSectionHitModeCalculNmoins4Regex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.modeCalculNmoins4.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_MODECALCULNMOINS4_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitModeCalculNmoins4Regex02() {
		return KEY_MESSAGE_SECTIONHIT_MODECALCULNMOINS4_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitModeCalculNmoins4Regex02()._____



	/**
	 * Getter du <b>SINGLETON de messageSectionHitModeCalculNmoins4Regex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitModeCalculNmoins4Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitModeCalculNmoins4Regex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitModeCalculNmoins4Regex02() 
													throws Exception {
		return fournirMessageSectionHitModeCalculNmoins4Regex02();
	} // Fin de getMessageSectionHitModeCalculNmoins4Regex02().____________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitModeCalculNmoins4Regex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitModeCalculNmoins4Regex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitModeCalculNmoins4Regex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitModeCalculNmoins4Regex02
							, fournirKeyMessageSectionHitModeCalculNmoins4Regex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitModeCalculNmoins4Regex02(...)._________


	
	/* 97 - pcPLNmoins4. ****************/
	/**
	 * retourne le messageSectionHitPcPLNmoins4Renseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitPcPLNmoins4Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitPcPLNmoins4Renseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitPcPLNmoins4Renseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitPcPLNmoins4Renseigne01
					, fournirKeyMessageSectionHitPcPLNmoins4Renseigne01()
					, MESSAGE_SECTIONHIT_PCPLNMOINS4_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitPcPLNmoins4Renseigne01().__________
	

	
	/**
	 * Getter de la clé du messageSectionHitPcPLNmoins4Renseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.pcPLNmoins4.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_PCPLNMOINS4_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitPcPLNmoins4Renseigne01() {
		return KEY_MESSAGE_SECTIONHIT_PCPLNMOINS4_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitPcPLNmoins4Renseigne01()._______



	/**
	 * Getter du <b>SINGLETON de messageSectionHitPcPLNmoins4Renseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitPcPLNmoins4Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitPcPLNmoins4Renseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitPcPLNmoins4Renseigne01() 
											throws Exception {
		return fournirMessageSectionHitPcPLNmoins4Renseigne01();
	} // Fin de getMessageSectionHitPcPLNmoins4Renseigne01().______________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitPcPLNmoins4Renseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitPcPLNmoins4Renseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitPcPLNmoins4Renseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitPcPLNmoins4Renseigne01
							, fournirKeyMessageSectionHitPcPLNmoins4Renseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitPcPLNmoins4Renseigne01(...).___________



	/**
	 * retourne le messageSectionHitPcPLNmoins4Regex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitPcPLNmoins4Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitPcPLNmoins4Regex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitPcPLNmoins4Regex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitPcPLNmoins4Regex02
					, fournirKeyMessageSectionHitPcPLNmoins4Regex02()
					, MESSAGE_SECTIONHIT_PCPLNMOINS4_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitPcPLNmoins4Regex02().______________
	

	
	/**
	 * Getter de la clé du messageSectionHitPcPLNmoins4Regex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.pcPLNmoins4.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_PCPLNMOINS4_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitPcPLNmoins4Regex02() {
		return KEY_MESSAGE_SECTIONHIT_PCPLNMOINS4_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitPcPLNmoins4Regex02().___________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitPcPLNmoins4Regex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitPcPLNmoins4Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitPcPLNmoins4Regex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitPcPLNmoins4Regex02() 
													throws Exception {
		return fournirMessageSectionHitPcPLNmoins4Regex02();
	} // Fin de getMessageSectionHitPcPLNmoins4Regex02().__________________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitPcPLNmoins4Regex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitPcPLNmoins4Regex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitPcPLNmoins4Regex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitPcPLNmoins4Regex02
							, fournirKeyMessageSectionHitPcPLNmoins4Regex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitPcPLNmoins4Regex02(...)._______________



	/**
	 * retourne le messageSectionHitPcPLNmoins4Numerique03 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitPcPLNmoins4Numerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitPcPLNmoins4Numerique03 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitPcPLNmoins4Numerique03() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitPcPLNmoins4Numerique03
					, fournirKeyMessageSectionHitPcPLNmoins4Numerique03()
					, MESSAGE_SECTIONHIT_PCPLNMOINS4_NUMERIQUE_03_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitPcPLNmoins4Numerique03().__________
	

	
	/**
	 * Getter de la clé du messageSectionHitPcPLNmoins4Numerique03 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.prOrigine.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_PCPLNMOINS4_NUMERIQUE_03 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitPcPLNmoins4Numerique03() {
		return KEY_MESSAGE_SECTIONHIT_PCPLNMOINS4_NUMERIQUE_03;
	} // Fin de fournirKeyMessageSectionHitPcPLNmoins4Numerique03()._______



	/**
	 * Getter du <b>SINGLETON de messageSectionHitPcPLNmoins4Numerique03 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitPcPLNmoins4Numerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitPcPLNmoins4Numerique03 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitPcPLNmoins4Numerique03() 
													throws Exception {
		return fournirMessageSectionHitPcPLNmoins4Numerique03();
	} // Fin de getMessageSectionHitPcPLNmoins4Numerique03().______________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitPcPLNmoins4Numerique03 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitPcPLNmoins4Numerique03.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitPcPLNmoins4Numerique03(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitPcPLNmoins4Numerique03
							, fournirKeyMessageSectionHitPcPLNmoins4Numerique03());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitPcPLNmoins4Numerique03(...).___________	


	
	/* 98 - evaluationPLNmoins4. ****************/
	/**
	 * retourne le messageSectionHitEvaluationPLNmoins4Renseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitEvaluationPLNmoins4Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitEvaluationPLNmoins4Renseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitEvaluationPLNmoins4Renseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitEvaluationPLNmoins4Renseigne01
					, fournirKeyMessageSectionHitEvaluationPLNmoins4Renseigne01()
					, MESSAGE_SECTIONHIT_EVALUATIONPLNMOINS4_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitEvaluationPLNmoins4Renseigne01().__
	

	
	/**
	 * Getter de la clé du messageSectionHitEvaluationPLNmoins4Renseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.evaluationPLNmoins4.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_EVALUATIONPLNMOINS4_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitEvaluationPLNmoins4Renseigne01() {
		return KEY_MESSAGE_SECTIONHIT_EVALUATIONPLNMOINS4_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitEvaluationPLNmoins4Renseigne01().



	/**
	 * Getter du <b>SINGLETON de messageSectionHitEvaluationPLNmoins4Renseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitEvaluationPLNmoins4Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitEvaluationPLNmoins4Renseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitEvaluationPLNmoins4Renseigne01() 
											throws Exception {
		return fournirMessageSectionHitEvaluationPLNmoins4Renseigne01();
	} // Fin de getMessageSectionHitEvaluationPLNmoins4Renseigne01().______
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitEvaluationPLNmoins4Renseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitEvaluationPLNmoins4Renseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitEvaluationPLNmoins4Renseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitEvaluationPLNmoins4Renseigne01
							, fournirKeyMessageSectionHitEvaluationPLNmoins4Renseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitEvaluationPLNmoins4Renseigne01(...).___



	/**
	 * retourne le messageSectionHitEvaluationPLNmoins4Regex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitEvaluationPLNmoins4Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitEvaluationPLNmoins4Regex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitEvaluationPLNmoins4Regex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitEvaluationPLNmoins4Regex02
					, fournirKeyMessageSectionHitEvaluationPLNmoins4Regex02()
					, MESSAGE_SECTIONHIT_EVALUATIONPLNMOINS4_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitEvaluationPLNmoins4Regex02().______
	

	
	/**
	 * Getter de la clé du messageSectionHitEvaluationPLNmoins4Regex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.evaluationPLNmoins4.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_EVALUATIONPLNMOINS4_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitEvaluationPLNmoins4Regex02() {
		return KEY_MESSAGE_SECTIONHIT_EVALUATIONPLNMOINS4_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitEvaluationPLNmoins4Regex02().___



	/**
	 * Getter du <b>SINGLETON de messageSectionHitEvaluationPLNmoins4Regex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitEvaluationPLNmoins4Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitEvaluationPLNmoins4Regex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitEvaluationPLNmoins4Regex02() 
													throws Exception {
		return fournirMessageSectionHitEvaluationPLNmoins4Regex02();
	} // Fin de getMessageSectionHitEvaluationPLNmoins4Regex02().__________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitEvaluationPLNmoins4Regex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitEvaluationPLNmoins4Regex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitEvaluationPLNmoins4Regex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitEvaluationPLNmoins4Regex02
							, fournirKeyMessageSectionHitEvaluationPLNmoins4Regex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitEvaluationPLNmoins4Regex02(...)._______


	
	/* 99 - pcNuitAnnuelNmoins4. ****************/
	/**
	 * retourne le messageSectionHitPcNuitAnnuelNmoins4Renseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitAnnuelNmoins4Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitPcNuitAnnuelNmoins4Renseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitPcNuitAnnuelNmoins4Renseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitPcNuitAnnuelNmoins4Renseigne01
					, fournirKeyMessageSectionHitPcNuitAnnuelNmoins4Renseigne01()
					, MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS4_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitPcNuitAnnuelNmoins4Renseigne01().__
	

	
	/**
	 * Getter de la clé du messageSectionHitPcNuitAnnuelNmoins4Renseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.pcNuitAnnuelNmoins4.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS4_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitPcNuitAnnuelNmoins4Renseigne01() {
		return KEY_MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS4_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitPcNuitAnnuelNmoins4Renseigne01().



	/**
	 * Getter du <b>SINGLETON de messageSectionHitPcNuitAnnuelNmoins4Renseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitAnnuelNmoins4Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitPcNuitAnnuelNmoins4Renseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitPcNuitAnnuelNmoins4Renseigne01() 
											throws Exception {
		return fournirMessageSectionHitPcNuitAnnuelNmoins4Renseigne01();
	} // Fin de getMessageSectionHitPcNuitAnnuelNmoins4Renseigne01().______
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitPcNuitAnnuelNmoins4Renseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitPcNuitAnnuelNmoins4Renseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitPcNuitAnnuelNmoins4Renseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitPcNuitAnnuelNmoins4Renseigne01
							, fournirKeyMessageSectionHitPcNuitAnnuelNmoins4Renseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitPcNuitAnnuelNmoins4Renseigne01(...).___



	/**
	 * retourne le messageSectionHitPcNuitAnnuelNmoins4Regex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitAnnuelNmoins4Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitPcNuitAnnuelNmoins4Regex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitPcNuitAnnuelNmoins4Regex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitPcNuitAnnuelNmoins4Regex02
					, fournirKeyMessageSectionHitPcNuitAnnuelNmoins4Regex02()
					, MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS4_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitPcNuitAnnuelNmoins4Regex02().______
	

	
	/**
	 * Getter de la clé du messageSectionHitPcNuitAnnuelNmoins4Regex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.pcNuitAnnuelNmoins4.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS4_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitPcNuitAnnuelNmoins4Regex02() {
		return KEY_MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS4_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitPcNuitAnnuelNmoins4Regex02().___



	/**
	 * Getter du <b>SINGLETON de messageSectionHitPcNuitAnnuelNmoins4Regex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitAnnuelNmoins4Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitPcNuitAnnuelNmoins4Regex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitPcNuitAnnuelNmoins4Regex02() 
													throws Exception {
		return fournirMessageSectionHitPcNuitAnnuelNmoins4Regex02();
	} // Fin de getMessageSectionHitPcNuitAnnuelNmoins4Regex02().__________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitPcNuitAnnuelNmoins4Regex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitPcNuitAnnuelNmoins4Regex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitPcNuitAnnuelNmoins4Regex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitPcNuitAnnuelNmoins4Regex02
							, fournirKeyMessageSectionHitPcNuitAnnuelNmoins4Regex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitPcNuitAnnuelNmoins4Regex02(...)._______



	/**
	 * retourne le messageSectionHitPcNuitAnnuelNmoins4Numerique03 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitAnnuelNmoins4Numerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitPcNuitAnnuelNmoins4Numerique03 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitPcNuitAnnuelNmoins4Numerique03() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitPcNuitAnnuelNmoins4Numerique03
					, fournirKeyMessageSectionHitPcNuitAnnuelNmoins4Numerique03()
					, MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS4_NUMERIQUE_03_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitPcNuitAnnuelNmoins4Numerique03().__
	

	
	/**
	 * Getter de la clé du messageSectionHitPcNuitAnnuelNmoins4Numerique03 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.prOrigine.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS4_NUMERIQUE_03 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitPcNuitAnnuelNmoins4Numerique03() {
		return KEY_MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS4_NUMERIQUE_03;
	} // Fin de fournirKeyMessageSectionHitPcNuitAnnuelNmoins4Numerique03().
	


	/**
	 * Getter du <b>SINGLETON de messageSectionHitPcNuitAnnuelNmoins4Numerique03 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitAnnuelNmoins4Numerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitPcNuitAnnuelNmoins4Numerique03 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitPcNuitAnnuelNmoins4Numerique03() 
													throws Exception {
		return fournirMessageSectionHitPcNuitAnnuelNmoins4Numerique03();
	} // Fin de getMessageSectionHitPcNuitAnnuelNmoins4Numerique03().______
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitPcNuitAnnuelNmoins4Numerique03 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitPcNuitAnnuelNmoins4Numerique03.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitPcNuitAnnuelNmoins4Numerique03(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitPcNuitAnnuelNmoins4Numerique03
							, fournirKeyMessageSectionHitPcNuitAnnuelNmoins4Numerique03());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitPcNuitAnnuelNmoins4Numerique03(...).___


	
	/* 100 - indiceFiabiliteMjaNmoins4. ****************/
	/**
	 * retourne le messageSectionHitIndiceFiabiliteMjaNmoins4Renseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitIndiceFiabiliteMjaNmoins4Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitIndiceFiabiliteMjaNmoins4Renseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitIndiceFiabiliteMjaNmoins4Renseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitIndiceFiabiliteMjaNmoins4Renseigne01
					, fournirKeyMessageSectionHitIndiceFiabiliteMjaNmoins4Renseigne01()
					, MESSAGE_SECTIONHIT_INDICEFIABLITEMJANMOINS4_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitIndiceFiabiliteMjaNmoins4Renseigne01().
	

	
	/**
	 * Getter de la clé du messageSectionHitIndiceFiabiliteMjaNmoins4Renseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.indiceFiabiliteMjaNmoins4.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_INDICEFIABLITEMJANMOINS4_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitIndiceFiabiliteMjaNmoins4Renseigne01() {
		return KEY_MESSAGE_SECTIONHIT_INDICEFIABLITEMJANMOINS4_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitIndiceFiabiliteMjaNmoins4Renseigne01().



	/**
	 * Getter du <b>SINGLETON de messageSectionHitIndiceFiabiliteMjaNmoins4Renseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitIndiceFiabiliteMjaNmoins4Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitIndiceFiabiliteMjaNmoins4Renseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitIndiceFiabiliteMjaNmoins4Renseigne01() 
											throws Exception {
		return fournirMessageSectionHitIndiceFiabiliteMjaNmoins4Renseigne01();
	} // Fin de getMessageSectionHitIndiceFiabiliteMjaNmoins4Renseigne01().
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitIndiceFiabiliteMjaNmoins4Renseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitIndiceFiabiliteMjaNmoins4Renseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitIndiceFiabiliteMjaNmoins4Renseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitIndiceFiabiliteMjaNmoins4Renseigne01
							, fournirKeyMessageSectionHitIndiceFiabiliteMjaNmoins4Renseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitIndiceFiabiliteMjaNmoins4Renseigne01(...).



	/**
	 * retourne le messageSectionHitIndiceFiabiliteMjaNmoins4Regex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitIndiceFiabiliteMjaNmoins4Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitIndiceFiabiliteMjaNmoins4Regex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitIndiceFiabiliteMjaNmoins4Regex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitIndiceFiabiliteMjaNmoins4Regex02
					, fournirKeyMessageSectionHitIndiceFiabiliteMjaNmoins4Regex02()
					, MESSAGE_SECTIONHIT_INDICEFIABLITEMJANMOINS4_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitIndiceFiabiliteMjaNmoins4Regex02().
	

	
	/**
	 * Getter de la clé du messageSectionHitIndiceFiabiliteMjaNmoins4Regex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.indiceFiabiliteMjaNmoins4.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_INDICEFIABLITEMJANMOINS4_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitIndiceFiabiliteMjaNmoins4Regex02() {
		return KEY_MESSAGE_SECTIONHIT_INDICEFIABLITEMJANMOINS4_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitIndiceFiabiliteMjaNmoins4Regex02().



	/**
	 * Getter du <b>SINGLETON de messageSectionHitIndiceFiabiliteMjaNmoins4Regex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitIndiceFiabiliteMjaNmoins4Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitIndiceFiabiliteMjaNmoins4Regex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitIndiceFiabiliteMjaNmoins4Regex02() 
													throws Exception {
		return fournirMessageSectionHitIndiceFiabiliteMjaNmoins4Regex02();
	} // Fin de getMessageSectionHitIndiceFiabiliteMjaNmoins4Regex02().____
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitIndiceFiabiliteMjaNmoins4Regex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitIndiceFiabiliteMjaNmoins4Regex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitIndiceFiabiliteMjaNmoins4Regex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitIndiceFiabiliteMjaNmoins4Regex02
							, fournirKeyMessageSectionHitIndiceFiabiliteMjaNmoins4Regex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitIndiceFiabiliteMjaNmoins4Regex02(...)._



	
	/* 101 - anneeNmoins5. ****************/
	/**
	 * retourne le messageSectionHitAnneeNmoins5Renseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitAnneeNmoins5Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitAnneeNmoins5Renseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitAnneeNmoins5Renseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitAnneeNmoins5Renseigne01
					, fournirKeyMessageSectionHitAnneeNmoins5Renseigne01()
					, MESSAGE_SECTIONHIT_ANNEENMOINS5_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitAnneeNmoins5Renseigne01()._________
	

	
	/**
	 * Getter de la clé du messageSectionHitAnneeNmoins5Renseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.anneeNmoins5.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_ANNEENMOINS5_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitAnneeNmoins5Renseigne01() {
		return KEY_MESSAGE_SECTIONHIT_ANNEENMOINS5_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitAnneeNmoins5Renseigne01().______



	/**
	 * Getter du <b>SINGLETON de messageSectionHitAnneeNmoins5Renseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitAnneeNmoins5Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitAnneeNmoins5Renseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitAnneeNmoins5Renseigne01() 
											throws Exception {
		return fournirMessageSectionHitAnneeNmoins5Renseigne01();
	} // Fin de getMessageSectionHitAnneeNmoins5Renseigne01()._____________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitAnneeNmoins5Renseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitAnneeNmoins5Renseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitAnneeNmoins5Renseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitAnneeNmoins5Renseigne01
							, fournirKeyMessageSectionHitAnneeNmoins5Renseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitAnneeNmoins5Renseigne01(...).__________



	/**
	 * retourne le messageSectionHitAnneeNmoins5Regex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitAnneeNmoins5Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitAnneeNmoins5Regex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitAnneeNmoins5Regex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitAnneeNmoins5Regex02
					, fournirKeyMessageSectionHitAnneeNmoins5Regex02()
					, MESSAGE_SECTIONHIT_ANNEENMOINS5_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitAnneeNmoins5Regex02()._____________
	

	
	/**
	 * Getter de la clé du messageSectionHitAnneeNmoins5Regex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.anneeNmoins5.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_ANNEENMOINS5_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitAnneeNmoins5Regex02() {
		return KEY_MESSAGE_SECTIONHIT_ANNEENMOINS5_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitAnneeNmoins5Regex02().__________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitAnneeNmoins5Regex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitAnneeNmoins5Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitAnneeNmoins5Regex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitAnneeNmoins5Regex02() 
													throws Exception {
		return fournirMessageSectionHitAnneeNmoins5Regex02();
	} // Fin de getMessageSectionHitAnneeNmoins5Regex02()._________________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitAnneeNmoins5Regex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitAnneeNmoins5Regex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitAnneeNmoins5Regex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitAnneeNmoins5Regex02
							, fournirKeyMessageSectionHitAnneeNmoins5Regex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitAnneeNmoins5Regex02(...).______________


	
	/* 102 - mjaNmoins5. ****************/
	/**
	 * retourne le messageSectionHitMjaNmoins5Renseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitMjaNmoins5Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitMjaNmoins5Renseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitMjaNmoins5Renseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitMjaNmoins5Renseigne01
					, fournirKeyMessageSectionHitMjaNmoins5Renseigne01()
					, MESSAGE_SECTIONHIT_MJANMOINS5_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitMjaNmoins5Renseigne01().___________
	

	
	/**
	 * Getter de la clé du messageSectionHitMjaNmoins5Renseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.mjaNmoins5.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_MJANMOINS5_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitMjaNmoins5Renseigne01() {
		return KEY_MESSAGE_SECTIONHIT_MJANMOINS5_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitMjaNmoins5Renseigne01().________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitMjaNmoins5Renseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitMjaNmoins5Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitMjaNmoins5Renseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitMjaNmoins5Renseigne01() 
											throws Exception {
		return fournirMessageSectionHitMjaNmoins5Renseigne01();
	} // Fin de getMessageSectionHitMjaNmoins5Renseigne01()._______________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitMjaNmoins5Renseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitMjaNmoins5Renseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitMjaNmoins5Renseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitMjaNmoins5Renseigne01
							, fournirKeyMessageSectionHitMjaNmoins5Renseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitMjaNmoins5Renseigne01(...).____________



	/**
	 * retourne le messageSectionHitMjaNmoins5Regex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitMjaNmoins5Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitMjaNmoins5Regex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitMjaNmoins5Regex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitMjaNmoins5Regex02
					, fournirKeyMessageSectionHitMjaNmoins5Regex02()
					, MESSAGE_SECTIONHIT_MJANMOINS5_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitMjaNmoins5Regex02()._______________
	

	
	/**
	 * Getter de la clé du messageSectionHitMjaNmoins5Regex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.mjaNmoins5.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_MJANMOINS5_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitMjaNmoins5Regex02() {
		return KEY_MESSAGE_SECTIONHIT_MJANMOINS5_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitMjaNmoins5Regex02().____________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitMjaNmoins5Regex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitMjaNmoins5Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitMjaNmoins5Regex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitMjaNmoins5Regex02() 
													throws Exception {
		return fournirMessageSectionHitMjaNmoins5Regex02();
	} // Fin de getMessageSectionHitMjaNmoins5Regex02().___________________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitMjaNmoins5Regex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitMjaNmoins5Regex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitMjaNmoins5Regex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitMjaNmoins5Regex02
							, fournirKeyMessageSectionHitMjaNmoins5Regex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitMjaNmoins5Regex02(...).________________



	/**
	 * retourne le messageSectionHitMjaNmoins5Numerique03 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitMjaNmoins5Numerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitMjaNmoins5Numerique03 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitMjaNmoins5Numerique03() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitMjaNmoins5Numerique03
					, fournirKeyMessageSectionHitMjaNmoins5Numerique03()
					, MESSAGE_SECTIONHIT_MJANMOINS5_NUMERIQUE_03_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitMjaNmoins5Numerique03().___________
	

	
	/**
	 * Getter de la clé du messageSectionHitMjaNmoins5Numerique03 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.prOrigine.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_MJANMOINS5_NUMERIQUE_03 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitMjaNmoins5Numerique03() {
		return KEY_MESSAGE_SECTIONHIT_MJANMOINS5_NUMERIQUE_03;
	} // Fin de fournirKeyMessageSectionHitMjaNmoins5Numerique03().________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitMjaNmoins5Numerique03 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitMjaNmoins5Numerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitMjaNmoins5Numerique03 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitMjaNmoins5Numerique03() 
													throws Exception {
		return fournirMessageSectionHitMjaNmoins5Numerique03();
	} // Fin de getMessageSectionHitMjaNmoins5Numerique03()._______________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitMjaNmoins5Numerique03 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitMjaNmoins5Numerique03.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitMjaNmoins5Numerique03(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitMjaNmoins5Numerique03
							, fournirKeyMessageSectionHitMjaNmoins5Numerique03());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitMjaNmoins5Numerique03(...).____________


	
	/* 103 - typeComptageNmoins5. ****************/
	/**
	 * retourne le messageSectionHitTypeComptageNmoins5Renseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitTypeComptageNmoins5Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitTypeComptageNmoins5Renseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitTypeComptageNmoins5Renseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitTypeComptageNmoins5Renseigne01
					, fournirKeyMessageSectionHitTypeComptageNmoins5Renseigne01()
					, MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS5_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitTypeComptageNmoins5Renseigne01().__
	

	
	/**
	 * Getter de la clé du messageSectionHitTypeComptageNmoins5Renseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.typeComptageNmoins5.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS5_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitTypeComptageNmoins5Renseigne01() {
		return KEY_MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS5_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitTypeComptageNmoins5Renseigne01().



	/**
	 * Getter du <b>SINGLETON de messageSectionHitTypeComptageNmoins5Renseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitTypeComptageNmoins5Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitTypeComptageNmoins5Renseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitTypeComptageNmoins5Renseigne01() 
											throws Exception {
		return fournirMessageSectionHitTypeComptageNmoins5Renseigne01();
	} // Fin de getMessageSectionHitTypeComptageNmoins5Renseigne01().______
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitTypeComptageNmoins5Renseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitTypeComptageNmoins5Renseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitTypeComptageNmoins5Renseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitTypeComptageNmoins5Renseigne01
							, fournirKeyMessageSectionHitTypeComptageNmoins5Renseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitTypeComptageNmoins5Renseigne01(...).___



	/**
	 * retourne le messageSectionHitTypeComptageNmoins5Regex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitTypeComptageNmoins5Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitTypeComptageNmoins5Regex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitTypeComptageNmoins5Regex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitTypeComptageNmoins5Regex02
					, fournirKeyMessageSectionHitTypeComptageNmoins5Regex02()
					, MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS5_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitTypeComptageNmoins5Regex02().______
	

	
	/**
	 * Getter de la clé du messageSectionHitTypeComptageNmoins5Regex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.typeComptageNmoins5.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS5_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitTypeComptageNmoins5Regex02() {
		return KEY_MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS5_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitTypeComptageNmoins5Regex02().___



	/**
	 * Getter du <b>SINGLETON de messageSectionHitTypeComptageNmoins5Regex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitTypeComptageNmoins5Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitTypeComptageNmoins5Regex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitTypeComptageNmoins5Regex02() 
													throws Exception {
		return fournirMessageSectionHitTypeComptageNmoins5Regex02();
	} // Fin de getMessageSectionHitTypeComptageNmoins5Regex02().__________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitTypeComptageNmoins5Regex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitTypeComptageNmoins5Regex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitTypeComptageNmoins5Regex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitTypeComptageNmoins5Regex02
							, fournirKeyMessageSectionHitTypeComptageNmoins5Regex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitTypeComptageNmoins5Regex02(...)._______
	


	/**
	 * retourne le messageSectionHitTypeComptageNmoins5Nomenclature03 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitTypeComptageNmoins5Nomenclature03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitTypeComptageNmoins5Nomenclature03 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitTypeComptageNmoins5Nomenclature03() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitTypeComptageNmoins5Nomenclature03
					, fournirKeyMessageSectionHitTypeComptageNmoins5Nomenclature03()
					, MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS5_NOMENCLATURE_03_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitTypeComptageNmoins5Nomenclature03().
	

	
	/**
	 * Getter de la clé du messageSectionHitTypeComptageNmoins5Nomenclature03 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.typeComptageNmoins5.nomenclature".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS5_NOMENCLATURE_03 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitTypeComptageNmoins5Nomenclature03() {
		return KEY_MESSAGE_SECTIONHIT_TYPECOMPTAGENMOINS5_NOMENCLATURE_03;
	} // Fin de fournirKeyMessageSectionHitTypeComptageNmoins5Nomenclature03().



	/**
	 * Getter du <b>SINGLETON de messageSectionHitTypeComptageNmoins5Nomenclature03 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitTypeComptageNmoins5Nomenclature03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitTypeComptageNmoins5Nomenclature03 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitTypeComptageNmoins5Nomenclature03() 
													throws Exception {
		return fournirMessageSectionHitTypeComptageNmoins5Nomenclature03();
	} // Fin de getMessageSectionHitTypeComptageNmoins5Nomenclature03().___
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitTypeComptageNmoins5Nomenclature03 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitTypeComptageNmoins5Nomenclature03.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitTypeComptageNmoins5Nomenclature03(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitTypeComptageNmoins5Nomenclature03
							, fournirKeyMessageSectionHitTypeComptageNmoins5Nomenclature03());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitTypeComptageNmoins5Nomenclature03(...).


	
	/* 104 - modeCalculNmoins5. ****************/
	/**
	 * retourne le messageSectionHitModeCalculNmoins5Renseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitModeCalculNmoins5Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitModeCalculNmoins5Renseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitModeCalculNmoins5Renseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitModeCalculNmoins5Renseigne01
					, fournirKeyMessageSectionHitModeCalculNmoins5Renseigne01()
					, MESSAGE_SECTIONHIT_MODECALCULNMOINS5_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitModeCalculNmoins5Renseigne01().____
	

	
	/**
	 * Getter de la clé du messageSectionHitModeCalculNmoins5Renseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.modeCalculNmoins5.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_MODECALCULNMOINS5_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitModeCalculNmoins5Renseigne01() {
		return KEY_MESSAGE_SECTIONHIT_MODECALCULNMOINS5_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitModeCalculNmoins5Renseigne01()._



	/**
	 * Getter du <b>SINGLETON de messageSectionHitModeCalculNmoins5Renseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitModeCalculNmoins5Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitModeCalculNmoins5Renseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitModeCalculNmoins5Renseigne01() 
											throws Exception {
		return fournirMessageSectionHitModeCalculNmoins5Renseigne01();
	} // Fin de getMessageSectionHitModeCalculNmoins5Renseigne01().________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitModeCalculNmoins5Renseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitModeCalculNmoins5Renseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitModeCalculNmoins5Renseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitModeCalculNmoins5Renseigne01
							, fournirKeyMessageSectionHitModeCalculNmoins5Renseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitModeCalculNmoins5Renseigne01(...)._____



	/**
	 * retourne le messageSectionHitModeCalculNmoins5Regex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitModeCalculNmoins5Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitModeCalculNmoins5Regex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitModeCalculNmoins5Regex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitModeCalculNmoins5Regex02
					, fournirKeyMessageSectionHitModeCalculNmoins5Regex02()
					, MESSAGE_SECTIONHIT_MODECALCULNMOINS5_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitModeCalculNmoins5Regex02().________
	

	
	/**
	 * Getter de la clé du messageSectionHitModeCalculNmoins5Regex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.modeCalculNmoins5.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_MODECALCULNMOINS5_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitModeCalculNmoins5Regex02() {
		return KEY_MESSAGE_SECTIONHIT_MODECALCULNMOINS5_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitModeCalculNmoins5Regex02()._____



	/**
	 * Getter du <b>SINGLETON de messageSectionHitModeCalculNmoins5Regex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitModeCalculNmoins5Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitModeCalculNmoins5Regex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitModeCalculNmoins5Regex02() 
													throws Exception {
		return fournirMessageSectionHitModeCalculNmoins5Regex02();
	} // Fin de getMessageSectionHitModeCalculNmoins5Regex02().____________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitModeCalculNmoins5Regex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitModeCalculNmoins5Regex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitModeCalculNmoins5Regex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitModeCalculNmoins5Regex02
							, fournirKeyMessageSectionHitModeCalculNmoins5Regex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitModeCalculNmoins5Regex02(...)._________


	
	/* 105 - pcPLNmoins5. ****************/
	/**
	 * retourne le messageSectionHitPcPLNmoins5Renseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitPcPLNmoins5Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitPcPLNmoins5Renseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitPcPLNmoins5Renseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitPcPLNmoins5Renseigne01
					, fournirKeyMessageSectionHitPcPLNmoins5Renseigne01()
					, MESSAGE_SECTIONHIT_PCPLNMOINS5_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitPcPLNmoins5Renseigne01().__________
	

	
	/**
	 * Getter de la clé du messageSectionHitPcPLNmoins5Renseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.pcPLNmoins5.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_PCPLNMOINS5_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitPcPLNmoins5Renseigne01() {
		return KEY_MESSAGE_SECTIONHIT_PCPLNMOINS5_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitPcPLNmoins5Renseigne01()._______



	/**
	 * Getter du <b>SINGLETON de messageSectionHitPcPLNmoins5Renseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitPcPLNmoins5Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitPcPLNmoins5Renseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitPcPLNmoins5Renseigne01() 
											throws Exception {
		return fournirMessageSectionHitPcPLNmoins5Renseigne01();
	} // Fin de getMessageSectionHitPcPLNmoins5Renseigne01().______________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitPcPLNmoins5Renseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitPcPLNmoins5Renseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitPcPLNmoins5Renseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitPcPLNmoins5Renseigne01
							, fournirKeyMessageSectionHitPcPLNmoins5Renseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitPcPLNmoins5Renseigne01(...).___________



	/**
	 * retourne le messageSectionHitPcPLNmoins5Regex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitPcPLNmoins5Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitPcPLNmoins5Regex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitPcPLNmoins5Regex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitPcPLNmoins5Regex02
					, fournirKeyMessageSectionHitPcPLNmoins5Regex02()
					, MESSAGE_SECTIONHIT_PCPLNMOINS5_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitPcPLNmoins5Regex02().______________
	

	
	/**
	 * Getter de la clé du messageSectionHitPcPLNmoins5Regex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.pcPLNmoins5.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_PCPLNMOINS5_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitPcPLNmoins5Regex02() {
		return KEY_MESSAGE_SECTIONHIT_PCPLNMOINS5_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitPcPLNmoins5Regex02().___________



	/**
	 * Getter du <b>SINGLETON de messageSectionHitPcPLNmoins5Regex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitPcPLNmoins5Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitPcPLNmoins5Regex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitPcPLNmoins5Regex02() 
													throws Exception {
		return fournirMessageSectionHitPcPLNmoins5Regex02();
	} // Fin de getMessageSectionHitPcPLNmoins5Regex02().__________________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitPcPLNmoins5Regex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitPcPLNmoins5Regex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitPcPLNmoins5Regex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitPcPLNmoins5Regex02
							, fournirKeyMessageSectionHitPcPLNmoins5Regex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitPcPLNmoins5Regex02(...)._______________



	/**
	 * retourne le messageSectionHitPcPLNmoins5Numerique03 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitPcPLNmoins5Numerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitPcPLNmoins5Numerique03 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitPcPLNmoins5Numerique03() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitPcPLNmoins5Numerique03
					, fournirKeyMessageSectionHitPcPLNmoins5Numerique03()
					, MESSAGE_SECTIONHIT_PCPLNMOINS5_NUMERIQUE_03_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitPcPLNmoins5Numerique03().__________
	

	
	/**
	 * Getter de la clé du messageSectionHitPcPLNmoins5Numerique03 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.prOrigine.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_PCPLNMOINS5_NUMERIQUE_03 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitPcPLNmoins5Numerique03() {
		return KEY_MESSAGE_SECTIONHIT_PCPLNMOINS5_NUMERIQUE_03;
	} // Fin de fournirKeyMessageSectionHitPcPLNmoins5Numerique03()._______



	/**
	 * Getter du <b>SINGLETON de messageSectionHitPcPLNmoins5Numerique03 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitPcPLNmoins5Numerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitPcPLNmoins5Numerique03 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitPcPLNmoins5Numerique03() 
													throws Exception {
		return fournirMessageSectionHitPcPLNmoins5Numerique03();
	} // Fin de getMessageSectionHitPcPLNmoins5Numerique03().______________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitPcPLNmoins5Numerique03 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitPcPLNmoins5Numerique03.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitPcPLNmoins5Numerique03(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitPcPLNmoins5Numerique03
							, fournirKeyMessageSectionHitPcPLNmoins5Numerique03());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitPcPLNmoins5Numerique03(...).___________	


	
	/* 106 - evaluationPLNmoins5. ****************/
	/**
	 * retourne le messageSectionHitEvaluationPLNmoins5Renseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitEvaluationPLNmoins5Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitEvaluationPLNmoins5Renseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitEvaluationPLNmoins5Renseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitEvaluationPLNmoins5Renseigne01
					, fournirKeyMessageSectionHitEvaluationPLNmoins5Renseigne01()
					, MESSAGE_SECTIONHIT_EVALUATIONPLNMOINS5_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitEvaluationPLNmoins5Renseigne01().__
	

	
	/**
	 * Getter de la clé du messageSectionHitEvaluationPLNmoins5Renseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.evaluationPLNmoins5.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_EVALUATIONPLNMOINS5_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitEvaluationPLNmoins5Renseigne01() {
		return KEY_MESSAGE_SECTIONHIT_EVALUATIONPLNMOINS5_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitEvaluationPLNmoins5Renseigne01().



	/**
	 * Getter du <b>SINGLETON de messageSectionHitEvaluationPLNmoins5Renseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitEvaluationPLNmoins5Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitEvaluationPLNmoins5Renseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitEvaluationPLNmoins5Renseigne01() 
											throws Exception {
		return fournirMessageSectionHitEvaluationPLNmoins5Renseigne01();
	} // Fin de getMessageSectionHitEvaluationPLNmoins5Renseigne01().______
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitEvaluationPLNmoins5Renseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitEvaluationPLNmoins5Renseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitEvaluationPLNmoins5Renseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitEvaluationPLNmoins5Renseigne01
							, fournirKeyMessageSectionHitEvaluationPLNmoins5Renseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitEvaluationPLNmoins5Renseigne01(...).___



	/**
	 * retourne le messageSectionHitEvaluationPLNmoins5Regex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitEvaluationPLNmoins5Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitEvaluationPLNmoins5Regex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitEvaluationPLNmoins5Regex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitEvaluationPLNmoins5Regex02
					, fournirKeyMessageSectionHitEvaluationPLNmoins5Regex02()
					, MESSAGE_SECTIONHIT_EVALUATIONPLNMOINS5_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitEvaluationPLNmoins5Regex02().______
	

	
	/**
	 * Getter de la clé du messageSectionHitEvaluationPLNmoins5Regex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.evaluationPLNmoins5.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_EVALUATIONPLNMOINS5_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitEvaluationPLNmoins5Regex02() {
		return KEY_MESSAGE_SECTIONHIT_EVALUATIONPLNMOINS5_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitEvaluationPLNmoins5Regex02().___



	/**
	 * Getter du <b>SINGLETON de messageSectionHitEvaluationPLNmoins5Regex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitEvaluationPLNmoins5Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitEvaluationPLNmoins5Regex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitEvaluationPLNmoins5Regex02() 
													throws Exception {
		return fournirMessageSectionHitEvaluationPLNmoins5Regex02();
	} // Fin de getMessageSectionHitEvaluationPLNmoins5Regex02().__________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitEvaluationPLNmoins5Regex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitEvaluationPLNmoins5Regex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitEvaluationPLNmoins5Regex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitEvaluationPLNmoins5Regex02
							, fournirKeyMessageSectionHitEvaluationPLNmoins5Regex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitEvaluationPLNmoins5Regex02(...)._______


	
	/* 107 - pcNuitAnnuelNmoins5. ****************/
	/**
	 * retourne le messageSectionHitPcNuitAnnuelNmoins5Renseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitAnnuelNmoins5Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitPcNuitAnnuelNmoins5Renseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitPcNuitAnnuelNmoins5Renseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitPcNuitAnnuelNmoins5Renseigne01
					, fournirKeyMessageSectionHitPcNuitAnnuelNmoins5Renseigne01()
					, MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS5_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitPcNuitAnnuelNmoins5Renseigne01().__
	

	
	/**
	 * Getter de la clé du messageSectionHitPcNuitAnnuelNmoins5Renseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.pcNuitAnnuelNmoins5.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS5_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitPcNuitAnnuelNmoins5Renseigne01() {
		return KEY_MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS5_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitPcNuitAnnuelNmoins5Renseigne01().



	/**
	 * Getter du <b>SINGLETON de messageSectionHitPcNuitAnnuelNmoins5Renseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitAnnuelNmoins5Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitPcNuitAnnuelNmoins5Renseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitPcNuitAnnuelNmoins5Renseigne01() 
											throws Exception {
		return fournirMessageSectionHitPcNuitAnnuelNmoins5Renseigne01();
	} // Fin de getMessageSectionHitPcNuitAnnuelNmoins5Renseigne01().______
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitPcNuitAnnuelNmoins5Renseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitPcNuitAnnuelNmoins5Renseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitPcNuitAnnuelNmoins5Renseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitPcNuitAnnuelNmoins5Renseigne01
							, fournirKeyMessageSectionHitPcNuitAnnuelNmoins5Renseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitPcNuitAnnuelNmoins5Renseigne01(...).___



	/**
	 * retourne le messageSectionHitPcNuitAnnuelNmoins5Regex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitAnnuelNmoins5Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitPcNuitAnnuelNmoins5Regex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitPcNuitAnnuelNmoins5Regex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitPcNuitAnnuelNmoins5Regex02
					, fournirKeyMessageSectionHitPcNuitAnnuelNmoins5Regex02()
					, MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS5_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitPcNuitAnnuelNmoins5Regex02().______
	

	
	/**
	 * Getter de la clé du messageSectionHitPcNuitAnnuelNmoins5Regex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.pcNuitAnnuelNmoins5.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS5_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitPcNuitAnnuelNmoins5Regex02() {
		return KEY_MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS5_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitPcNuitAnnuelNmoins5Regex02().___



	/**
	 * Getter du <b>SINGLETON de messageSectionHitPcNuitAnnuelNmoins5Regex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitAnnuelNmoins5Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitPcNuitAnnuelNmoins5Regex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitPcNuitAnnuelNmoins5Regex02() 
													throws Exception {
		return fournirMessageSectionHitPcNuitAnnuelNmoins5Regex02();
	} // Fin de getMessageSectionHitPcNuitAnnuelNmoins5Regex02().__________
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitPcNuitAnnuelNmoins5Regex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitPcNuitAnnuelNmoins5Regex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitPcNuitAnnuelNmoins5Regex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitPcNuitAnnuelNmoins5Regex02
							, fournirKeyMessageSectionHitPcNuitAnnuelNmoins5Regex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitPcNuitAnnuelNmoins5Regex02(...)._______



	/**
	 * retourne le messageSectionHitPcNuitAnnuelNmoins5Numerique03 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitAnnuelNmoins5Numerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitPcNuitAnnuelNmoins5Numerique03 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitPcNuitAnnuelNmoins5Numerique03() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitPcNuitAnnuelNmoins5Numerique03
					, fournirKeyMessageSectionHitPcNuitAnnuelNmoins5Numerique03()
					, MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS5_NUMERIQUE_03_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitPcNuitAnnuelNmoins5Numerique03().__
	

	
	/**
	 * Getter de la clé du messageSectionHitPcNuitAnnuelNmoins5Numerique03 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.prOrigine.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS5_NUMERIQUE_03 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitPcNuitAnnuelNmoins5Numerique03() {
		return KEY_MESSAGE_SECTIONHIT_PCNUITANNUELNMOINS5_NUMERIQUE_03;
	} // Fin de fournirKeyMessageSectionHitPcNuitAnnuelNmoins5Numerique03().
	


	/**
	 * Getter du <b>SINGLETON de messageSectionHitPcNuitAnnuelNmoins5Numerique03 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitPcNuitAnnuelNmoins5Numerique03 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitPcNuitAnnuelNmoins5Numerique03 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitPcNuitAnnuelNmoins5Numerique03() 
													throws Exception {
		return fournirMessageSectionHitPcNuitAnnuelNmoins5Numerique03();
	} // Fin de getMessageSectionHitPcNuitAnnuelNmoins5Numerique03().______
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitPcNuitAnnuelNmoins5Numerique03 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitPcNuitAnnuelNmoins5Numerique03.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitPcNuitAnnuelNmoins5Numerique03(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitPcNuitAnnuelNmoins5Numerique03
							, fournirKeyMessageSectionHitPcNuitAnnuelNmoins5Numerique03());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitPcNuitAnnuelNmoins5Numerique03(...).___


	
	/* 108 - indiceFiabiliteMjaNmoins5. ****************/
	/**
	 * retourne le messageSectionHitIndiceFiabiliteMjaNmoins5Renseigne01 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitIndiceFiabiliteMjaNmoins5Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitIndiceFiabiliteMjaNmoins5Renseigne01 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitIndiceFiabiliteMjaNmoins5Renseigne01() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitIndiceFiabiliteMjaNmoins5Renseigne01
					, fournirKeyMessageSectionHitIndiceFiabiliteMjaNmoins5Renseigne01()
					, MESSAGE_SECTIONHIT_INDICEFIABLITEMJANMOINS5_RENSEIGNE_01_EN_DUR);

		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitIndiceFiabiliteMjaNmoins5Renseigne01().
	

	
	/**
	 * Getter de la clé du messageSectionHitIndiceFiabiliteMjaNmoins5Renseigne01 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.indiceFiabiliteMjaNmoins5.renseigne".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_INDICEFIABLITEMJANMOINS5_RENSEIGNE_01 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitIndiceFiabiliteMjaNmoins5Renseigne01() {
		return KEY_MESSAGE_SECTIONHIT_INDICEFIABLITEMJANMOINS5_RENSEIGNE_01;
	} // Fin de fournirKeyMessageSectionHitIndiceFiabiliteMjaNmoins5Renseigne01().



	/**
	 * Getter du <b>SINGLETON de messageSectionHitIndiceFiabiliteMjaNmoins5Renseigne01 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitIndiceFiabiliteMjaNmoins5Renseigne01 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitIndiceFiabiliteMjaNmoins5Renseigne01 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitIndiceFiabiliteMjaNmoins5Renseigne01() 
											throws Exception {
		return fournirMessageSectionHitIndiceFiabiliteMjaNmoins5Renseigne01();
	} // Fin de getMessageSectionHitIndiceFiabiliteMjaNmoins5Renseigne01().
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitIndiceFiabiliteMjaNmoins5Renseigne01 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitIndiceFiabiliteMjaNmoins5Renseigne01.<br/>
	* 
	* @throws Exception 
	*/
	public static void setMessageSectionHitIndiceFiabiliteMjaNmoins5Renseigne01(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitIndiceFiabiliteMjaNmoins5Renseigne01
							, fournirKeyMessageSectionHitIndiceFiabiliteMjaNmoins5Renseigne01());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitIndiceFiabiliteMjaNmoins5Renseigne01(...).



	/**
	 * retourne le messageSectionHitIndiceFiabiliteMjaNmoins5Regex02 
	 * par défaut de l'application.<br/>
	 * <ul>
	 * <li>lit le messageSectionHitIndiceFiabiliteMjaNmoins5Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return : String : messageSectionHitIndiceFiabiliteMjaNmoins5Regex02 
	 * dans les préférences.<br/>
	 * 
	 * @throws Exception 
	 */
	private static String fournirMessageSectionHitIndiceFiabiliteMjaNmoins5Regex02() 
			throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			return fournirAttribut(
					messageSectionHitIndiceFiabiliteMjaNmoins5Regex02
					, fournirKeyMessageSectionHitIndiceFiabiliteMjaNmoins5Regex02()
					, MESSAGE_SECTIONHIT_INDICEFIABLITEMJANMOINS5_REGEX_02_EN_DUR);
			
		} // Fin du bloc synchronized.__________________
		
	} // Fin de fournirMessageSectionHitIndiceFiabiliteMjaNmoins5Regex02().
	

	
	/**
	 * Getter de la clé du messageSectionHitIndiceFiabiliteMjaNmoins5Regex02 
	 * par défaut de l'application 
	 * dans SectionHit_CONTROLES.properties.<br/>
	 * "message.SectionHit.indiceFiabiliteMjaNmoins5.regex".<br/>
	 *
	 * @return KEY_MESSAGE_SECTIONHIT_INDICEFIABLITEMJANMOINS5_REGEX_02 : String.<br/>
	 */
	public static String fournirKeyMessageSectionHitIndiceFiabiliteMjaNmoins5Regex02() {
		return KEY_MESSAGE_SECTIONHIT_INDICEFIABLITEMJANMOINS5_REGEX_02;
	} // Fin de fournirKeyMessageSectionHitIndiceFiabiliteMjaNmoins5Regex02().



	/**
	 * Getter du <b>SINGLETON de messageSectionHitIndiceFiabiliteMjaNmoins5Regex02 
	 * par défaut dans l'application</b>.
	 * <ul>
	 * <li>lit le messageSectionHitIndiceFiabiliteMjaNmoins5Regex02 stocké 
	 * dans SectionHit_CONTROLES.properties 
	 * si il n'est pas null.</li>
	 * <li>valeur stockée en dur dans la classe sinon.</li>
	 * </ul>
	 * - retourne la valeur stockée en dur dans la classe
	 * si le properties ne peut être lu 
	 * (trace EX_TEC_INITIALISATION_08).<br/>
	 * <br/>
	 *
	 * @return messageSectionHitIndiceFiabiliteMjaNmoins5Regex02 : String.<br/>
	 * 
	 * @throws Exception 
	 */
	public static String getMessageSectionHitIndiceFiabiliteMjaNmoins5Regex02() 
													throws Exception {
		return fournirMessageSectionHitIndiceFiabiliteMjaNmoins5Regex02();
	} // Fin de getMessageSectionHitIndiceFiabiliteMjaNmoins5Regex02().____
	

	
	/**
	* Setter du <b>SINGLETON de messageSectionHitIndiceFiabiliteMjaNmoins5Regex02 
	* par défaut dans l'application</b>.<br/>
	* <b>Enregistre la valeur sur disque</b>.<br/>
	* <ul>
	* <li>crée le Properties preferences et le fichier 
	* SectionHit_CONTROLES.properties et les remplit avec des valeurs 
	* en dur si nécessaire.</li>
	* <li>modifie preferences avec la nouvelle valeur 
	* passée dans le setter.</li>
	* <li>ré-écrit entièrement le fichier SectionHit_CONTROLES.properties 
	* mis à jour.</li>
	* <li>trace EX_TEC_PARAMETRAGE_04.</li>
	* </ul>
	* - ne fait rien si le paramètre est null 
	* ou ne modifie pas la valeur existante.<br/>
	* <br/>
	*
	* @param pValue : String : 
	* valeur à passer à messageSectionHitIndiceFiabiliteMjaNmoins5Regex02.<br/>
	* 
	 * @throws Exception 
	*/
	public static void setMessageSectionHitIndiceFiabiliteMjaNmoins5Regex02(
			final String pValue) throws Exception {
		
		synchronized (SectionHitGestionnairePreferencesControles.class) {
			
			setterAttribut(
					pValue
						, messageSectionHitIndiceFiabiliteMjaNmoins5Regex02
							, fournirKeyMessageSectionHitIndiceFiabiliteMjaNmoins5Regex02());
			
		} // Fin du bloc synchronized.__________________
						
	} // Fin de setMessageSectionHitIndiceFiabiliteMjaNmoins5Regex02(...)._

			
			
} // FIN DE LA CLASSE SectionHitGestionnairePreferencesControles.------------
